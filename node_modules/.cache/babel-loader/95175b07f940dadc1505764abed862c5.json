{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/View.js\";\nimport React, { useEffect, useState } from 'react';\nimport AdminLink from '../management/AdminLinks';\nimport { Card, CardContent, Grid, makeStyles } from '@material-ui/core';\nimport \"./View.css\";\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  imgsize: {\n    width: \"100%\"\n  }\n}));\n\nfunction View() {\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [quiz, setQuiz] = useState([]);\n  const [que, setQue] = useState([]);\n  const [resultdata, setResultdata] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n    getQuizBySlug();\n  }, []);\n\n  const getQuizBySlug = async () => {\n    const data = {\n      quizSlug: id\n    };\n    const options = {\n      method: 'Post',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getQuizBySlug(data, options);\n    console.log(result.data.data);\n    setQuiz(result.data.data);\n    setQue(JSON.parse(result.data.data[0].questionData));\n    setResultdata(JSON.parse(result.data.data[0].resultData));\n  };\n\n  console.log(que);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AdminLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), quiz === null || quiz === void 0 ? void 0 : quiz.map((list, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: \"detailView\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, list.title)))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 29\n      }\n    }, \"Slug\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 38\n      }\n    }, list.slug)))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 24\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 29\n      }\n    }, \"language\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 43\n      }\n    }, list.language)))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }\n    }, \"upload\")), list.bannerImage ? /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: classes.imgsize,\n      src: `${list.image_base_path}/${list.bannerImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 31\n      }\n    }))) : /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      id: \"upload\",\n      className: \"title-text\",\n      name: \"upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 34\n      }\n    }, \"Image Not Uploaded\")))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 25\n      }\n    })), que === null || que === void 0 ? void 0 : que.map((que, index) => {\n      var _que$optionsArray;\n\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        sm: 6,\n        md: 6,\n        lg: 4,\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"createnumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 29\n        }\n      }, \"Question\")), /*#__PURE__*/React.createElement(Card, {\n        className: \"create-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"que-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 43\n        }\n      }, que.questionTitle)), (_que$optionsArray = que.optionsArray) === null || _que$optionsArray === void 0 ? void 0 : _que$optionsArray.map((options, index) => {\n        var _options$optionImg;\n\n        /*#__PURE__*/\n        React.createElement(\"div\", {\n          className: \"answerContainer\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 39\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"radio\",\n          readOnly: true,\n          name: `option_${index}`,\n          defaultChecked: que.answer,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 39\n          }\n        }), ((_options$optionImg = options.optionImg) === null || _options$optionImg === void 0 ? void 0 : _options$optionImg.length) ? /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          className: \"viewOption\",\n          key: optIndex,\n          id: \"cardbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 4,\n          sm: 4,\n          md: 4,\n          lg: 4,\n          className: \"div-image\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 22\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          className: \"view-img\",\n          src: `${list.image_base_path}/${options.optionImg}`,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 23\n          }\n        })), /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 8,\n          sm: 8,\n          md: 8,\n          lg: 8,\n          className: \"viewbg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(CardContent, {\n          className: \"view-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"view-option\",\n          id: \"cardText\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 21\n          }\n        }, options.optionLabel)))) : /*#__PURE__*/React.createElement(Grid, {\n          container: true,\n          className: \"viewOption\",\n          key: index,\n          id: \"cardbox\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Grid, {\n          item: true,\n          xs: 12,\n          sm: 12,\n          md: 12,\n          lg: 12,\n          className: \"viewbg\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 18\n          }\n        }, /*#__PURE__*/React.createElement(CardContent, {\n          className: \"view-card\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          className: \"view-option\",\n          id: \"cardText\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 21\n          }\n        }, options.optionLabel)))));\n      }))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 25\n        }\n      }));\n    }), resultdata === null || resultdata === void 0 ? void 0 : resultdata.map((res, index) => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        sm: 6,\n        md: 6,\n        lg: 4,\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"createnumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }\n      }, \"Result\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"createnumber1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 24\n        }\n      })), /*#__PURE__*/React.createElement(Card, {\n        className: \"create-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        className: \"result-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 27\n        }\n      }, res.maxScore), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"result-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 27\n        }\n      }, res.minScore), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"result-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 27\n        }\n      }, res.title), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"result-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 27\n        }\n      }, res.phrase), /*#__PURE__*/React.createElement(\"span\", {\n        className: \"result-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 27\n        }\n      }, res.needle), res.resultImage === \"\" ? /*#__PURE__*/React.createElement(\"span\", {\n        id: \"upload\",\n        className: \"result-text\",\n        name: \"upload\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 51\n        }\n      }, \"Image Not Uploaded\") : /*#__PURE__*/React.createElement(\"img\", {\n        className: classes.imgsize,\n        src: `${list.image_base_path}/${res.resultImage}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 29\n        }\n      })))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 25\n        }\n      }));\n    }));\n  }));\n}\n\nexport default View;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/View.js"],"names":["React","useEffect","useState","AdminLink","Card","CardContent","Grid","makeStyles","useParams","services","useStyles","theme","root","width","gridContainer","paddingTop","minHeight","imgsize","View","classes","id","quiz","setQuiz","que","setQue","resultdata","setResultdata","data","JSON","parse","localStorage","getItem","jwt","getQuizBySlug","quizSlug","options","method","headers","result","console","log","questionData","resultData","map","list","index","title","slug","language","bannerImage","image_base_path","questionTitle","optionsArray","answer","optionImg","length","optIndex","optionLabel","res","maxScore","minScore","phrase","needle","resultImage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport AdminLink from '../management/AdminLinks';\nimport { Card, CardContent, Grid, makeStyles} from '@material-ui/core';\nimport \"./View.css\"\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  gridContainer: {\n    paddingTop:\"20px\",\n    minHeight:\"100vh\"\n  },\n  imgsize:{\n    width:\"100%\"\n  }\n  \n}));\nfunction View() {\n  const classes = useStyles()\n  const {id}=useParams();\n  const [quiz,setQuiz]=useState([])\n  const [que,setQue]=useState([])\n  const [resultdata,setResultdata]=useState([])\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n      getQuizBySlug();\n  }, [])\n\n  const getQuizBySlug = async () => {\n       const data={\n         quizSlug:id\n       }\n      const options = {\n          method: 'Post',\n          headers: {\n              \"Apiuserid\": \"49507884\",\n              \"Scope\": \"In.QuizApp.READ\",\n              \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n      }\n      const result = await services.getQuizBySlug(data,options)\n      console.log(result.data.data)\n      setQuiz(result.data.data)\n      setQue(JSON.parse(result.data.data[0].questionData))\n      setResultdata(JSON.parse(result.data.data[0].resultData))\n  };\n\n  console.log(que)\n    return (\n        <>\n            <AdminLink/>\n           {\n             quiz?.map((list,index)=>{\n               return(\n                <Grid container className=\"detailView\">\n                <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                        <div className=\"createnumber\">\n                            <h3>Title</h3>\n                        </div>\n                        <Card className=\"create-list\">\n                        <Grid container justify=\"center\">\n                            <span className=\"title-text\">{list.title}</span>\n                        </Grid>\n                        </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n               </Grid>\n                      <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} >\n                        <div className=\"createnumber\">\n                            <h3>Slug</h3>\n                        </div>\n                          <Card className=\"create-list\">\n                                      <Grid\n                                      container\n                                      justify=\"center\"\n                                     >\n                                     <span className=\"title-text\">{list.slug}</span>    \n                                   </Grid>\n                          </Card>\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                       <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} >\n                        <div className=\"createnumber\">\n                            <h3>language</h3>\n                        </div>\n                          <Card className=\"create-list\">\n                                      <Grid\n                                      container\n                                      justify=\"center\"\n                                     >\n                                          <span className=\"title-text\">{list.language}</span>\n                                   </Grid>\n                          </Card>\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                      <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} >\n                        <div className=\"createnumber\">\n                            <h3>upload</h3>\n                        </div>\n                        {\n                          list.bannerImage?\n                          <Card className=\"create-list\">\n                              <Grid container justify=\"center\" >\n                              <img className={classes.imgsize} src={`${list.image_base_path}/${list.bannerImage}`}/>\n                              </Grid>\n                          </Card>:\n                           <Card className=\"create-list\">\n                              <Grid container justify=\"center\" >\n                                 <span  id=\"upload\" className=\"title-text\" name=\"upload\">Image Not Uploaded</span>\n                              </Grid>\n                           </Card>\n                        }\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                      {\n                        que?.map((que,index)=>{\n                          return(\n                            <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                        <div className=\"createnumber\">\n                            <h3>Question</h3>\n                        </div>\n                          <Card className=\"create-list\">\n                                      <Grid\n                                      container\n                                      justify=\"center\"\n                                     >\n                                          <span className=\"que-text\">{que.questionTitle}</span>\n                                   </Grid>\n                                   {que.optionsArray?.map((options, index) => {\n                                      <div className=\"answerContainer\">\n                                      <input type=\"radio\" readOnly  name={`option_${index}`} defaultChecked={que.answer} />\n                                      {options.optionImg?.length ?\n                     <Grid\n                     container\n                     className=\"viewOption\"\n                     key={optIndex}\n                     id=\"cardbox\">\n                     <Grid item xs={4} sm={4} md={4} lg={4} className=\"div-image\" >\n                      <img className=\"view-img\"  src={`${list.image_base_path}/${options.optionImg}`} /> \n                    </Grid>\n                    <Grid item xs={8} sm={8} md={8} lg={8} className=\"viewbg\" >\n                    <CardContent className=\"view-card\">\n                    <h3 className=\"view-option\" id=\"cardText\">\n                         {options.optionLabel}\n                       </h3>\n                    </CardContent>\n                  </Grid>\n                  </Grid>\n                  : \n                \n                  <Grid\n                  container\n                  className=\"viewOption\"\n                  key={index}\n                  id=\"cardbox\">\n                 <Grid item xs={12} sm={12} md={12} lg={12} className=\"viewbg\" >\n                    <CardContent className=\"view-card\">\n                    <h3 className=\"view-option\" id=\"cardText\">\n                         {options.optionLabel}\n                       </h3>\n                    </CardContent>\n                  </Grid>\n               </Grid>\n                  }\n                 \n                                     </div>\n\n                })\n              }\n                                 \n                          </Card>\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                          )\n\n                        })\n                      }\n                       {/* <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                        <div className=\"createnumber\">\n                            <h3>Question</h3>\n                        </div>\n                          <Card className=\"create-list\">\n                                      <Grid\n                                      container\n                                      justify=\"center\"\n                                     >\n                                          <span className=\"que-text\">{list.questionTitle}</span>\n                                   </Grid>\n                                  <div className=\"answerContainer\">\n                                      <div className=\"create-answer\">Answer</div>\n                                  </div>\n                          </Card>\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid> */}\n                      {\n                        resultdata?.map((res,index)=>{\n                          return(\n                      <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                        <div>\n                        <div className=\"createnumber\">\n                            <h3>Result</h3>\n                        </div>\n                       <div className=\"createnumber1\">\n                       </div>\n                        </div>\n                          <Card className=\"create-list\">\n                            <Grid container justify=\"center\">\n                          <span className=\"result-text\">{res.maxScore}</span>\n                          <span className=\"result-text\">{res.minScore}</span>\n                          <span className=\"result-text\">{res.title}</span>\n                          <span className=\"result-text\">{res.phrase}</span> \n                          <span className=\"result-text\">{res.needle}</span> \n                          {\n                            res.resultImage ===\"\"?<span  id=\"upload\" className=\"result-text\" name=\"upload\">Image Not Uploaded</span>:\n                            <img className={classes.imgsize} src={`${list.image_base_path}/${res.resultImage}`}/>\n                          }\n                          </Grid>\n                          </Card>\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                       )\n                      })\n                    }\n                      </Grid>\n               )\n             })\n           }\n        </>\n    )\n}\n\nexport default View\n"]},"metadata":{},"sourceType":"module"}