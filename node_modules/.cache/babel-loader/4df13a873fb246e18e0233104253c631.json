{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/control/Cards.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport './Card.css';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport { Link } from \"react-router-dom\";\nimport { Grid } from '@material-ui/core';\nimport services from '../services/services';\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: theme.spacing(1)\n  },\n  card: {\n    maxWidth: 350,\n    margin: \"50px\",\n    marginTop: \"120px\"\n  },\n  media: {\n    height: 50\n  },\n  edit: {\n    float: \"left\",\n    margin: \"5px\",\n    fontSize: \"10px\",\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  active: {\n    float: \"right\",\n    margin: \"5px\",\n    fontSize: \"10px\",\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dlt: {\n    float: \"right\",\n    margin: \"5px\",\n    fontSize: \"10px\",\n    background: \"#E70808\",\n    color: \"#fff\"\n  },\n  col: {\n    display: \"flex\"\n  }\n}));\nexport default function Cards({\n  category\n}) {\n  const classes = useStyles();\n  const [status, setStatus] = useState();\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n\n  const checkedStatus = id => async () => {\n    var data = {\n      categoryId: id\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.categoryStatus(data, options);\n\n    if (result.data.status === 200) {\n      setStatus(true);\n    }\n  };\n\n  if (status) {\n    window.location.reload(false);\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Card, {\n    className: classes.root,\n    variant: \"outlined\",\n    key: category.categoryId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: \"carddata\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    sm: 4,\n    md: 4,\n    lg: 4,\n    className: \"imgpart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"categoryImg\",\n    src: category.image,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 8,\n    sm: 8,\n    md: 8,\n    lg: 8,\n    className: \"optionbg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(CardContent, {\n    className: \"cardcontent\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"optioncontent\",\n    id: \"cardText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 19\n    }\n  }, category.title)))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, category.status === \"active\" ? /*#__PURE__*/React.createElement(Button, {\n    className: classes.dlt,\n    size: \"small\",\n    variant: \"contained\",\n    onClick: checkedStatus(category.categoryId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 22\n    }\n  }, \"Deactive\") : /*#__PURE__*/React.createElement(Button, {\n    className: classes.active,\n    size: \"small\",\n    variant: \"contained\",\n    onClick: checkedStatus(category.categoryId),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 26\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(Link, {\n    to: `/allquestionlist/${category.categoryId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.edit,\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  }, \"Questions\")), /*#__PURE__*/React.createElement(Link, {\n    to: `/allquestionlist/${category.categoryId}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: classes.edit,\n    size: \"small\",\n    variant: \"contained\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 19\n    }\n  }, \"Edit\")))));\n}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/control/Cards.js"],"names":["React","useState","makeStyles","Card","CardActions","CardContent","Button","Link","Grid","services","useStyles","theme","paper","padding","spacing","card","maxWidth","margin","marginTop","media","height","edit","float","fontSize","background","color","active","dlt","col","display","Cards","category","classes","status","setStatus","data","JSON","parse","localStorage","getItem","jwt","checkedStatus","id","categoryId","options","method","headers","result","categoryStatus","window","location","reload","root","image","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport  './Card.css'\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Button from '@material-ui/core/Button';\n\nimport {Link} from  \"react-router-dom\"\nimport { Grid } from '@material-ui/core';\nimport services from '../services/services';\n\nconst useStyles = makeStyles((theme)=>({\n   \n      paper: {\n        padding: theme.spacing(1),\n   \n      },\n  card: {\n    maxWidth: 350,\n    margin:\"50px\",\n    marginTop:\"120px\"\n\n  },\n  media: {\n    height:50\n  },\n  edit:{\n    float:\"left\",\n    margin: \"5px\",\n    fontSize:\"10px\",\n    background:\"#133b5c\",\n    color:\"#fff\",\n  },\n  active:{\n    float:\"right\",\n    margin: \"5px\",\n    fontSize:\"10px\",\n    background:\"#133b5c\",\n    color:\"#fff\",\n  },\n  dlt:{\n    float:\"right\",\n    margin: \"5px\",\n    fontSize:\"10px\",\n    background:\"#E70808\",\n    color:\"#fff\",\n  },\n  \n  col:{\n    display:\"flex\",\n  }\n\n}));\n\nexport default function Cards({category}) {\n  const classes = useStyles();\n  const[status,setStatus]=useState()\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const checkedStatus = (id) => async () => {\n    \n    var data = {\n     categoryId: id,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.categoryStatus(data, options)\n    if(result.data.status===200){\n      setStatus(true)\n    }\n\n  }\nif(status){\n  window.location.reload(false);\n}\n  return (\n    <>\n      <Card className={classes.root}     variant=\"outlined\" key={category.categoryId} >\n         <Grid container className=\"carddata\">\n              <Grid item xs={4} sm={4} md={4} lg={4} className=\"imgpart\" >\n                <img className=\"categoryImg\" src={category.image} /> \n              </Grid>\n              <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                <CardContent className=\"cardcontent\">\n                  <h3 className=\"optioncontent\" id=\"cardText\">\n                      {category.title}\n                  </h3>\n                   </CardContent>\n              </Grid>\n        </Grid>\n            \n            <div>\n            {\n                     category.status === \"active\" ?\n                     <Button\n                     className={classes.dlt}\n                     size=\"small\"\n                     variant=\"contained\"\n                     onClick={checkedStatus(category.categoryId)}\n                     >\n                    Deactive\n                    </Button> :\n                         <Button\n                         className={classes.active}\n                         size=\"small\"\n                         variant=\"contained\"\n                         onClick={checkedStatus(category.categoryId)}\n                         >\n                        Active\n                        </Button>\n                    }\n                   \n                  <Link to={`/allquestionlist/${category.categoryId}`} >\n                  <Button\n                    className={classes.edit}\n                    size=\"small\"\n                    variant=\"contained\"\n                   \n                    >\n                   Questions\n                   </Button>\n                  </Link>\n                  <Link to={`/allquestionlist/${category.categoryId}`} >\n                  <Button\n                    className={classes.edit}\n                    size=\"small\"\n                    variant=\"contained\"\n                    >Edit\n                   </Button>\n                  </Link>\n          </div>\n        \n    </Card>\n        \n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}