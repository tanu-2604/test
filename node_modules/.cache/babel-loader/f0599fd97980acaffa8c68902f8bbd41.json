{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/management/AdminForm.js\";\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography } from '@material-ui/core';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport User from './User';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  heading: {\n    textAlign: \"center\",\n    fontWeight: \"500\",\n    color: \"#133b5c\"\n  },\n  btn: {\n    float: \"left\",\n    margin: \"10px\",\n    background: \"#133b5c\",\n    color: \"#fff\",\n    '&: hover': {\n      color: \"#133b5c !important\"\n    }\n  }\n}));\n\nfunction AdminForm() {\n  const classes = useStyles();\n  const [loggedIn, setLoggedIn] = useState(false);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n\n  const createAdmin = async () => {\n    var firstName = document.getElementById(\"firstName\").value;\n    var lastName = document.getElementById(\"lastName\").value;\n    var username = document.getElementById(\"username\").value;\n    var password = document.getElementById(\"password\").value;\n    var passw = /^[A-Za-z]\\w{6,20}$/;\n\n    if (firstName === \"\" && lastName === \"\" && username === \"\") {} else if (password.value.match(passw)) {\n      alert('Correct, try another...');\n      return true;\n    } else {}\n\n    var data = {\n      firstName: firstName,\n      lastName: lastName,\n      username: username,\n      password: password\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.createAdmin(data, options);\n    console.log(result);\n\n    if (result.data.code == 200) {\n      setLoggedIn(true);\n    }\n  };\n\n  if (loggedIn) {\n    window.location.reload(true);\n  }\n\n  return /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h5\",\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, \"Create User\"), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"firstName\",\n    label: \"First Name\",\n    type: \"firstName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"lastName\",\n    label: \"Last Name\",\n    type: \"lastName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"username\",\n    label: \"User Name\",\n    type: \"userName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    className: classes.btn,\n    size: \"normal\",\n    variant: \"contained\",\n    onClick: createAdmin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Create\"), /*#__PURE__*/React.createElement(Button, {\n    className: classes.btn,\n    size: \"normal\",\n    variant: \"contained\" // onClick={addTask}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Reset\"));\n}\n\nexport default AdminForm;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/management/AdminForm.js"],"names":["React","useState","TextField","makeStyles","Button","Typography","services","Redirect","User","useStyles","theme","root","margin","spacing","width","heading","textAlign","fontWeight","color","btn","float","background","AdminForm","classes","loggedIn","setLoggedIn","data","JSON","parse","localStorage","getItem","jwt","createAdmin","firstName","document","getElementById","value","lastName","username","password","passw","match","alert","options","method","headers","result","console","log","code","window","location","reload"],"mappings":"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","sourcesContent":["import React,{useState} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography } from '@material-ui/core';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport User from './User';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n    heading:{\n          textAlign:\"center\",\n          fontWeight:\"500\",\n          color:\"#133b5c\"   \n         },\n    btn:{\n        float:\"left\",\n        margin:\"10px\",\n        background:\"#133b5c\",\n        color:\"#fff\",\n        '&: hover':{\n        color: \"#133b5c !important\",\n        }\n\n    }\n  }));\nfunction AdminForm() {\n    const classes = useStyles();\n    const[loggedIn,setLoggedIn]=useState(false)\n\n   const  data= JSON.parse(localStorage.getItem('friend'));\n   const jwt= data['jwt'];\n\n    const createAdmin = async() => {\n      var firstName = document.getElementById(\"firstName\").value;\n      var lastName = document.getElementById(\"lastName\").value;\n      var username = document.getElementById(\"username\").value;\n      var password = document.getElementById(\"password\").value;\n      var passw=  /^[A-Za-z]\\w{6,20}$/;\n\n     if(firstName===\"\"&&lastName===\"\" && username===\"\")\n     {\n\n     }\n     else if(password.value.match(passw))\n     {\n      alert('Correct, try another...');\n      return true;\n     }\n     else{\n\n     }\n      var data = {\n        firstName:firstName,\n        lastName: lastName,\n        username: username,\n        password: password,\n      }\n      const options = {\n        method: 'POST',\n       headers:{\n          \"Apiuserid\": \"49507884\",\n          \"Scope\": \"In.QuizApp.INSERT\",\n          \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n       }\n      }\n        const result= await services.createAdmin(data,options)\n        console.log(result)\n       if(result.data.code==200)\n       {\n        setLoggedIn(true)\n       }\n    }  \n  if(loggedIn)\n  {\n    window.location.reload(true);\n   \n  }\n\n\n    return (\n        <form className={classes.root}>\n            <Typography variant=\"h5\" className={classes.heading}>Create User</Typography>\n            <div>\n                <TextField\n                id=\"firstName\"\n                label=\"First Name\"\n                type=\"firstName\"\n                />\n            </div>\n            <div>\n                <TextField\n                id=\"lastName\"\n                label=\"Last Name\"\n                type=\"lastName\"\n                />\n            </div>\n            <div>\n                <TextField\n                id=\"username\"\n                label=\"User Name\"\n                type=\"userName\"\n                />\n            </div>\n            <div>\n              <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              />\n            </div> \n    \n            <Button\n            className={classes.btn}\n            size=\"normal\"\n            variant=\"contained\"\n            onClick={createAdmin}\n              >\n                Create\n            </Button>\n            <Button\n            className={classes.btn}\n            size=\"normal\"\n            variant=\"contained\"\n            // onClick={addTask}\n            >\n                Reset\n              </Button>\n        </form>\n    )\n}\n\nexport default AdminForm\n"]},"metadata":{},"sourceType":"module"}