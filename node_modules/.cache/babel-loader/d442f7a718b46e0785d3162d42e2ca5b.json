{"ast":null,"code":"import _regeneratorRuntime from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{makeStyles}from'@material-ui/core/styles';import Card from'@material-ui/core/Card';import'./Card.css';import CardActions from'@material-ui/core/CardActions';import CardContent from'@material-ui/core/CardContent';import Button from'@material-ui/core/Button';import{Link}from\"react-router-dom\";import{Grid}from'@material-ui/core';import services from'../services/services';var useStyles=makeStyles(function(theme){return{paper:{padding:theme.spacing(1)},card:{maxWidth:350,margin:\"50px\",marginTop:\"120px\"},media:{height:50},edit:{float:\"left\",margin:\"3px\",fontSize:\"10px\",background:\"#133b5c\",color:\"#fff\"},active:{margin:\"3px\",float:\"left\",fontSize:\"10px\",background:\"#133b5c\",color:\"#fff\"},dlt:{margin:\"3px\",float:\"left\",fontSize:\"10px\",background:\"#E70808\",color:\"#fff\"},col:{display:\"flex\"}};});export default function Cards(_ref){var category=_ref.category;var classes=useStyles();var _useState=useState(),_useState2=_slicedToArray(_useState,2),status=_useState2[0],setStatus=_useState2[1];var data=JSON.parse(localStorage.getItem('friend'));var jwt=data['jwt'];var checkedStatus=function checkedStatus(id){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var data,options,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:data={categoryId:id};options={method:'POST',headers:{\"Apiuserid\":\"49507884\",\"Scope\":\"In.QuizApp.LOGIN\",\"Authorization\":\"quizApp-oauthtoken \".concat(jwt)}};_context.next=4;return services.categoryStatus(data,options);case 4:result=_context.sent;if(result.data.status===200){setStatus(true);}case 6:case\"end\":return _context.stop();}}},_callee);}));};if(status){window.location.reload(false);}return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(Card,{className:classes.root,variant:\"outlined\",key:category.categoryId},/*#__PURE__*/React.createElement(Grid,{container:true,className:\"carddata\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:4,sm:4,md:4,lg:4,className:\"imgpart\"},/*#__PURE__*/React.createElement(\"img\",{className:\"categoryImg\",src:category.image})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:8,sm:8,md:8,lg:8,className:\"optionbg\"},/*#__PURE__*/React.createElement(CardContent,{className:\"cardcontent\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"optioncontent\",id:\"cardText\"},category.title)))),/*#__PURE__*/React.createElement(\"div\",null,category.status===\"active\"?/*#__PURE__*/React.createElement(Button,{className:classes.dlt,size:\"small\",variant:\"contained\",onClick:checkedStatus(category.categoryId)},\"Deactive\"):/*#__PURE__*/React.createElement(Button,{className:classes.active,size:\"small\",variant:\"contained\",onClick:checkedStatus(category.categoryId)},\"Active\"),/*#__PURE__*/React.createElement(Link,{to:\"/allquestionlist/\".concat(category.categoryId)},/*#__PURE__*/React.createElement(Button,{className:classes.edit,size:\"small\",variant:\"contained\"},\"Questions\")),/*#__PURE__*/React.createElement(Link,{to:\"/allquestionlist/\".concat(category.categoryId)},/*#__PURE__*/React.createElement(Button,{className:classes.edit,size:\"small\",variant:\"contained\"},\"Edit\")))));}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/control/Cards.js"],"names":["React","useState","makeStyles","Card","CardActions","CardContent","Button","Link","Grid","services","useStyles","theme","paper","padding","spacing","card","maxWidth","margin","marginTop","media","height","edit","float","fontSize","background","color","active","dlt","col","display","Cards","category","classes","status","setStatus","data","JSON","parse","localStorage","getItem","jwt","checkedStatus","id","categoryId","options","method","headers","categoryStatus","result","window","location","reload","root","image","title"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport  './Card.css'\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Button from '@material-ui/core/Button';\n\nimport {Link} from  \"react-router-dom\"\nimport { Grid } from '@material-ui/core';\nimport services from '../services/services';\n\nconst useStyles = makeStyles((theme)=>({\n   \n      paper: {\n        padding: theme.spacing(1),\n   \n      },\n  card: {\n    maxWidth: 350,\n    margin:\"50px\",\n    marginTop:\"120px\"\n\n  },\n  media: {\n    height:50\n  },\n  edit:{\n    float:\"left\",\n    margin: \"3px\",\n    fontSize:\"10px\",\n    background:\"#133b5c\",\n    color:\"#fff\",\n  },\n  active:{\n    margin: \"3px\",\n    float:\"left\",\n    fontSize:\"10px\",\n    background:\"#133b5c\",\n    color:\"#fff\",\n  },\n  dlt:{\n    margin: \"3px\",\n    float:\"left\",\n    fontSize:\"10px\",\n    background:\"#E70808\",\n    color:\"#fff\",\n  },\n  \n  col:{\n    display:\"flex\",\n  }\n\n}));\n\nexport default function Cards({category}) {\n  const classes = useStyles();\n  const[status,setStatus]=useState()\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const checkedStatus = (id) => async () => {\n    \n    var data = {\n     categoryId: id,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.categoryStatus(data, options)\n    if(result.data.status===200){\n      setStatus(true)\n    }\n\n  }\nif(status){\n  window.location.reload(false);\n}\n  return (\n    <>\n      <Card className={classes.root}     variant=\"outlined\" key={category.categoryId} >\n         <Grid container className=\"carddata\">\n              <Grid item xs={4} sm={4} md={4} lg={4} className=\"imgpart\" >\n                <img className=\"categoryImg\" src={category.image} /> \n              </Grid>\n              <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                <CardContent className=\"cardcontent\">\n                  <h3 className=\"optioncontent\" id=\"cardText\">\n                      {category.title}\n                  </h3>\n                   </CardContent>\n              </Grid>\n        </Grid>\n            \n            <div>\n            {\n                     category.status === \"active\" ?\n                     <Button\n                     className={classes.dlt}\n                     size=\"small\"\n                     variant=\"contained\"\n                     onClick={checkedStatus(category.categoryId)}\n                     >\n                    Deactive\n                    </Button> :\n                         <Button\n                         className={classes.active}\n                         size=\"small\"\n                         variant=\"contained\"\n                         onClick={checkedStatus(category.categoryId)}\n                         >\n                        Active\n                        </Button>\n                    }\n                   \n                  <Link to={`/allquestionlist/${category.categoryId}`} >\n                  <Button\n                    className={classes.edit}\n                    size=\"small\"\n                    variant=\"contained\"\n                   \n                    >\n                   Questions\n                   </Button>\n                  </Link>\n                  <Link to={`/allquestionlist/${category.categoryId}`} >\n                  <Button\n                    className={classes.edit}\n                    size=\"small\"\n                    variant=\"contained\"\n                    >Edit\n                   </Button>\n                  </Link>\n          </div>\n        \n    </Card>\n        \n    </>\n  );\n}"]},"metadata":{},"sourceType":"module"}