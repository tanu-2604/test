{"ast":null,"code":"import React,{useState,useEffect}from'react';import'../style/score.css';import{Grid,Paper,Card,CardMedia,CardContent,Typography}from'@material-ui/core';import{makeStyles}from'@material-ui/core/styles';import ReactSpeedometer from\"react-d3-speedometer\";import{Link}from'react-router-dom';import Footer from'../footer/Footer';var useStyles=makeStyles(function(theme){return{gridContainer:{paddingLeft:\"20px\",paddingRight:\"20px\",background:\"#7555D9\",minHeight:\"100vh\"},paper:{padding:theme.spacing(2),textAlign:'center',color:theme.palette.text.secondary}};});function Score(props){console.log(props);var score=props.location.state.data.score;var createdBy=props.location.state.createdBy.createdBy;var feedbackBy=props.location.state.feedbackBy;var list=props.location.state.quizlist.quizlist.length;var value=score/list*100;console.log(value);if(value>=81&&value<=100){var text=\"Best Friend\";}else if(value>=61&&value<=80){var text=\"Good Friend\";}else if(value>=41&&value<=60){var text=\"Average Friend\";}else if(value>=21&&value<=40){var text=\"Bad Friend\";}else{var text=\"Very Bad Friend\";}var classes=useStyles();return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:classes.gridContainer},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:6,md:6,lg:4},/*#__PURE__*/React.createElement(\"div\",{justify:\"center\",className:classes.head},/*#__PURE__*/React.createElement(\"h3\",{className:\"text1\"},\"2021 Friendship\"),/*#__PURE__*/React.createElement(\"h3\",{className:\"text2\"},\"Dare\")),/*#__PURE__*/React.createElement(Card,{className:\"score-card\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"how\"},\"Your Score:   \",score,\"/\",list),/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(ReactSpeedometer,{maxValue:list,value:score,minValue:0,className:\"speedometer\",segments:5,ringWidth:60,needleTransition:\"easeBackInOut\",segmentColors:[\"#7555D9\",\" #7555D9\",\" #7555D9\",\" #7555D9\"],needleColor:\"#707070\",customSegmentLabels:[{text:\"😡\",position:\"INSIDE\",color:\"#fff\",fontSize:\"35px\"},{text:\"😞\",position:\"INSIDE\",color:\"#fff\",fontSize:\"35px\"},{text:\"😐\",position:\"INSIDE\",color:\"#fff\",fontSize:\"35px\"},{text:\"😊\",position:\"INSIDE\",color:\"#fff\",fontSize:\"35px\"},{text:\"😍\",position:\"INSIDE\",color:\"#fff\",fontSize:\"35px\"}]})),/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"score-value\"},text)),/*#__PURE__*/React.createElement(Link,{to:\"/choosecategory\"},/*#__PURE__*/React.createElement(\"button\",{className:\"copy\"},\"Create Your Quiz\")),/*#__PURE__*/React.createElement(\"div\",{className:\"sharelink\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"knows\"},\"Who knows \",createdBy,\" best:\")),/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\"},/*#__PURE__*/React.createElement(\"table\",{className:\"table-data\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"th\",null,\"Name\"),/*#__PURE__*/React.createElement(\"th\",null,\"Score\"))),/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,feedbackBy),/*#__PURE__*/React.createElement(\"td\",null,score))))))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:6,md:6,lg:4}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true})),/*#__PURE__*/React.createElement(Footer,null)));}export default Score;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/form/Score.js"],"names":["React","useState","useEffect","Grid","Paper","Card","CardMedia","CardContent","Typography","makeStyles","ReactSpeedometer","Link","Footer","useStyles","theme","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","Score","props","console","log","score","location","state","data","createdBy","feedbackBy","list","quizlist","length","value","classes","head","position","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport '../style/score.css'\nimport {  Grid, Paper,Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactSpeedometer from \"react-d3-speedometer\"\nimport { Link } from 'react-router-dom';\nimport Footer from '../footer/Footer';\n\n\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    \n  }));\n  \nfunction Score(props) {\n  console.log(props)\n  const score=props.location.state.data.score;\n  const createdBy=props.location.state.createdBy.createdBy;\n  const feedbackBy=props.location.state.feedbackBy;\n  const list=props.location.state.quizlist.quizlist.length;\n \n     var value=(score/list)*100;\n     console.log(value)\n  if(value >= 81 && value <=100)\n  {\n    var text=\"Best Friend\"  \n  }\n  else if(value >= 61 && value <=80)\n  {\n    var text=\"Good Friend\"\n  }\n  else if(value >= 41 && value <=60)\n  {\n    var text =\"Average Friend\"\n  }\n  else if(value >= 21 && value <=40)\n  {\n    var text=\"Bad Friend\"\n  }\n  else{\n    var text =\"Very Bad Friend\"\n  }\n\n  const classes = useStyles();\n    return (\n    <>\n    <div className={classes.gridContainer}>\n    <Grid container>\n       <Grid item xs></Grid>\n      <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\" className={classes.head}>\n              <h3 className=\"text1\">2021 Friendship</h3>\n              <h3 className=\"text2\">Dare</h3>\n          </div>\n          <Card className=\"score-card\">\n               <h3 className=\"how\">Your Score:   {score}/{list}</h3>\n            <Grid container justify=\"center\">  \n                <ReactSpeedometer\n                    maxValue={list}\n                    value={score}\n                    minValue={0}\n                    className=\"speedometer\"\n                    segments={5}\n                    ringWidth={60}\n                    needleTransition={\"easeBackInOut\"}\n                    segmentColors={[\"#7555D9\",\" #7555D9\",\" #7555D9\",\" #7555D9\"]}\n                    needleColor={\"#707070\"}\n                    customSegmentLabels={[\n                      {\n                        text: \"😡\",\n                        position: \"INSIDE\",\n                        color:\"#fff\",\n                        fontSize:\"35px\",\n                        \n                      \n                        \n                      },\n                      {\n                        text: \"😞\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                      \n                      },\n                      {\n                        text: \"😐\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                        \n                      },\n                      \n                      {\n                        text: \"😊\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                      \n                      },\n                      {\n                        text: \"😍\",\n                        position: \"INSIDE\",\n                        color:\"#fff\",\n                        fontSize:\"35px\",\n                      \n                        \n                      },\n                    ]}\n                /> \n             </Grid>\n             <Grid container justify=\"center\">\n             <h4 className=\"score-value\">{text}</h4>\n             </Grid>\n            <Link to=\"/choosecategory\"><button className=\"copy\">Create Your Quiz</button></Link>  \n              <div className=\"sharelink\">\n                <h3 className=\"knows\">Who knows {createdBy} best:</h3>\n              </div>\n                              <Grid container justify=\"center\">                   \n                                    <table className=\"table-data\">\n                                        <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Score</th>\n                                        </tr>\n                                        </thead>\n                                       <tbody>\n                                       <tr>\n                  <td>{feedbackBy}</td>\n                  <td>{score}</td>\n                                        </tr>\n                                       </tbody>\n                                    </table>                   \n                              </Grid>              \n        </Card>\n\n    </Grid>\n    <Grid item xs>\n\n    </Grid>\n\n    </Grid>\n    <br/>\n    <Grid container>\n    <Grid item xs>\n\n    </Grid>\n    <Grid item xs={11} sm={6} md={6} lg={4}>\n\n    </Grid>\n    <Grid item xs>\n\n    </Grid>\n    </Grid>\n    <Footer/>\n    </div>\n    \n    </>\n);\n}\n\nexport default Score\n"]},"metadata":{},"sourceType":"module"}