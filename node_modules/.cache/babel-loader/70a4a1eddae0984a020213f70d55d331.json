{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/form/PlayQuiz.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Paper, Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\"\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52'\n  }\n}))(LinearProgress);\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction PlayQuiz({\n  quizlist\n}) {\n  var _quiz$activeStep, _quiz$activeStep$opti;\n\n  console.log(quizlist);\n  let quiz = [{\n    label: quizlist === null || quizlist === void 0 ? void 0 : quizlist.question,\n    options: quizlist === null || quizlist === void 0 ? void 0 : quizlist.options\n  }];\n  const classes = useStyles();\n\n  if (quizlist === null || quizlist === void 0 ? void 0 : quizlist.length) {\n    quiz = quizlist;\n  }\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const maxSteps = quiz.length;\n\n  const handleSkip = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleSelect = optId => {\n    if (optId === quiz[activeStep].answerId) {\n      console.log(quiz[activeStep].answerId);\n    } else {\n      console.log(\"galat ho gya\");\n    }\n  };\n\n  const handleNext = optId => {\n    if (maxSteps - 1 === quiz[activeStep]) {\n      setActiveStep(prevActiveStep => prevActiveStep + 1);\n      handleSelect(optId);\n    } else {\n      console.log(\"gahjdh\");\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 21\n    }\n  }, \"2021 Friendship\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 21\n    }\n  }, \"Dare\")), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }\n  }, \"Question \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 55\n    }\n  }, \"1/15\"))), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"questioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"questionname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 5\n    }\n  }, quiz[activeStep].qusId, \":\", quiz[activeStep].title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carddesign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }\n  }, (_quiz$activeStep = quiz[activeStep]) === null || _quiz$activeStep === void 0 ? void 0 : (_quiz$activeStep$opti = _quiz$activeStep.options) === null || _quiz$activeStep$opti === void 0 ? void 0 : _quiz$activeStep$opti.map((options, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: \"optionpart\",\n      key: index,\n      onClick: () => {\n        handleNext(options.optionId);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 4\n      }\n    }, options.optionImg.length ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"optionImg\",\n      src: options.optionImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      className: \"optionbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"cardcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"optioncontent\",\n      id: \"cardText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 7\n      }\n    }, options.optionLabel))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, maxSteps - 1 == quiz[activeStep].title.length ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skip\",\n    onClick: handleSkip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 18\n    }\n  }, \"Skip the Question\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 20\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default PlayQuiz;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/form/PlayQuiz.js"],"names":["React","useState","useEffect","useParams","Grid","Paper","Card","CardMedia","CardContent","Typography","makeStyles","withStyles","LinearProgress","services","Redirect","BorderLinearProgress","theme","root","height","borderRadius","width","colorPrimary","backgroundColor","palette","grey","type","bar","useStyles","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","text","secondary","pro","PlayQuiz","quizlist","console","log","quiz","label","question","options","classes","length","activeStep","setActiveStep","maxSteps","handleSkip","prevActiveStep","handleSelect","optId","answerId","handleNext","qusId","title","map","index","optionId","optionImg","optionLabel"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport { useParams } from 'react-router-dom';\nimport {  Grid, Paper,Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n      height: 10,\n      borderRadius: 5,\n      width:\"100%\",\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#FFDD52',\n    },\n  }))(LinearProgress);\n  \nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      pro:{\n          textAlign:\"center\"\n      }\n    \n  }));\nfunction PlayQuiz({quizlist}) {\n  console.log(quizlist)\n \n  let quiz = [\n    {\n        label: quizlist?.question,\n        options: quizlist?.options,\n    },\n];\n\n    const classes = useStyles();\n    if (quizlist?.length) {\n      quiz = quizlist;\n    }\n    \n    const [activeStep, setActiveStep] = React.useState(0);\n    const maxSteps = quiz.length;\n\n    const handleSkip = () => { setActiveStep(prevActiveStep => prevActiveStep + 1); };\n    const handleSelect = (optId)=>{\n   if(optId=== quiz[activeStep].answerId){\n     console.log(quiz[activeStep].answerId)\n   }\n   else{\n     console.log(\"galat ho gya\")\n   }\n  \n   \n  }\nconst handleNext = (optId)=>{\n\n  if( maxSteps-1===quiz[activeStep]){\n    setActiveStep(prevActiveStep => prevActiveStep + 1)\n     handleSelect(optId);\n  }\n  else{\n    console.log(\"gahjdh\")\n  }\n}\n\n\n    return (\n        <div className={classes.gridContainer}>\n        <Grid container>\n           <Grid item xs></Grid>\n            <Grid item xs={11} sm={6} md={6} lg={4} >\n                 <div justify=\"center\">\n                    <h3 className=\"text1\">2021 Friendship</h3>\n                    <h3 className=\"text2\">Dare</h3>\n                 </div>\n                 <div justify=\"center\">     \n                    <h4 className=\"question\">Question <span>1/15</span></h4>\n                 </div>\n                 <div justify=\"center\">\n                    <BorderLinearProgress variant=\"determinate\" value={50} />\n                 </div>\n            <Card className=\"questioncard\">\n    <h3 className=\"questionname\">{quiz[activeStep].qusId}:{quiz[activeStep].title}</h3>\n           \n                  \n                    <div className=\"carddesign\">\n{\nquiz[activeStep]?.options?.map((options,index)=>{\n\nreturn(\n    <Grid\n  container\n  className=\"optionpart\"\n  key={index}\n  onClick={()=>{handleNext(options.optionId)}}\n  >\n   <Grid item xs={4} sm={4} md={4}lg={4}>\n   {options.optionImg.length\n             ?<img className=\"optionImg\" \n              src={options.optionImg}/>\n             :<span></span>\n           }\n  </Grid>\n  <Grid item xs={8} sm={8} md={8}lg={8} className=\"optionbg\" >\n    <CardContent className=\"cardcontent\">\n      <h3 className=\"optioncontent\" id=\"cardText\">\n     {options.optionLabel}\n      </h3>\n    </CardContent>\n  </Grid>\n  </Grid>\n )\n\n})\n} \n                </div>\n               \n                <div className=\"start-wrapper\">\n                  \n                 {\n                \n                 maxSteps-1==quiz[activeStep].title.length?  \n                 <button className=\"skip\"\n                 onClick={handleSkip}\n                 >Skip the Question</button>:\n                   <button className=\"skip\"\n                   >Submit</button>\n                  } \n                </div> \n         </Card>\n            </Grid>\n            <Grid item xs></Grid>\n       </Grid>\n  </div>\n    )\n}\n\nexport default PlayQuiz\n"]},"metadata":{},"sourceType":"module"}