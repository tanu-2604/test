{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/question/QuestionForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Grid } from '@material-ui/core';\nimport './Question.css';\nimport services from '../../services/services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  },\n  option: {\n    display: \"block\"\n  },\n  option1: {\n    float: \"left\"\n  },\n  img: {\n    float: \"right\",\n    width: \"50px\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  dropdown: {\n    zIndex: 1,\n    transform: \"translate(14px, 13px) scale(1)\",\n    padding: \"10.5px 14px\"\n  }\n}));\n\nfunction QuestionForm() {\n  const classes = useStyles();\n  const [question, setQuestion] = useState([{\n    questionTitle: '',\n    optionsArray: [{\n      optionLabel: \"\",\n      optionImg: \"\"\n    }, {\n      optionLabel: \"\",\n      optionImg: \"\"\n    }]\n  }]);\n  const [category, setCategory] = useState([]);\n  const [categoryOption, setCategoryOption] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  var userId = data['userId'];\n  useEffect(() => {\n    getAllCategory();\n  }, []);\n\n  const getAllCategory = async () => {\n    const options = {\n      method: 'Get',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getAllCategory(options);\n    console.log(result);\n    setCategory(result.data.data);\n  };\n\n  const addQuestion = () => {\n    setQuestion([...question, {\n      questionTitle: '',\n      optionsArray: [{\n        optionLabel: \"\",\n        optionImg: \"\"\n      }, {\n        optionLabel: \"\",\n        optionImg: \"\"\n      }]\n    }]);\n  };\n\n  const removeQuestion = index => {\n    const list = [...question];\n    list.splice(index, 1);\n    setQuestion(list);\n  };\n\n  const addOption = questionIndex => {\n    const options = question[questionIndex];\n    options.optionsArray.push({\n      optionLabel: \"\",\n      optionImg: \"\"\n    });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options,\n      optionsArray: [...newArray]\n    }];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const handleChange = event => {\n    setCategoryOption(event.target.value);\n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    const values = [...question];\n    values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n    setQuestion(values);\n  };\n\n  const handleImage = async (questionIndex, index, event) => {\n    const values = [...question];\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  };\n\n  const handleQuestion = (index, event) => {\n    const values = [...question];\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n  };\n\n  const addTask = async () => {\n    // const fileUpload = new FormData();\n    //data.append('questionsArray', JSON.stringify(question));\n    // let questionArray = [];\n    // for (const dataKey of question) {\n    //   let optionArray = dataKey?.optionsArray;\n    //   data.append('hello',question);\n    //   for (const previewKey of dataKey.optionsArray) {\n    //     optionArray.push(previewKey);\n    //   }\n    //   questionArray.push({\n    //     question: dataKey.question,\n    //     options: optionArray\n    //   });\n    // }\n    // fileUpload.append(\"category\", categoryOption);\n    // fileUpload.append(\"userId\", userId);\n    // fileUpload.append(\"questionArray\", JSON.stringify(question));\n    const fileUpload = {\n      category: categoryOption,\n      userId: userId,\n      questionsArray: question\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.addQuestion(fileUpload, options);\n    console.log(result);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 9\n    }\n  }, \"Create Question\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: classes.root,\n    noValidate: true,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.gridContainer,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 5,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    id: \"demo-simple-select-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 19\n    }\n  }, \"Category\"), /*#__PURE__*/React.createElement(Select, {\n    label: \"Category\",\n    id: \"category\",\n    value: categoryOption,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 19\n    }\n  }, category.map((option, index) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: option.categoryId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 27\n      }\n    }, option.title);\n  })))), question.map((que, index) => /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    key: index,\n    container: true,\n    spacing: 1,\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 7,\n    sm: 7,\n    md: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    label: \"Question\",\n    id: \"standard-size-small\",\n    fullWidth: true,\n    defaultValue: que.question,\n    onChange: event => handleQuestion(index, event),\n    type: \"question\",\n    size: \"small\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    sm: 4,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 23\n    }\n  }, question.length > 1 && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => removeQuestion(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 27\n    }\n  })), index === question.length - 1 && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => addQuestion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 59\n    }\n  }, /*#__PURE__*/React.createElement(AddCircleIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 27\n    }\n  })))), que.optionsArray.map((option, optIndex) => /*#__PURE__*/React.createElement(\"div\", {\n    key: optIndex,\n    className: classes.option,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 8,\n    lg: 7,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(TextField, {\n    id: \"option2\",\n    label: \"Option\",\n    type: \"option2\",\n    size: \"small\",\n    defaultValue: option.optionLabel,\n    className: classes.option1,\n    fullWidth: true,\n    onChange: event => handleOption(index, optIndex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 6,\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-upload2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"option2\",\n    defaultValue: option.optionImg,\n    onChange: event => handleImage(index, optIndex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/option.png\",\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 35\n    }\n  }))), optIndex > 1 && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => removeOption(index, optIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 49\n    }\n  }, /*#__PURE__*/React.createElement(DeleteIcon, {\n    className: \"remove\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 35\n    }\n  })), (que === null || que === void 0 ? void 0 : que.optionsArray.length) - 1 === optIndex && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: () => addOption(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 78\n    }\n  }, /*#__PURE__*/React.createElement(AddIcon, {\n    className: \"remove\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 35\n    }\n  }))))))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btn\",\n    size: \"medium\",\n    variant: \"contained\",\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 17\n    }\n  }, \"Create\")))))));\n}\n\nexport default QuestionForm;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/question/QuestionForm.js"],"names":["React","useState","useEffect","makeStyles","withStyles","Container","TextField","Button","RemoveCircleIcon","IconButton","DeleteIcon","AddIcon","AddCircleIcon","Icon","InputLabel","MenuItem","FormControl","Select","InputBase","Grid","services","useStyles","theme","root","margin","spacing","textField","marginLeft","marginRight","width","formControl","option","display","option1","float","img","button","dropdown","zIndex","transform","padding","QuestionForm","classes","question","setQuestion","questionTitle","optionsArray","optionLabel","optionImg","category","setCategory","categoryOption","setCategoryOption","data","JSON","parse","localStorage","getItem","jwt","userId","getAllCategory","options","method","headers","result","console","log","addQuestion","removeQuestion","index","list","splice","addOption","questionIndex","push","previous","slice","current","next","length","removeOption","answerIndex","newArray","filter","value","handleChange","event","target","handleOption","values","handleImage","imgpath","files","name","currentTime","Date","time","getTime","ext","split","file_path","myimg","replace","FormData","append","getImage","handleQuestion","addTask","fileUpload","questionsArray","gridContainer","map","categoryId","title","que","optIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport AddCircleIcon from '@material-ui/icons/AddCircle';\nimport Icon from '@material-ui/core/Icon';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport InputBase from '@material-ui/core/InputBase';\nimport { Grid } from '@material-ui/core';\nimport './Question.css'\nimport services from '../../services/services';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n\n  },\n  formControl: {\n    margin: theme.spacing(1),\n\n  },\n  option: {\n    display: \"block\"\n  },\n  option1: {\n    float: \"left\"\n  },\n  img: {\n    float: \"right\",\n    width: \"50px\"\n  },\n\n  button: {\n    margin: theme.spacing(1),\n  },\n  dropdown: {\n    zIndex: 1,\n    transform: \"translate(14px, 13px) scale(1)\",\n    padding: \"10.5px 14px\"\n  }\n}))\n\nfunction QuestionForm() {\n  const classes = useStyles()\n  const [question, setQuestion] = useState(\n    [\n      {\n        questionTitle: '',\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      },\n    ]\n  )\n\n  const [category, setCategory] = useState([])\n  const [categoryOption, setCategoryOption] = useState([])\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  var userId = data['userId'];\n  useEffect(() => {\n       getAllCategory();\n  }, [])\n\n  const  getAllCategory = async () => {\n      const options = {\n          method: 'Get',\n          headers: {\n              \"Apiuserid\": \"49507884\",\n              \"Scope\": \"In.QuizApp.READ\",\n              \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n      }\n      const result = await services.getAllCategory(options)\n      console.log(result)\n      setCategory(result.data.data)\n  };\n\n  const addQuestion = () => {\n    setQuestion([\n      ...question,\n      {\n        questionTitle: '',\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      }\n    ])\n  }\n\n  const removeQuestion = (index) => {\n    const list = [...question]\n    list.splice(index, 1);\n    setQuestion(list);\n  }\n  const addOption = (questionIndex) => {\n    const options = question[questionIndex];\n    options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options, optionsArray: [...newArray] }];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n\n  const handleChange = (event) => {\n    setCategoryOption(event.target.value);\n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    const values = [...question];\n\n    values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n    setQuestion(values);\n  }\n\n  const handleImage = async(questionIndex, index, event) => {\n    const values = [...question];\n     var imgpath=event.target.files[0]\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext= data.split('.')\n    var file_path= questionIndex+'_' + index+'_' +ext[0]+time+'.'+ext[1];\n    var myimg=data.replace(data,file_path)\n    var img=new FormData()\n    img.append(\"optionImg\",imgpath);\n    img.append(\"newName\",myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg=file_path;\n    setQuestion(values);\n  }\n  const handleQuestion = (index, event) => {\n\n    const values = [...question];\n\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n\n  }\n\n  const addTask = async () => {\n\n    // const fileUpload = new FormData();\n    \n    \n    \n    //data.append('questionsArray', JSON.stringify(question));\n        // let questionArray = [];\n    // for (const dataKey of question) {\n    //   let optionArray = dataKey?.optionsArray;\n    //   data.append('hello',question);\n    //   for (const previewKey of dataKey.optionsArray) {\n    //     optionArray.push(previewKey);\n    //   }\n    //   questionArray.push({\n    //     question: dataKey.question,\n    //     options: optionArray\n    //   });\n    // }\n\n    // fileUpload.append(\"category\", categoryOption);\n    // fileUpload.append(\"userId\", userId);\n    // fileUpload.append(\"questionArray\", JSON.stringify(question));\n   \n    \n    const fileUpload={\n      category:categoryOption,\n      userId:userId,\n      questionsArray:question\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.addQuestion(fileUpload, options)\n    console.log(result)\n  }\n\n  return (\n    <div>\n      <Container>\n        <h1>Create Question</h1>\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <Grid\n            container\n            spacing={3}\n            className={classes.gridContainer}\n            justify=\"center\"\n          >\n            <Grid item xs={12} sm={6} md={5}>\n              <div>\n                <FormControl className={classes.formControl} fullWidth>\n                  <InputLabel id=\"demo-simple-select-label\">Category</InputLabel>\n                  <Select\n                    label=\"Category\"\n                    id=\"category\"\n                    value={categoryOption}\n                    onChange={handleChange}\n                  >\n\n                    {\n                      category.map((option, index) => {\n                        return (\n\n                          <MenuItem key={index} value={option.categoryId}>{option.title}</MenuItem>\n                        )\n                      })\n                    }\n                  </Select>\n                </FormControl>\n\n              </div>\n              {\n                question.map((que, index) => (\n                  <div>\n                    <Grid key={index}\n                      container\n                      spacing={1}\n                      className={classes.gridContainer} >\n                      <Grid item xs={7} sm={7} md={7}>\n                        <TextField label=\"Question\" id=\"standard-size-small\"\n                          fullWidth\n                          defaultValue={que.question}\n                          onChange={event => handleQuestion(index, event)}\n                          type=\"question\" size=\"small\" />\n                      </Grid>\n                      <Grid item xs={4} sm={4} md={4}>\n                        {question.length > 1 && <IconButton\n                          onClick={() => removeQuestion(index)}\n                        >\n                          <DeleteIcon />\n                        </IconButton>}\n                        {index === question.length - 1 && <IconButton\n\n                          onClick={() => addQuestion()}\n                        >\n                          <AddCircleIcon />\n                        </IconButton>}\n                      </Grid>\n\n                    </Grid>\n                    {que.optionsArray.map((option, optIndex) => (\n                      <div key={optIndex} className={classes.option}>\n                        <Grid\n                          container\n                          spacing={3}\n                          className={classes.gridContainer}                   >\n                          <Grid item xs={12} sm={6} md={8} lg={7}>\n                            <TextField\n                              id=\"option2\"\n                              label=\"Option\"\n                              type=\"option2\"\n                              size=\"small\"\n                              defaultValue={option.optionLabel}\n                              className={classes.option1}\n                              fullWidth\n                              onChange={event => handleOption(index, optIndex, event)}\n                            />\n                          </Grid>\n                          <Grid item xs={12} sm={6} md={4}>\n                            <div>\n                              <div className=\"wrapper\">\n                                <div className=\"file-upload2\">\n                                  <input type=\"file\" className=\"option2\"\n                                    defaultValue={option.optionImg}\n                                    onChange={event => handleImage(index, optIndex, event)}\n                                  />\n                                  <img src=\"/assets/image/option.png\" height=\"40px\" />\n                                </div>\n                              </div>\n\n                              {\n\n                                optIndex > 1 && <IconButton\n                                  onClick={() => removeOption(index, optIndex)}\n                                >\n\n                                  <DeleteIcon\n                                    className=\"remove\" />\n                                </IconButton>\n\n                              }\n                              {\n                                que?.optionsArray.length - 1 === optIndex && <IconButton\n                                  onClick={() => addOption(index)}\n                                >\n                                  <AddIcon\n                                    className=\"remove\" />\n                                </IconButton>\n                              }\n\n                            </div>\n\n                          </Grid>\n                        </Grid>\n                      </div>\n                    ))}\n                  </div>\n\n\n                ))}\n              <div>\n                <Button\n                  className=\"btn\"\n                  size=\"medium\"\n                  variant=\"contained\"\n                  onClick={addTask}\n                >\n                  Create\n                 </Button>\n\n              </div>\n            </Grid>\n          </Grid>\n        </form>\n      </Container>\n    </div>\n  )\n}\n\nexport default QuestionForm\n"]},"metadata":{},"sourceType":"module"}