{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/CreateQuiz.js\";\nimport { Card, CardContent, FormControl, Grid, makeStyles, MenuItem, Select, TextField } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport \"./createQuiz.css\";\nimport AdminLink from '../management/AdminLinks';\nimport services from '../../services/services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  formControl: {\n    alignItems: \"center\"\n  }\n}));\n\nfunction CreateQuiz() {\n  const classes = useStyles();\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  var userId = data['userId'];\n  const [image, setImage] = useState('');\n  const [question, setQuestion] = useState([{\n    questionTitle: '',\n    priority: 1,\n    answer: \"\",\n    optionsArray: [{\n      optionLabel: \"\",\n      optionImg: \"\"\n    }, {\n      optionLabel: \"\",\n      optionImg: \"\"\n    }]\n  }]);\n\n  const addQuestion = () => {\n    setQuestion([...question, {\n      questionTitle: '',\n      priority: 1,\n      answer: \"\",\n      optionsArray: [{\n        optionLabel: \"\",\n        optionImg: \"\"\n      }, {\n        optionLabel: \"\",\n        optionImg: \"\"\n      }]\n    }]);\n  };\n\n  const removeQuestion = index => {\n    const list = [...question];\n    list.splice(index, 1);\n    setQuestion(list);\n  };\n\n  const addOption = questionIndex => {\n    const options = question[questionIndex];\n    options.optionsArray.push({\n      optionLabel: \"\",\n      optionImg: \"\"\n    });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options,\n      optionsArray: [...newArray]\n    }];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const handleImage = async event => {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n\n    output.onload = function () {\n      URL.revokeObjectURL(output.src); // free memory\n    };\n\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    console.log(data);\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    console.log(ext[0], ext[1]);\n    var file_path = ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"bannerImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.bannerImage(img, options);\n    console.log(result.message);\n    setImage(result.data.message);\n  };\n\n  const optionImage = async (questionIndex, index, event) => {\n    const values = [...question];\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    const values = [...question];\n    values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n    setQuestion(values);\n  };\n\n  const radioclick = (questionIndex, index, event) => {\n    const values = [...question];\n    var clicked = values[questionIndex].optionsArray[index].optionLabel;\n    values[questionIndex].answer = clicked;\n    setQuestion(values);\n  };\n\n  const handleQuestion = (index, event) => {\n    const values = [...question];\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n  };\n\n  console.log(image);\n\n  const handleSubmit = async () => {\n    var title = document.getElementById(\"title\").value;\n    var slug = document.getElementById(\"slug\").value;\n    var language = document.getElementById(\"language\").value;\n    var fileUpload = {\n      quizTitle: title,\n      quizSlug: slug,\n      language: language,\n      bannerImage: image,\n      questionsArray: question\n    };\n    console.log(fileUpload);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.createQuiz(fileUpload, options);\n    console.log(result);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AdminLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: \"detailView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }\n  }, \"Title\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    className: \"title-text\",\n    name: \"title\",\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 32\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, \"Slug\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"slug\",\n    className: \"title-text\",\n    name: \"slug\",\n    placeholder: \"Slug\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 32\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 25\n    }\n  }, \"language\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    label: \"Category\",\n    id: \"category\",\n    className: \"title-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 35\n    }\n  }, \"Select Language\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 35\n    }\n  }, \"en\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 25\n    }\n  }, \"upload\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"output\",\n    className: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 31\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    id: \"input\",\n    name: \"input\",\n    onChange: event => handleImage(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"create-img\",\n    htmlFor: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 37\n    }\n  }, \"  Choose your Photo\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  })), question.map((que, index) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 312,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 25\n    }\n  }, \"Question\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }, question.length > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    onClick: () => removeQuestion(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 317,\n      columnNumber: 44\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"question\",\n    className: \"que-text\",\n    name: \"question\",\n    placeholder: \"Enter Question\",\n    onChange: event => handleQuestion(index, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 32\n    }\n  })), que.optionsArray.map((option, optIndex) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: `option_${index}`,\n    onClick: event => radioclick(index, optIndex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 333,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"create-answer\",\n    placeholder: \"Answer\",\n    onChange: event => handleOption(index, optIndex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizwrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizfile-upload2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"quizoption2\",\n    defaultValue: option.optionImg,\n    onChange: event => optionImage(index, optIndex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/option.png\",\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 35\n    }\n  }))), optIndex > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    onClick: () => removeOption(index, optIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 344,\n      columnNumber: 48\n    }\n  }, \"X\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    onClick: () => addOption(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 31\n    }\n  }, \"Add Option\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 23\n    }\n  }, index === question.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    onClick: () => addQuestion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 58\n    }\n  }, \"Add Question\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 362,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 365,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 25\n    }\n  }, \"Result\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 20\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 20\n    }\n  }, \"X\"))), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 373,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"max\",\n    className: \"result-text\",\n    name: \"max\",\n    placeholder: \"Max Score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"min\",\n    className: \"result-text\",\n    name: \"min\",\n    placeholder: \"Min Score\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"resultTitle\",\n    className: \"result-text\",\n    name: \"resultTitle\",\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 385,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"phrase\",\n    className: \"result-text\",\n    name: \"phrase\",\n    placeholder: \"Phrase\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    id: \"upload\",\n    className: \"result-text\",\n    name: \"upload\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 393,\n      columnNumber: 30\n    }\n  }, \"Please Upload File\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    id: \"input\",\n    name: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 397,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"create-img\",\n    htmlFor: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 37\n    }\n  }, \"  Choose your Photo\"))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 25\n    }\n  }, \"Add Result\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 408,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 410,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 25\n    }\n  }, \"Save\"))));\n}\n\nexport default CreateQuiz;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/CreateQuiz.js"],"names":["Card","CardContent","FormControl","Grid","makeStyles","MenuItem","Select","TextField","React","useState","AdminLink","services","useStyles","theme","root","width","gridContainer","paddingTop","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","headPart","backgroundColor","icon","categorytitle","fontSize","fontWeight","heading","typography","pxToRem","fontWeightRegular","formControl","alignItems","CreateQuiz","classes","data","JSON","parse","localStorage","getItem","jwt","userId","image","setImage","question","setQuestion","questionTitle","priority","answer","optionsArray","optionLabel","optionImg","addQuestion","removeQuestion","index","list","splice","addOption","questionIndex","options","push","previous","slice","current","next","length","removeOption","answerIndex","newArray","filter","value","handleImage","event","output","document","getElementById","src","URL","createObjectURL","target","files","onload","revokeObjectURL","imgpath","name","console","log","currentTime","Date","time","getTime","ext","split","file_path","myimg","replace","img","FormData","append","method","headers","result","bannerImage","message","optionImage","values","getImage","handleOption","radioclick","clicked","handleQuestion","handleSubmit","title","slug","language","fileUpload","quizTitle","quizSlug","questionsArray","createQuiz","map","que","option","optIndex"],"mappings":"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","sourcesContent":["import { Card, CardContent, FormControl, Grid, makeStyles, MenuItem, Select, TextField } from '@material-ui/core';\nimport React,{useState} from 'react';\nimport \"./createQuiz.css\"\nimport AdminLink from '../management/AdminLinks';\nimport services from '../../services/services';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    gridContainer: {\n      paddingTop:\"20px\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    headPart:{\n        backgroundColor:\"#133b5c\",\n      color:\"#ffff\"\n    },\n    icon:{\n        color:\"#fff\"\n    },\n    categorytitle:{\n        color:\"#133b5c\",\n        fontSize:\"35px\",\n        fontWeight:\"600\",\n        textAlign:\"center\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(20),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    formControl: {\n     alignItems:\"center\"\n  \n    },\n  }));\n\nfunction CreateQuiz() {\n    const classes = useStyles();\n    const data = JSON.parse(localStorage.getItem('friend'));\n    const jwt = data['jwt'];\n    var userId = data['userId'];\n    const[image,setImage]=useState('')\n    const [question, setQuestion] = useState(\n        [\n          {\n            questionTitle: '',\n            priority:1,\n            answer:\"\",\n            optionsArray: [\n              { optionLabel: \"\",optionImg: \"\"  },\n              { optionLabel: \"\",optionImg: \"\"  }\n            ]\n          },\n        ]\n      )\n    \n      const addQuestion = () => {\n        setQuestion([\n          ...question,\n          {\n            questionTitle: '',\n            priority:1,\n            answer:\"\",\n            optionsArray: [\n              { optionLabel: \"\",optionImg: \"\" },\n              { optionLabel: \"\",optionImg: \"\" }\n            ]\n          }\n        ])\n      }\n    \n      const removeQuestion = (index) => {\n        const list = [...question]\n        list.splice(index, 1);\n        setQuestion(list);\n      }\n      const addOption = (questionIndex) => {\n        const options = question[questionIndex];\n        options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n        const previous = question.slice(0, questionIndex);\n        const current = [options];\n        const next = question.slice(questionIndex + 1, question?.length);\n        setQuestion([\n          ...previous,\n          ...current,\n          ...next\n        ]);\n      }\n    \n      const removeOption = (questionIndex, answerIndex) => {\n        const options = question[questionIndex];\n        const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n        const previous = question.slice(0, questionIndex);\n        const current = [{ ...options, optionsArray: [...newArray] }];\n        const next = question.slice(questionIndex + 1, question?.length);\n        setQuestion([\n          ...previous,\n          ...current,\n          ...next\n        ]);\n      }\n      const handleImage = async(event) => {\n        var output = document.getElementById('output');\n        output.src = URL.createObjectURL(event.target.files[0]);\n        output.onload = function () {\n        URL.revokeObjectURL(output.src) // free memory\n         }\n         var imgpath=event.target.files[0]\n        const data = imgpath.name;\n        console.log(data)\n        const currentTime = new Date();\n        const time = currentTime.getTime();\n        const ext= data.split('.')\n        console.log(ext[0],ext[1])\n        var file_path=ext[0]+time+'.'+ext[1];\n        var myimg=data.replace(data,file_path)\n        var img=new FormData()\n        img.append(\"bannerImg\",imgpath)\n        img.append(\"newName\",myimg)\n        const options = {\n          method: 'POST',\n          headers: {\n            \"Apiuserid\": \"49507884\",\n            \"Scope\": \"In.QuizApp.INSERT\",\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n        }\n        const result = await services.bannerImage(img, options);\n        console.log(result.message)\n       setImage(result.data.message)\n      }\n      const optionImage = async(questionIndex, index, event) => {\n        const values = [...question];\n         var imgpath=event.target.files[0]\n        const data = imgpath.name;\n        const currentTime = new Date();\n        const time = currentTime.getTime();\n        const ext= data.split('.')\n        var file_path= questionIndex+'_' + index+'_' +ext[0]+time+'.'+ext[1];\n        var myimg=data.replace(data,file_path)\n        var img=new FormData()\n        img.append(\"optionImg\",imgpath);\n        img.append(\"newName\",myimg)\n        const options = {\n          method: 'POST',\n          headers: {\n            \"Apiuserid\": \"49507884\",\n            \"Scope\": \"In.QuizApp.INSERT\",\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n        }\n        const result = await services.getImage(img, options);\n        values[questionIndex].optionsArray[index].optionImg=file_path;\n        setQuestion(values);\n      }\n      const handleOption = (questionIndex, index, event) => {\n        const values = [...question];\n    \n        values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n        setQuestion(values);\n      }\n      const radioclick = (questionIndex,index,event) => {\n        const values = [...question];\n        var clicked= values[questionIndex].optionsArray[index].optionLabel\n        values[questionIndex].answer=clicked\n        setQuestion(values);\n      }\n      const handleQuestion = (index, event) => {\n\n        const values = [...question];\n    \n        values[index].questionTitle = event.target.value;\n        setQuestion(values);\n    \n      }\n      console.log(image)\n      const handleSubmit = async() => {\n            var title=document.getElementById(\"title\").value\n            var slug=document.getElementById(\"slug\").value\n            var language=document.getElementById(\"language\").value\n             \n             var fileUpload={\n              quizTitle:title,\n              quizSlug:slug,\n              language:language,\n              bannerImage:image,\n              questionsArray:question\n\n            }\n            console.log(fileUpload)\n           \n            const options = {\n              method: 'POST',\n              headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.INSERT\",\n                'Content-Type': 'multipart/form-data',\n                \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n              }\n            }\n            const result = await services.createQuiz(fileUpload, options)\n            console.log(result)\n             \n      }\n    \n    return (\n        <div className={classes.root}>\n        <AdminLink/>\n        <Grid container className=\"detailView\">\n        <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                    <div className=\"createnumber\">\n                        <h3>Title</h3>\n                    </div>\n                      <Card className=\"create-list\">\n                                  <Grid\n                                  container\n                                  justify=\"center\"\n                                 >\n                               <input  type=\"text\" id=\"title\" className=\"title-text\"\n                            name=\"title\"\n                            placeholder=\"Title\"\n                            />\n                               </Grid>\n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                  <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                    <div className=\"createnumber\">\n                        <h3>Slug</h3>\n                    </div>\n                      <Card className=\"create-list\">\n                                  <Grid\n                                  container\n                                  justify=\"center\"\n                                 >\n                               <input  type=\"text\" id=\"slug\" className=\"title-text\"\n                            name=\"slug\"\n                            placeholder=\"Slug\"\n                            />\n                               </Grid>\n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                   <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                    <div className=\"createnumber\">\n                        <h3>language</h3>\n                    </div>\n                      <Card className=\"create-list\">\n                                  <Grid\n                                  container\n                                  justify=\"center\"\n                                 >\n                            <FormControl className={classes.formControl} fullWidth>\n                                <Select label=\"Category\" id=\"category\" className=\"title-text\" > \n                                  <MenuItem value=\"en\">Select Language</MenuItem>     \n                                  <MenuItem value=\"en\">en</MenuItem>\n                                </Select>\n                           </FormControl>\n                               </Grid>\n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                  <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                    <div className=\"createnumber\">\n                        <h3>upload</h3>\n                    </div>\n                      <Card className=\"create-list\">\n                                  <Grid\n                                  container\n                                  justify=\"center\"\n                                 >\n                               {/* <span  id=\"upload\" className=\"title-text\"\n                            name=\"upload\"\n                            >Please Upload File</span> */}\n                            <div className=\"img-holder\">\n                              <img id=\"output\" className=\"img\" />\n                            </div>\n                            <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\"   onChange={event => handleImage(event)} />\n                                <div className=\"create-label\">\n                                <label className=\"create-img\" htmlFor=\"input\">\n                                    <span>  Choose your Photo</span>\n                                </label>\n                                </div>\n                               </Grid>\n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                  {\n                question.map((que, index) => (\n                  <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                    <div className=\"createnumber\">\n                        <h3>Question</h3>\n                    </div>\n                    <div className=\"createnumber1\">\n                    {question.length > 1 &&<button className=\"delete\" onClick={() => removeQuestion(index)}>X</button>}\n                   </div>\n                      <Card className=\"create-list\">\n                                  <Grid\n                                  container\n                                  justify=\"center\"\n                                 >\n                               <input  type=\"text\" id=\"question\" className=\"que-text\"\n                            name=\"question\"\n                            placeholder=\"Enter Question\"\n                            onChange={event => handleQuestion(index, event)}\n                            />\n                               </Grid>\n                               {que.optionsArray.map((option, optIndex) => (\n                               <>\n                              <div className=\"answerContainer\">\n                               <input type=\"radio\"  name={`option_${index}`}onClick={event => radioclick(index, optIndex, event)}/>\n                               <textarea className=\"create-answer\" placeholder=\"Answer\"  onChange={event => handleOption(index, optIndex, event)}/>\n                               <div className=\"quizwrapper\">\n                                <div className=\"quizfile-upload2\">\n                                  <input type=\"file\" className=\"quizoption2\"\n                                    defaultValue={option.optionImg}\n                                    onChange={event => optionImage(index, optIndex, event)}\n                                  />\n                                  <img src=\"/assets/image/option.png\" height=\"40px\" />\n                                </div>\n                                </div>\n                               {optIndex > 1 &&<button className=\"delete\"  onClick={() => removeOption(index, optIndex)}>X</button>}\n                              </div>\n                              </>\n                               ))}\n                              <div className=\"create-label\">\n                              {\n                              <button className=\"addoption\"   onClick={() => addOption(index)}>Add Option</button>}\n                              </div>\n                      </Card>\n                      <div className=\"create-label\">\n                      {index === question.length - 1 &&  <button className=\"addoption\"   onClick={() => addQuestion()}>Add Question</button>}\n                     </div>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                  \n                ))}\n                  <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                    <div>\n                    <div className=\"createnumber\">\n                        <h3>Result</h3>\n                    </div>\n                   <div className=\"createnumber1\">\n                   <button className=\"delete\">X</button>\n                   </div>\n                    </div>\n                      <Card className=\"create-list\">\n                                  <Grid\n                                  container\n                                  justify=\"center\"\n                                 >\n                               <input  type=\"text\" id=\"max\" className=\"result-text\"\n                            name=\"max\"\n                            placeholder=\"Max Score\"\n                            />\n                            <input  type=\"text\" id=\"min\" className=\"result-text\"\n                            name=\"min\"\n                            placeholder=\"Min Score\"\n                            />\n                            <input  type=\"text\" id=\"resultTitle\" className=\"result-text\"\n                            name=\"resultTitle\"\n                            placeholder=\"Title\"\n                            />\n                            <input  type=\"text\" id=\"phrase\" className=\"result-text\"\n                            name=\"phrase\"\n                            placeholder=\"Phrase\"\n                            />\n                             <span  id=\"upload\" className=\"result-text\"\n                            name=\"upload\"\n                            >Please Upload File</span>\n                            <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\" />\n                                <div className=\"create-label\">\n                                <label className=\"create-img\" htmlFor=\"input\">\n                                    <span>  Choose your Photo</span>\n                                </label>\n                                </div>\n                               </Grid>\n                      </Card>\n                      <div className=\"create-label\">\n                        <button className=\"addoption\">Add Result</button>\n                     </div>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                    <div className=\"create-label\">\n                        <button className=\"addoption\" onClick={handleSubmit}>Save</button>\n                     </div>\n        </Grid>\n                    \n        </div>\n    )\n}\n\nexport default CreateQuiz\n"]},"metadata":{},"sourceType":"module"}