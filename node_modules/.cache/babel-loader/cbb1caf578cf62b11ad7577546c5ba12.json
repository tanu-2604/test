{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/Quizlist.js\";\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport { DeleteOutlineOutlined, EditOutlined, FileCopyOutlined, VisibilityOutlined } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport \"../management/User.css\";\nimport services from '../../services/services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n  heading: {\n    float: \"left\",\n    fontSize: \"20px\",\n    marginTop: \"15px\",\n    marginLeft: \"10px\",\n    fontWeight: \"700\",\n    color: \"#133b5c\"\n  },\n  list: {\n    marginTop: \"80px\"\n  },\n  cell: {\n    padding: \"6px\"\n  },\n  icon: {\n    padding: \"0px\"\n  },\n  copytext: {\n    height: \"0rem\",\n    overflow: \"hidden\",\n    color: \"transparent\",\n    background: \"transparent\",\n    border: \"none\"\n  }\n}));\nconst columns = [{\n  id: 'adminQuizId',\n  label: 'Id',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'title',\n  label: 'Title',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'slug',\n  label: 'Slug',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'language',\n  label: 'Language',\n  minWidth: 100,\n  align: 'center'\n}];\nexport default function Quizlist() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [quizlist, setQuizList] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    getAllAdminQuiz();\n  }, []);\n\n  const getAllAdminQuiz = async () => {\n    const options = {\n      method: 'Get',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getAllAdminQuiz(options);\n    setQuizList(result.data.data);\n  };\n\n  const checkedStatus = id => async () => {\n    var quizId = id;\n    var data = {\n      quizId: quizId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.UPDATE\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.updateQuizStatus(data, options);\n    getAllAdminQuiz();\n  };\n\n  function copyToClipboard(text) {\n    var dummy = document.createElement(\"textarea\");\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AdminLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table,\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  }, column.label)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 19\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 19\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 19\n    }\n  }, \"Result\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 19\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, \"Url\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }, quizlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: quizlist.adminQuizId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 23\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n        key: value,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 31\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value));\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }, row.status === \"active\" ? /*#__PURE__*/React.createElement(Switch, {\n      checked: true,\n      onChange: checkedStatus(row.adminQuizId),\n      name: \"checkedA\",\n      color: \"primary\",\n      id: row.adminQuizId,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(Switch, {\n      checked: false,\n      onChange: checkedStatus(row.adminQuizId),\n      name: \"checkedA\",\n      color: \"primary\",\n      id: row.adminQuizId,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/view/${row.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(VisibilityOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 31\n      }\n    })))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/result/${row.adminQuizId}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/assets/image/trofy.jpg\",\n      width: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/editQuiz/${row.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 31\n      }\n    })))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(FileCopyOutlined, {\n      onClick: () => copyToClipboard(`https://webestfriends.com/quizform/${row.slug}`),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 29\n      }\n    })))));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: quizlist.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/Quizlist.js"],"names":["React","useEffect","useRef","useState","Grid","IconButton","makeStyles","AdminLinks","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Switch","DeleteOutlineOutlined","EditOutlined","FileCopyOutlined","VisibilityOutlined","Link","services","useStyles","theme","root","width","marginTop","container","maxHeight","table","background","color","dltIcon","heading","float","fontSize","marginLeft","fontWeight","list","cell","padding","icon","copytext","height","overflow","border","columns","id","label","minWidth","align","Quizlist","classes","page","setPage","rowsPerPage","setRowsPerPage","quizlist","setQuizList","data","JSON","parse","localStorage","getItem","jwt","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","getAllAdminQuiz","options","method","headers","result","checkedStatus","quizId","updateQuizStatus","copyToClipboard","text","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","map","column","slice","row","adminQuizId","format","status","slug","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport { DeleteOutlineOutlined, EditOutlined, FileCopyOutlined, VisibilityOutlined } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport \"../management/User.css\"\nimport services from '../../services/services';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400,\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n  heading: {\n    float: \"left\",\n    fontSize: \"20px\",\n    marginTop: \"15px\",\n    marginLeft: \"10px\",\n    fontWeight: \"700\",\n    color: \"#133b5c\"\n  },\n  list: {\n    marginTop: \"80px\"\n  },\n  cell: {\n    padding: \"6px\"\n  },\n  icon: {\n    padding: \"0px\"\n  },\n  copytext: {\n    height: \"0rem\",\n    overflow: \"hidden\",\n    color: \"transparent\",\n    background: \"transparent\",\n    border: \"none\"\n  }\n}));\nconst columns = [\n  { id: 'adminQuizId', label: 'Id', minWidth: 100, align: 'center' },\n  { id: 'title', label: 'Title', minWidth: 100, align: 'center' },\n  {\n    id: 'slug',\n    label: 'Slug',\n    minWidth: 100,\n    align: 'center'\n\n  },\n  { id: 'language', label: 'Language', minWidth: 100, align: 'center' }\n\n];\n\nexport default function Quizlist() {\n  const classes = useStyles()\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [quizlist, setQuizList] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    getAllAdminQuiz();\n  }, [])\n  const getAllAdminQuiz = async () => {\n    const options = {\n      method: 'Get',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getAllAdminQuiz(options)\n    setQuizList(result.data.data)\n  };\n\n  const checkedStatus = (id) => async () => {\n    var quizId = id;\n\n    var data = {\n      quizId: quizId,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.UPDATE\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.updateQuizStatus(data, options)\n    getAllAdminQuiz();\n  }\n  function copyToClipboard(text) {\n    var dummy = document.createElement(\"textarea\");\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n  };\n  return (\n    <>\n      <AdminLinks />\n      <Grid container justify=\"center\" className={classes.list}>\n        <Grid item xs={11} sm={6} md={6} lg={10}>\n\n          <TableContainer className={classes.container}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell className={classes.table}\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                  <TableCell align=\"center\" className={classes.table}>Active</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>View</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>Result</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>Edit</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>Url</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n\n                {quizlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  return (\n                    <>\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={quizlist.adminQuizId}>\n                        {columns.map((column) => {\n                          const value = row[column.id];\n                          return (\n                            <>\n                              <TableCell\n                                key={value}\n                                align={column.align}\n                              >\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                              </TableCell>\n                            </>\n                          );\n\n                        })}\n                        <TableCell align=\"center\" className={classes.cell}>\n                          {\n                            row.status === \"active\" ?\n                              <Switch\n                                checked={true}\n                                onChange={checkedStatus(row.adminQuizId)}\n                                name=\"checkedA\"\n                                color=\"primary\"\n                                id={row.adminQuizId}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                              /> :\n                              <Switch\n                                checked={false}\n                                onChange={checkedStatus(row.adminQuizId)}\n                                name=\"checkedA\"\n                                color=\"primary\"\n                                id={row.adminQuizId}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                              />\n                          }\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <Link to={`/view/${row.slug}`}>\n                            <IconButton className={classes.icon} >\n                              <VisibilityOutlined />\n                            </IconButton>\n                          </Link>\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <Link to={`/result/${row.adminQuizId}`}>\n                            <img src=\"/assets/image/trofy.jpg\" width=\"30\" />\n                          </Link>\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <IconButton className={classes.icon} >\n                            <Link to={`/editQuiz/${row.slug}`}>\n                              <EditOutlined />\n                            </Link>\n                          </IconButton>\n                        </TableCell>\n\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <IconButton className={classes.icon} >\n                            <FileCopyOutlined onClick={() => copyToClipboard(`https://webestfriends.com/quizform/${row.slug}`)} />\n                          </IconButton>\n                        </TableCell>\n\n                      </TableRow>\n\n                    </>\n\n                  );\n                })}\n\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={quizlist.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Grid>\n      </Grid>\n    </>\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}