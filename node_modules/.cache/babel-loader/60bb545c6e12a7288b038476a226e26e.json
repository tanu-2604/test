{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/form/FriendLink.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../style/friendlink.css';\nimport { Grid, Card } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams, Link, Redirect } from 'react-router-dom';\nimport services from '../../services/services';\nimport Footer from '../footer/Footer';\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  head: {\n    textAlign: \"center\"\n  },\n  list: {\n    margin: \"25px auto\",\n    textAlign: \"center\"\n  },\n  add: {\n    width: \"100%\"\n  }\n}));\n\nfunction FriendLink() {\n  const classes = useStyles();\n  const [quiz, setQuiz] = useState([]);\n  const [list, setList] = useState([]);\n  const [question, setQuestion] = useState([]); // var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));  \n\n  const {\n    id\n  } = useParams();\n  localStorage.setItem('createId', JSON.stringify(id));\n  console.log(id);\n  useEffect(() => {\n    getQuiz();\n  }, []);\n\n  const getQuiz = async () => {\n    const data = {\n      quizId: id\n    };\n    console.log(data);\n    const options = {\n      method: 'GET',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getQuiz(data, options);\n    console.log(result);\n    setQuiz(result.data.data);\n    setList(result.data.data.quizQuestions);\n    console.log(result);\n  }; //    var dataId= JSON.parse(localStorage.getItem('createId'));\n  // //    var feedId=dataId['quizId']\n  //    debugger\n  //     if(id==dataId)\n  //     {\n  //         return <Redirect to=\"/sharelink\"/>\n  //     }\n\n\n  const playby = () => {\n    var name = document.getElementById(\"feedbackBy\").value;\n\n    if (name == \"\" || name == null || name.length <= 2) {\n      alert(\"please enter required name\");\n    } else {\n      localStorage.setItem(\"feedbackby\", name);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    className: classes.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"friendship\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 29\n    }\n  }, \"2021 Friendship\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"dare\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 29\n    }\n  }, \"Dare\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"form-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"how\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 28\n    }\n  }, \"How well do you know \", quiz.createdBy, \"?\"), /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"First\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 34\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"feedbackBy\",\n    className: \"name\",\n    placeholder: \"FirstName...\",\n    onChange: playby,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 132\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friendStart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: {\n      pathname: '/quizlink',\n      state: {\n        quizQuestions: quiz\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"started\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, \" Start\")))), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"how\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 29\n    }\n  }, \"Who Knows \", quiz.createdBy, \" Best ?\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.list,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/Image5.png\",\n    className: classes.add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 28\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 14\n    }\n  })));\n}\n\nexport default FriendLink;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/form/FriendLink.js"],"names":["React","useState","useEffect","Grid","Card","makeStyles","useParams","Link","Redirect","services","Footer","useStyles","theme","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","head","list","margin","add","width","FriendLink","classes","quiz","setQuiz","setList","question","setQuestion","id","localStorage","setItem","JSON","stringify","console","log","getQuiz","data","quizId","options","method","headers","result","quizQuestions","playby","name","document","getElementById","value","length","alert","createdBy","pathname","state"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport '../style/friendlink.css'\nimport {  Grid,Card} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams, Link, Redirect } from 'react-router-dom';\nimport services from '../../services/services';\nimport Footer from '../footer/Footer';\n\n\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      head:{\n          textAlign:\"center\"\n      },\n      list:{\n        margin:\"25px auto\",\n        textAlign:\"center\"\n      },\n      add:{\n          width:\"100%\"\n      }\n      \n    \n  }));\n  \nfunction FriendLink() {\nconst classes = useStyles();\nconst [quiz,setQuiz]=useState([])\nconst [list,setList]=useState([]) \nconst [question,setQuestion]=useState([])\n     \n   // var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));  \n   const { id } = useParams()\n    localStorage.setItem('createId',JSON.stringify(id))\n \nconsole.log(id)\n   useEffect(() => {\n       getQuiz();\n   }, [])\n\n   const getQuiz = async () => {\n       const data={\n            quizId:id\n       }\n       console.log(data)\n       const options = {\n           method: 'GET',\n           headers: {\n               \"Apiuserid\": \"49507884\",\n               \"Scope\": \"In.QuizApp.READ\",\n               \n           }\n       }\n       const result = await services.getQuiz(data,options)\n       console.log(result)\n       setQuiz(result.data.data)\n       setList(result.data.data.quizQuestions)\n       console.log(result)\n    };\n\n//    var dataId= JSON.parse(localStorage.getItem('createId'));\n// //    var feedId=dataId['quizId']\n//    debugger\n//     if(id==dataId)\n//     {\n        \n//         return <Redirect to=\"/sharelink\"/>\n//     }\n \n const playby=()=>{\n     var name=document.getElementById(\"feedbackBy\").value;\n     if((name == \"\") || (name==null) || (name.length<=2))\n      {\n         alert(\"please enter required name\");\n      }\n      else{\n        localStorage.setItem(\"feedbackby\",name);\n        \n      }\n     \n }\n    return (\n        <>\n            <div className={classes.gridContainer}>\n                <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4}>                    \n                        <div justify=\"center\" className={classes.head}>\n                            <h3 className=\"friendship\">2021 Friendship</h3>\n                            <h3 className=\"dare\">Dare</h3>\n                        </div>\n                        <Card className=\"form-card\">\n                           <h3 className=\"how\">How well do you know {quiz.createdBy}?</h3>\n                            <form >\n\n                                 <h4 className=\"First\">First Name</h4>\n                                <input type=\"text\" id=\"feedbackBy\" className=\"name\" placeholder=\"FirstName...\" onChange={playby} /><br />\n                                \n                                <div className=\"friendStart\">\n                                <Link  to={{\n                                        pathname: '/quizlink',\n                                        state:{quizQuestions:quiz}}}>\n                                    <button className=\"started\"> Start</button>\n                                    </Link>\n                                </div>\n                               \n                            </form>\n                            <h3 className=\"how\">Who Knows {quiz.createdBy} Best ?</h3>\n                        </Card>\n                    </Grid>\n                  <Grid item xs></Grid>\n\n                </Grid>\n                <br/>\n                <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item className={classes.list} xs={11} sm={6} md={6} lg={4}>\n                        <a href=\"#\">\n                           <img src=\"/assets/image/Image5.png\" className={classes.add}/>\n                        </a>\n                    </Grid>\n                    <Grid item xs></Grid>\n                </Grid>\n      {/* {\n            question?.map((question,index)=>{\n              return( <Grid container justify=\"center\">\n                       \n                         <Grid className=\"paragrid\"item xs={11} sm={6} md={6} lg={4}>\n                          <p className=\"question-para\"><span>{question.qusId})</span>{question.question}</p> </Grid>\n                       \n      </Grid>\n       )\n       })\n      } */}\n             <Footer/>\n            </div>\n           \n        </>\n    );\n    }\n\nexport default FriendLink\n"]},"metadata":{},"sourceType":"module"}