{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/form/ShareLink.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../style/sharelink.css';\nimport { Grid, Card, Popover, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport services from '../../services/services';\nimport InstaModel from './InstaModel';\nimport Footer from '../footer/Footer';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Helmet } from 'react-helmet';\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  grid: {\n    position: \"relative\"\n  },\n  typography: {\n    padding: \"10px\",\n    color: \"green\",\n    fontSize: \"15px\",\n    border: \"none\"\n  }\n}));\n\nfunction ShareLink(props) {\n  const id = props.location.state.quizId;\n  const classes = useStyles();\n  const [allResult, setAllResult] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const createId = JSON.parse(localStorage.getItem('createId'));\n  var dataId = createId.pop();\n  const [title, setTitle] = useState({});\n  var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n  useEffect(() => {\n    getCategory();\n    getCreaterResult();\n  }, [1]);\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getCategory(categoryData, options);\n    setTitle(result.data.data);\n  };\n\n  const textAreaRef = useRef(null);\n\n  function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n    ToastsStore.success(\"Copied SuccessFully\");\n  }\n\n  ;\n\n  const getCreaterResult = async () => {\n    const dataid = {\n      quizId: dataId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.Read\"\n      }\n    };\n    const result = await services.getCreaterResult(dataid, options);\n    setAllResult(result.data.data);\n  };\n\n  const refresh = () => {\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"theme-color\",\n    property: \"og:title\",\n    content: `${document.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    className: classes.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 24\n    }\n  }, title.title)), /*#__PURE__*/React.createElement(Card, {\n    className: \"form-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sharelink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"challenge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 29\n    }\n  }, \"Your Challenge is ready\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/friend.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"this-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 29\n    }\n  }, \"Share this link with your friends\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: textAreaRef,\n    className: \"quizInput\",\n    defaultValue: `http://localhost:3000/friendlink/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: copyToClipboard,\n    className: \"copy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 29\n    }\n  }, \" Copy Link\"), /*#__PURE__*/React.createElement(ToastsContainer, {\n    store: ToastsStore,\n    position: ToastsContainerPosition.TOP_LEFT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `whatsapp://send?text=https://webestfriends.com/friendlink/${createId}`,\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/whatsapp.png\",\n    className: \"whatsapp-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 99\n    }\n  }, \"WhatsApp Status\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"instagram\",\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/instagram.png\",\n    className: \"instagram-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"instagram-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 102\n    }\n  }, \"Add to Instagram Bio\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"result\",\n    onClick: refresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 27\n    }\n  }, \" View Results\")), (allResult === null || allResult === void 0 ? void 0 : allResult.length) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sharelink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"challenge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 35\n    }\n  }, \"Who knows you the best:\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table-data sharetable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 45\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"shareth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 49\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"shareth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 49\n    }\n  }, \"Score\"))), allResult === null || allResult === void 0 ? void 0 : allResult.map(tabledata => {\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"sharetd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 49\n      }\n    }, tabledata.feedbackBy), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"shareth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 49\n      }\n    }, tabledata.score)));\n  })))) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 22\n    }\n  }, \" \"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(InstaModel, {\n    open: open,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  })));\n}\n\nexport default ShareLink;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/form/ShareLink.js"],"names":["React","useState","useRef","useEffect","Grid","Card","Popover","Typography","makeStyles","services","InstaModel","Footer","ToastsContainer","ToastsStore","ToastsContainerPosition","Alert","AlertTitle","Helmet","useStyles","theme","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","grid","position","typography","fontSize","border","ShareLink","props","id","location","state","quizId","classes","allResult","setAllResult","open","setOpen","copied","setCopied","createId","JSON","parse","localStorage","getItem","dataId","pop","title","setTitle","categoryId","getCategory","getCreaterResult","categoryData","options","method","headers","result","data","textAreaRef","copyToClipboard","e","current","select","document","execCommand","target","focus","success","dataid","refresh","window","reload","head","TOP_LEFT","length","map","tabledata","feedbackBy","score"],"mappings":"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","sourcesContent":["import React,{useState,useRef, useEffect} from 'react'\nimport '../style/sharelink.css'\nimport {  Grid, Card,Popover,Typography} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport services from '../../services/services';\nimport InstaModel from './InstaModel';\nimport Footer from '../footer/Footer';\nimport {ToastsContainer, ToastsStore,ToastsContainerPosition} from 'react-toasts';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Helmet } from 'react-helmet';\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      grid:{\n        position:\"relative\"\n      },\n      typography: {\n        padding:\"10px\",\n        color:\"green\",\n        fontSize:\"15px\",\n        border:\"none\"\n      },\n    \n  }));\n  \nfunction ShareLink(props) {\n   \n    const id= props.location.state.quizId\n    const classes = useStyles();\n    const [allResult,setAllResult]=useState([])\n    const [open,setOpen] = useState(false);\n    const [copied,setCopied] = useState(false);\n    const createId = JSON.parse(localStorage.getItem('createId'));\n    var dataId = createId.pop();\n    const [title,setTitle]=useState({})\n    var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n  \n    useEffect(() => {\n      getCategory();\n      getCreaterResult();\n  }, [1])\n  \n  const  getCategory = async () => {\n   const categoryData={\n       categoryId:categoryId\n   }\n  \n   const options = {\n       method: 'POST',\n       headers: {\n           \"Apiuserid\": \"49507884\",\n           \"Scope\": \"In.QuizApp.READ\",   \n       }\n   }\n   const result = await services. getCategory(categoryData,options)\n   setTitle(result.data.data)\n  };\n    \n    const textAreaRef = useRef(null);\n    function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n    ToastsStore.success(\"Copied SuccessFully\") };\n\n   const getCreaterResult = async()=>{\n   const dataid = {\n    quizId: dataId,\n  }\n  const options = {\n    method: 'POST',\n    headers: {\n      \"Apiuserid\": \"49507884\",\n      \"Scope\": \"In.QuizApp.Read\",\n    }\n  }\n  const result = await services.getCreaterResult(dataid, options)\n  setAllResult(result.data.data)\n   }\n   const refresh =()=>{\n    window.location.reload();\n   }\n   \n        return (\n        <>\n        {/* <Helmet\n        title={title.title}\n         meta={[ \n          { name: 'twitter:site', content: \"WeBestFriends\" },\n          { name: 'twitter:creator', content: \"WeBestFriends\" },\n          { name: 'twitter:title', content: title.title },\n          { name: 'twitter:image', content: title.image },\n          { property: 'og:title', content: title.title },\n          { property: 'og:description', content: title.title },\n          { property: 'og:image', content: title.image },\n          ]}\n        /> */}\n        {<Helmet>\n                <meta name=\"theme-color\" property=\"og:title\" content={`${document.title}`} />\n            </Helmet>}\n        <div className={classes.gridContainer}>\n            <Grid container className={classes.grid}>\n                <Grid item xs></Grid>\n                 <Grid item xs={11} sm={6} md={6} lg={4} >\n                    <div justify=\"center\" className={classes.head}>\n                       <h3 className=\"title\">{title.title}</h3>\n                    </div>\n                    <Card className=\"form-card\">\n                        <div className=\"sharelink\">\n                            <h3 className=\"challenge\">Your Challenge is ready</h3>\n                            <img src=\"/assets/image/friend.svg\"/>\n                            <h3 className=\"this-link\">Share this link with your friends</h3>\n                            <input  ref={textAreaRef} className=\"quizInput\" defaultValue={`http://localhost:3000/friendlink/${id}`} />\n                            <br />\n                        </div>\n                        <div className=\"btn-wrapper\">\n                            <button  onClick={copyToClipboard} className=\"copy\"> Copy Link</button>\n                            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_LEFT}/>\n                        </div>\n                        <div className=\"btn-list\">\n                            <button className=\"whatsapp\">\n                                <a href={`whatsapp://send?text=https://webestfriends.com/friendlink/${createId}`} className=\"status\">\n                                  <img src=\"/assets/image/whatsapp.png\" className=\"whatsapp-img\"/><span className=\"status\">WhatsApp Status</span> \n                                </a>\n                            </button>                            \n                            <button className=\"instagram\" onClick={ ()=> setOpen(true)}>\n                                  <img src=\"/assets/image/instagram.png\" className=\"instagram-img\" /><span className=\"instagram-status\">Add to Instagram Bio</span>\n                            </button> \n                           {/* <button className=\"sharing\">\n                                <a href=\"#\">\n                                  <img src=\"/assets/image/sharing.svg\"className=\"sharing-img\" /><span className=\"status\">Share</span>\n                                </a>\n                          </button>        */}\n                       </div>\n                       <div className=\"result-wrapper\">\n                          <button className=\"result\" onClick={refresh}> View Results</button>\n                       </div>  \n                        { allResult?.length?\n                               <>\n                               <div className=\"sharelink\">\n                                  <h3 className=\"challenge\">Who knows you the best:</h3>\n                               </div>\n                               <Grid container justify=\"center\">                   \n                                    <table className=\"table-data sharetable\">\n                                        <thead>\n                                            <tr>\n                                                <th className=\"shareth\">Name</th>\n                                                <th className=\"shareth\">Score</th>\n                                            </tr>\n                                        </thead>\n                                        {\n                                          allResult?.map((tabledata)=>{\n                                        return(\n                                            <tbody>\n                                            <tr>\n                                                <td className=\"sharetd\">{tabledata.feedbackBy}</td>\n                                                <td className=\"shareth\">{tabledata.score}</td>\n                                            </tr>\n                                            </tbody>\n                                        )\n                                      })\n                                    }\n                                  </table>                   \n                              </Grid>\n                          </>:null\n                             }      \n                     <Grid item xs> </Grid>\n                    </Card>\n                </Grid>\n                <Grid item xs>\n\n                </Grid>\n            </Grid>\n             <InstaModel  open={open}\n                    setOpen={setOpen}\n              />                  \n            <Footer/>\n        </div>\n       \n        </>\n        );\n}\n\nexport default ShareLink\n"]},"metadata":{},"sourceType":"module"}