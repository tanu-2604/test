{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js\";\nimport React, { useState } from 'react';\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\"\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52'\n  }\n}))(LinearProgress);\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction QuestionList({\n  questionlist\n}) {\n  var _tutorialSteps$active2, _tutorialSteps$active3, _tutorialSteps$active4;\n\n  const classes = useStyles();\n  console.log(questionlist);\n  let tutorialSteps = [{\n    label: questionlist === null || questionlist === void 0 ? void 0 : questionlist.question,\n    options: questionlist === null || questionlist === void 0 ? void 0 : questionlist.optionsArray\n  }];\n\n  if (questionlist === null || questionlist === void 0 ? void 0 : questionlist.length) {\n    tutorialSteps = questionlist;\n  }\n\n  const data = JSON.parse(localStorage.getItem('userInfo'));\n  const createdBy = data['name'];\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [answerList, setAnswerList] = React.useState([{\n    qusId: '',\n    answer: '',\n    answerId: ''\n  }]);\n  const [createQuiz, setCreateQuiz] = useState();\n  const [result, setResult] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  const [clickedAns, setClickedAns] = useState(0);\n  const maxSteps = tutorialSteps.length;\n\n  function showProgress(index) {\n    var increment = Math.ceil(index / maxSteps * 100);\n    setProgress(increment);\n  }\n\n  const handleNext = (id, label) => {\n    var _tutorialSteps$active;\n\n    console.log(maxSteps);\n    console.log(steps);\n\n    if (maxSteps - 1 !== activeStep) {\n      setTimeout(() => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n      }, 500);\n      setClickedAns(label);\n      setCount(count + 1);\n      debugger;\n    } else {\n      handleSubmit();\n    }\n\n    showProgress(tutorialSteps[activeStep].qusId);\n    const qusId = (_tutorialSteps$active = tutorialSteps[activeStep]) === null || _tutorialSteps$active === void 0 ? void 0 : _tutorialSteps$active.qusId;\n    const answer = label;\n    const answerId = id;\n    setAnswerList([...answerList, {\n      qusId: qusId,\n      answer: answer,\n      answerId: answerId\n    }]);\n  };\n\n  const handleSkip = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleSubmit = async () => {\n    var indexToRemove = 0;\n    var numberToRemove = 1;\n    answerList.splice(indexToRemove, numberToRemove);\n    const list = {\n      createdBy: createdBy,\n      quizQuestions: answerList\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\"\n      }\n    };\n    const result = await services.createQuiz(list, options);\n    setCreateQuiz(result.data.data);\n    setResult(true);\n\n    if (result.data.code === 200) {\n      setResult(true);\n    }\n  };\n\n  if (result) {\n    localStorage.setItem(\"createId\", JSON.stringify(createQuiz));\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/sharelink\",\n        state: {\n          quizId: createQuiz\n        }\n      },\n      push: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"2021 Friendship\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  }, \"Dare\")), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 23\n    }\n  }, \"Question \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 57\n    }\n  }, count, \"/\", maxSteps))), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"questioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"questionname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, count, \": \", (_tutorialSteps$active2 = tutorialSteps[activeStep]) === null || _tutorialSteps$active2 === void 0 ? void 0 : _tutorialSteps$active2.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carddesign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 25\n    }\n  }, (_tutorialSteps$active3 = tutorialSteps[activeStep]) === null || _tutorialSteps$active3 === void 0 ? void 0 : (_tutorialSteps$active4 = _tutorialSteps$active3.optionsArray) === null || _tutorialSteps$active4 === void 0 ? void 0 : _tutorialSteps$active4.map((options, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: clickedAns === options.optionLabel ? 'correct' : 'optionpart',\n      onClick: () => {\n        handleNext(options.optionId, options.optionLabel);\n      },\n      key: index,\n      id: \"cardbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 49\n      }\n    }, options.optionImg.length ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"optionImg\",\n      src: options.optionImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 53\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 105\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      className: \"optionbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 49\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"cardcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 51\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"optioncontent\",\n      id: \"cardText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 53\n      }\n    }, options.optionLabel))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skip\",\n    onClick: () => {\n      maxSteps - 1 != tutorialSteps[activeStep].question.length ? handleSkip() : handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 27\n    }\n  }, \"Skip the Question\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js"],"names":["React","useState","Grid","Card","CardContent","makeStyles","withStyles","LinearProgress","services","Redirect","BorderLinearProgress","theme","root","height","borderRadius","width","colorPrimary","backgroundColor","palette","grey","type","bar","useStyles","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","text","secondary","pro","QuestionList","questionlist","classes","console","log","tutorialSteps","label","question","options","optionsArray","length","data","JSON","parse","localStorage","getItem","createdBy","activeStep","setActiveStep","answerList","setAnswerList","qusId","answer","answerId","createQuiz","setCreateQuiz","result","setResult","progress","setProgress","count","setCount","clickedAns","setClickedAns","maxSteps","showProgress","index","increment","Math","ceil","handleNext","id","steps","setTimeout","prevActiveStep","handleSubmit","handleSkip","indexToRemove","numberToRemove","splice","list","quizQuestions","method","headers","code","setItem","stringify","pathname","state","quizId","map","optionLabel","optionId","optionImg"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport {Grid, Card,CardContent} from '@material-ui/core';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n      height: 10,\n      borderRadius: 5,\n      width:\"100%\",\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#FFDD52',\n    },\n  }))(LinearProgress);\n  \nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      pro:{\n          textAlign:\"center\"\n      }\n    \n  }));\n  function QuestionList({questionlist}) {\n\n    const classes = useStyles();\n  console.log(questionlist)\n    let tutorialSteps = [\n      {\n          label: questionlist?.question,\n          options: questionlist?.optionsArray,\n      },\n  ];\n\n  \nif (questionlist?.length) {\n  tutorialSteps = questionlist;\n}\nconst data = JSON.parse(localStorage.getItem('userInfo'));\nconst createdBy = data['name'];\nconst [activeStep, setActiveStep] = React.useState(0);\nconst [answerList, setAnswerList] = React.useState([\n  {\n    qusId: '',\n    answer: '',\n     answerId:''\n  }\n]);\nconst [createQuiz,setCreateQuiz]=useState();\nconst [result,setResult]=useState(false);\nconst [progress,setProgress]=useState(0);\nconst [count,setCount]=useState(1);\nconst [clickedAns,setClickedAns]= useState(0);\nconst maxSteps = tutorialSteps.length;\n\nfunction showProgress(index) {\n\n  var increment = Math.ceil((index) / (maxSteps) * 100);\n \n  setProgress(increment)\n  \n}\n\n\nconst handleNext = (id,label) => { \nconsole.log(maxSteps)\n\nconsole.log(steps)\n  if( maxSteps-1 !==activeStep){\n    setTimeout(()=>{setActiveStep(prevActiveStep => prevActiveStep + 1)},500)\n    setClickedAns(label)\n    setCount(count+1)\n    debugger\n  }\n  else{\n    handleSubmit()\n  }\n  showProgress(tutorialSteps[activeStep].qusId);\n  const qusId=tutorialSteps[activeStep]?.qusId;\n  const answer=label;\n  const answerId=id;\n  setAnswerList(\n   [ ...answerList,{qusId:qusId,answer:answer,answerId:answerId}]\n  )\n\n\n}\n\n\nconst handleSkip = () => { setActiveStep(prevActiveStep => prevActiveStep + 1); };\n\nconst handleSubmit = async() => {\n  var indexToRemove = 0;\n  var numberToRemove = 1;\n answerList.splice(indexToRemove, numberToRemove);\n \n const list={\n     createdBy:createdBy,\n     quizQuestions:answerList\n }\n const options = {\n  method: 'POST',\n  headers: {\n    \"Apiuserid\": \"49507884\",\n    \"Scope\": \"In.QuizApp.INSERT\",\n  }\n}\nconst result = await services.createQuiz(list, options)\n setCreateQuiz(result.data.data)\n setResult(true)\n if(result.data.code===200)\n {\n  setResult(true)\n }\n\n };\n \n   if(result)\n   {\n     localStorage.setItem(\"createId\",JSON.stringify(createQuiz))\n     return(<Redirect to={{pathname:\"/sharelink\" ,state:{quizId:createQuiz}}} push={true} />)\n   }\n\n      return (\n          <div className={classes.gridContainer}>\n            <Grid container>\n               <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                     <div justify=\"center\">\n                        <h3 className=\"text1\">2021 Friendship</h3>\n                        <h3 className=\"text2\">Dare</h3>\n                     </div>\n                     <div justify=\"center\">     \n                      <h4 className=\"question\">Question <span>{count}/{maxSteps}</span></h4>\n                     </div>\n                     <div justify=\"center\">\n                        <BorderLinearProgress variant=\"determinate\" value={progress} />\n                     </div>\n                  <Card className=\"questioncard\">\n                        <h3 className=\"questionname\">{count}: {tutorialSteps[activeStep]?.question}</h3>\n                        <div className=\"carddesign\">\n                          {\n                            tutorialSteps[activeStep]?.optionsArray?.map((options,index)=>{\n                                 return(\n                                        <Grid\n                                                container\n                                                className= {\n                                                  clickedAns === options.optionLabel ?\n                                                  'correct' :'optionpart'}\n                                                onClick={()=>{handleNext(options.optionId,options.optionLabel)}}\n                                                key={index}\n                                                id=\"cardbox\">\n                                                <Grid item xs={4} sm={4} md={4}lg={4} >\n                                                    {options.optionImg.length?\n                                                    <img className=\"optionImg\"src={options.optionImg}/>:<span></span>\n                                                    }\n                                                </Grid>\n                                                <Grid item xs={8} sm={8} md={8}lg={8} className=\"optionbg\" >\n                                                  <CardContent className=\"cardcontent\">\n                                                    <h3 className=\"optioncontent\" id=\"cardText\">\n                                                    {options.optionLabel}\n                                                    </h3>\n                                                  </CardContent>\n                                                </Grid>\n                                        </Grid>\n                                    )})\n                          }\n                       </div>\n                        <div className=\"start-wrapper\">\n                          <button className=\"skip\" onClick={()=>{ maxSteps-1 !=tutorialSteps[activeStep].   question.length?handleSkip():handleSubmit() }}>Skip the Question</button>\n                        </div> \n                  </Card>\n                </Grid>\n                <Grid item xs></Grid>\n           </Grid>\n      </div>\n    )\n}\n\nexport default QuestionList\n"]},"metadata":{},"sourceType":"module"}