{"ast":null,"code":"import _regeneratorRuntime from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _toArray from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";import _asyncToGenerator from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _toConsumableArray from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Grid,Card,CardContent}from'@material-ui/core';import{makeStyles,withStyles}from'@material-ui/core/styles';import'../style/playquiz.css';import LinearProgress from'@material-ui/core/LinearProgress';import services from'../../services/services';import{Redirect}from'react-router-dom';import Footer from'../footer/Footer';import{Helmet}from'react-helmet';var BorderLinearProgress=withStyles(function(theme){return{root:{height:10,borderRadius:5,width:\"100%\"},colorPrimary:{backgroundColor:theme.palette.grey[theme.palette.type==='light'?200:700]},bar:{borderRadius:5,backgroundColor:'#FFDD52'}};})(LinearProgress);var useStyles=makeStyles(function(theme){return{gridContainer:{paddingLeft:\"20px\",paddingRight:\"20px\",background:\"#7555D9\",minHeight:\"100vh\"},paper:{padding:theme.spacing(2),textAlign:'center',color:theme.palette.text.secondary},pro:{textAlign:\"center\"}};});function PlayQuizPart(_ref){var _quiz$activeStep,_quiz$activeStep$opti;var quizdata=_ref.quizdata,que=_ref.que;var _useState=useState({value:0}),_useState2=_slicedToArray(_useState,2),score=_useState2[0],setScore=_useState2[1];var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),activeStep=_React$useState2[0],setActiveStep=_React$useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),meter=_useState4[0],setMeter=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),allResult=_useState6[0],setAllResult=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),correctAns=_useState8[0],setCorrectAns=_useState8[1];var _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),clickedAns=_useState10[0],setClickedAns=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),progress=_useState12[0],setProgress=_useState12[1];var _useState13=useState(1),_useState14=_slicedToArray(_useState13,2),count=_useState14[0],setCount=_useState14[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),answerList=_React$useState4[0],setAnswerList=_React$useState4[1];var data=JSON.parse(localStorage.getItem('userInfo'));var name=data['name'];var quiz=[{label:que===null||que===void 0?void 0:que.question,options:que===null||que===void 0?void 0:que.options,answer:que===null||que===void 0?void 0:que.answer}];var classes=useStyles();if(que===null||que===void 0?void 0:que.length){quiz=que;}function showProgress(index){var increment=Math.ceil(count/maxSteps*100);setProgress(increment);}var maxSteps=quiz.length;var handleSelect=function handleSelect(label){setClickedAns(label);if(label===quiz[activeStep].answer){score={value:++score.value};setCorrectAns(quiz[activeStep].answer);setAnswerList([].concat(_toConsumableArray(answerList),[{qusId:count,answer:label,correct:\"yes\"}]));}else{setCorrectAns(quiz[activeStep].answer);setAnswerList([].concat(_toConsumableArray(answerList),[{qusId:count,answer:label,correct:\"no\"}]));}};var handleNext=function handleNext(label){if(maxSteps-1!=activeStep){handleSelect(label);setTimeout(function(){setActiveStep(function(prevActiveStep){return prevActiveStep+1;});setCount(count+1);},300);handleSelect(label);}else{handleSelect(label);setTimeout(function(){console.log(score);handleSubmit([].concat(_toConsumableArray(answerList),[{qusId:count,answer:label,correct:\"yes\"}]));},500);}showProgress(quiz[activeStep].qusId);};var handleSubmit=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2){var _ref4,answerList,data,options,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_ref4=_toArray(_ref2),answerList=_ref4.slice(0);data={quizId:quizdata[0].adminQuizId,score:score.value,playerName:name,answers:answerList};console.log(data);options={method:'POST',headers:{\"Apiuserid\":\"49507884\",\"Scope\":\"In.QuizApp.INSERT\"}};_context.next=6;return services.saveAnswer(data,options);case 6:result=_context.sent;setAllResult(result.data.data);setMeter(result.data.code);case 9:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref3.apply(this,arguments);};}();if(meter===200){return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:'/quizscore',state:{quizLength:{maxSteps:maxSteps},score:{score:score},name:{name:name},resultData:{allResult:allResult}}},push:true});}return/*#__PURE__*/React.createElement(\"div\",{className:classes.gridContainer},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Helmet,null,/*#__PURE__*/React.createElement(\"title\",null,quizdata[0].title)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:6,md:6,lg:4},/*#__PURE__*/React.createElement(\"div\",{justify:\"center\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"title\"},quizdata[0].title)),/*#__PURE__*/React.createElement(\"div\",{justify:\"center\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"question\"},\"Question \",/*#__PURE__*/React.createElement(\"span\",null,count,\"/\",maxSteps))),/*#__PURE__*/React.createElement(\"div\",{justify:\"center\"},/*#__PURE__*/React.createElement(BorderLinearProgress,{variant:\"determinate\",value:progress})),/*#__PURE__*/React.createElement(Card,{className:\"playoptioncard\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"questionname\"},quiz[activeStep].questionTitle),/*#__PURE__*/React.createElement(\"div\",{className:\"playcard\"},(_quiz$activeStep=quiz[activeStep])===null||_quiz$activeStep===void 0?void 0:(_quiz$activeStep$opti=_quiz$activeStep.optionsArray)===null||_quiz$activeStep$opti===void 0?void 0:_quiz$activeStep$opti.map(function(options,index){return/*#__PURE__*/React.createElement(\"div\",{key:index},options.optionImg.length?/*#__PURE__*/React.createElement(Grid,{container:true,className:correctAns===options.optionLabel?'correctplay':clickedAns===options.optionLabel?'incorrectplay':'options',correct:quiz[activeStep].answer,onClick:function onClick(){handleNext(options.optionLabel);},key:index,id:\"cardbox\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:4,sm:4,md:4,lg:4,className:\"image-div\"},/*#__PURE__*/React.createElement(\"img\",{className:\"optionImg\",src:\"\".concat(quizdata[0].image_base_path,\"/\").concat(options.optionImg)})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:8,sm:8,md:8,lg:8,className:\"optionbg\"},/*#__PURE__*/React.createElement(CardContent,{className:\"cardcontent\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"optioncontent\",id:\"cardText\"},options.optionLabel)))):/*#__PURE__*/React.createElement(Grid,{justify:\"center\",container:true,className:\"new\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:10,sm:10,md:10,lg:10,className:correctAns===options.optionLabel?'correctplay':clickedAns===options.optionLabel?'incorrectplay':'options',correct:quiz[activeStep].answer,onClick:function onClick(){handleNext(options.optionLabel);},key:index,id:\"cardbox\"},/*#__PURE__*/React.createElement(CardContent,{className:\"newcontent\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"optioncontent\",id:\"cardText\"},options.optionLabel)))));})))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true})),/*#__PURE__*/React.createElement(Footer,null));}export default PlayQuizPart;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/QuilPlayPart/PlayQuizPart.js"],"names":["React","useState","useEffect","Grid","Card","CardContent","makeStyles","withStyles","LinearProgress","services","Redirect","Footer","Helmet","BorderLinearProgress","theme","root","height","borderRadius","width","colorPrimary","backgroundColor","palette","grey","type","bar","useStyles","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","text","secondary","pro","PlayQuizPart","quizdata","que","value","score","setScore","activeStep","setActiveStep","meter","setMeter","allResult","setAllResult","correctAns","setCorrectAns","clickedAns","setClickedAns","progress","setProgress","count","setCount","answerList","setAnswerList","data","JSON","parse","localStorage","getItem","name","quiz","label","question","options","answer","classes","length","showProgress","index","increment","Math","ceil","maxSteps","handleSelect","qusId","correct","handleNext","setTimeout","prevActiveStep","console","log","handleSubmit","quizId","adminQuizId","playerName","answers","method","headers","saveAnswer","result","code","pathname","state","quizLength","resultData","title","questionTitle","optionsArray","map","optionImg","optionLabel","image_base_path"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/playquiz.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport { Helmet } from 'react-helmet';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\",\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52',\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n\n}));\nfunction PlayQuizPart({ quizdata, que }) {\n  let [score, setScore] = useState({ value: 0 })\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [meter, setMeter] = useState(false);\n  const [allResult, setAllResult] = useState([]);\n  const [correctAns, setCorrectAns] = useState(0);\n  const [clickedAns, setClickedAns] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  let [answerList, setAnswerList] = React.useState([]);\n  const data = JSON.parse(localStorage.getItem('userInfo'));\n  const name = data['name'];\n\n\n  let quiz = [\n    {\n      label: que?.question,\n      options: que?.options,\n      answer: que?.answer\n    },\n  ];\n\n  const classes = useStyles();\n  if (que?.length) {\n    quiz = que;\n  }\n\n  function showProgress(index) {\n\n    var increment = Math.ceil((count) / (maxSteps) * 100);\n    setProgress(increment)\n\n  }\n  const maxSteps = quiz.length;\n  const handleSelect = (label) => {\n    setClickedAns(label)\n    if (label === quiz[activeStep].answer) {\n      score = { value: ++score.value };\n      setCorrectAns(quiz[activeStep].answer)\n      setAnswerList([\n        ...\n        answerList,\n        {\n          qusId: count,\n          answer: label,\n          correct: \"yes\"\n        }\n      ])\n    }\n    else {\n      setCorrectAns(quiz[activeStep].answer)\n      setAnswerList([\n        ...\n        answerList,\n        {\n          qusId: count,\n          answer: label,\n          correct: \"no\"\n        }\n      ])\n    }\n\n  }\n  const handleNext = (label) => {\n    if (maxSteps - 1 != activeStep) {\n      handleSelect(label);\n      setTimeout(() => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1)\n        setCount(count + 1)\n      }, 300)\n      handleSelect(label);\n    }\n    else {\n      handleSelect(label);\n      setTimeout(() => {\n        console.log(score);\n        handleSubmit([...answerList, {\n          qusId: count,\n          answer: label,\n          correct: \"yes\"\n        }])\n      }, 500)\n\n    }\n    showProgress(quiz[activeStep].qusId);\n  }\n\n  const handleSubmit = async ([...answerList]) => {\n    const data = {\n      quizId: quizdata[0].adminQuizId,\n      score: score.value,\n      playerName: name,\n      answers: answerList\n    }\n\n    console.log(data)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n      }\n    }\n    const result = await services.saveAnswer(data, options)\n    setAllResult(result.data.data)\n    setMeter(result.data.code)\n\n  }\n  if (meter === 200) {\n    return (<Redirect to={{\n      pathname: '/quizscore', state: { quizLength: { maxSteps }, score: { score }, name: { name }, resultData: { allResult } }\n    }} push={true}\n    />\n    )\n\n  }\n  return (\n    <div className={classes.gridContainer}>\n      <Grid container>\n  <Helmet><title>{quizdata[0].title}</title></Helmet>\n        <Grid item xs></Grid>\n        <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\">\n            <h3 className=\"title\">{quizdata[0].title}</h3>\n           </div>\n          <div justify=\"center\">\n            <h4 className=\"question\">Question <span>{count}/{maxSteps}</span></h4>\n          </div>\n          <div justify=\"center\">\n            <BorderLinearProgress variant=\"determinate\" value={progress} />\n          </div>\n          <Card className=\"playoptioncard\">\n            <h3 className=\"questionname\">{quiz[activeStep].questionTitle}</h3>\n            <div className=\"playcard\">\n              {\n                quiz[activeStep]?.optionsArray?.map((options, index) => {\n\n                  return (\n                    <div key={index}>\n                      {options.optionImg.length ?\n                        <Grid\n                          container\n                          className={\n                            correctAns === options.optionLabel ?\n                              'correctplay' :\n                              clickedAns === options.optionLabel ?\n                                'incorrectplay' : 'options'}\n                          correct={quiz[activeStep].answer}\n                          onClick={() => { handleNext(options.optionLabel) }}\n                          key={index}\n                          id=\"cardbox\">\n\n\n                          <Grid item xs={4} sm={4} md={4} lg={4} className=\"image-div\" >\n                            <img className=\"optionImg\" src={`${quizdata[0].image_base_path}/${options.optionImg}`} />\n                          </Grid>\n                          <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                            <CardContent className=\"cardcontent\">\n                              <h3 className=\"optioncontent\" id=\"cardText\">\n                                {options.optionLabel}\n                              </h3>\n                            </CardContent>\n                       </Grid>\n                        </Grid>\n                        :\n\n                        <Grid justify=\"center\" container className=\"new\">\n                          <Grid item xs={10} sm={10} md={10} lg={10}\n                            className={\n                              correctAns === options.optionLabel ?\n                                'correctplay' :\n                                clickedAns === options.optionLabel ?\n                                  'incorrectplay' : 'options'}\n                            correct={quiz[activeStep].answer}\n                            onClick={() => { handleNext(options.optionLabel) }}\n                            key={index}\n                            id=\"cardbox\">\n                             <CardContent className=\"newcontent\">\n                              <h3 className=\"optioncontent\" id=\"cardText\">\n                                {options.optionLabel}\n                              </h3>\n                            </CardContent>\n\n                          </Grid>\n                        </Grid>\n                      }</div>\n\n                  )\n\n                })\n              }\n            </div>\n          </Card>\n        </Grid>\n        <Grid item xs></Grid>\n      </Grid>\n      <Footer />\n    </div>\n  )\n}\n\nexport default PlayQuizPart\n"]},"metadata":{},"sourceType":"module"}