{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/CreateQuiz.js\";\nimport { Card, FormControl, Grid, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport \"./createQuiz.css\";\nimport AdminLink from '../management/AdminLinks';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular\n  },\n  formControl: {\n    alignItems: \"center\"\n  }\n}));\n\nfunction CreateQuiz() {\n  const classes = useStyles();\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const [image, setImage] = useState('');\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [language, setLanguage] = useState([]);\n  const [question, setQuestion] = useState([{\n    questionTitle: '',\n    priority: 1,\n    answer: \"\",\n    optionsArray: [{\n      optionLabel: \"\",\n      optionImg: \"\"\n    }, {\n      optionLabel: \"\",\n      optionImg: \"\"\n    }]\n  }]);\n  const [resultdata, setResultData] = useState([{\n    maxScore: '',\n    minScore: \"\",\n    title: \"\",\n    phrase: \"\",\n    needle: \"\",\n    resultImage: \"\"\n  }]);\n\n  const addQuestion = () => {\n    setQuestion([...question, {\n      questionTitle: '',\n      priority: 1,\n      answer: \"\",\n      optionsArray: [{\n        optionLabel: \"\",\n        optionImg: \"\"\n      }, {\n        optionLabel: \"\",\n        optionImg: \"\"\n      }]\n    }]);\n  };\n\n  const removeQuestion = index => {\n    const list = [...question];\n    list.splice(index, 1);\n    setQuestion(list);\n  };\n\n  const addresult = () => {\n    setResultData([...resultdata, {\n      maxScore: '',\n      minScore: \"\",\n      title: \"\",\n      phrase: \"\",\n      needle: \"\",\n      resultImage: \"\"\n    }]);\n  };\n\n  const removeresult = index => {\n    const listdata = [...resultdata];\n    listdata.splice(index, 1);\n    setResultData(listdata);\n  };\n\n  const addOption = questionIndex => {\n    const options = question[questionIndex];\n    options.optionsArray.push({\n      optionLabel: \"\",\n      optionImg: \"\"\n    });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const handleChange = event => {\n    setLanguage(event.target.value);\n  };\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options,\n      optionsArray: [...newArray]\n    }];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const handleImage = async event => {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n\n    output.onload = function () {\n      URL.revokeObjectURL(output.src); // free memory\n    };\n\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    console.log(data);\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    console.log(ext[0], ext[1]);\n    var file_path = ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"bannerImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.bannerImage(img, options);\n    console.log(result.message);\n    setImage(result.data.message);\n  };\n\n  const optionImage = async (questionIndex, index, event) => {\n    const values = [...question];\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  };\n\n  const handleResultImage = async (event, resindex) => {\n    const resultValue = [...resultdata];\n    var resultimg = event.target.files[0];\n    const data = resultimg.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var result_path = resindex + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, result_path);\n    var resultimage = new FormData();\n    resultimage.append(\"resultImage\", resultimg);\n    resultimage.append(\"newName\", myimg);\n    debugger;\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(resultimage, options);\n    console.log(result);\n    resultValue[resindex].resultImage = result_path;\n    setResultData(resultValue);\n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    if (event.target.value === \"\" && event.target.value === null || event.target.value.length <= 2) {\n      alert(\"please fill option\");\n      return true;\n    } else {\n      const values = [...question];\n      values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n      setQuestion(values);\n    }\n  };\n\n  const radioclick = (questionIndex, index, event) => {\n    const values = [...question];\n    var clicked = values[questionIndex].optionsArray[index].optionLabel;\n\n    if (clicked === \" \") {\n      alert(\"please choose one answer\");\n    } else {\n      values[questionIndex].answer = clicked;\n      setQuestion(values);\n    }\n  };\n\n  const handleQuestion = (index, event) => {\n    if (language.length <= 0) {\n      alert(\"Please choose language\");\n      return;\n    }\n\n    if (event.target.value === \"\" && event.target.value === null || event.target.value.length <= 3) {\n      alert(\"please fill question\");\n      return true;\n    } else {\n      const values = [...question];\n      values[index].questionTitle = event.target.value;\n      setQuestion(values);\n    }\n  };\n\n  const handleMax = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Maxscore\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].maxScore = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handleMin = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Min score\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].minScore = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handleTitle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter title\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].title = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handlephrases = (index, event) => {\n    const resultValue = [...resultdata];\n    resultValue[index].phrase = event.target.value;\n    setResultData(resultValue);\n  };\n\n  const handleneedle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please Choose needle value\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].needle = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handleSubmit = async () => {\n    var title = document.getElementById(\"title\").value;\n    var slug = document.getElementById(\"slug\").value;\n\n    if (title == \"\" || title == null || title.length <= 2) {\n      alert(\"please enter required title\");\n      return true;\n    } else if (slug == \"\") {\n      alert(\"please enter slug\");\n      return true;\n    }\n\n    let data = true;\n    question.map(item => {\n      if (item.questionTitle === \"\") {\n        alert(\"Question Cannot be blank!\");\n        data = false;\n        return;\n      } else {\n        data = true;\n      }\n\n      if (item.answer === \"\") {\n        alert(\"Please Choose right option\");\n        data = false;\n        return;\n      } else {\n        data = true;\n      }\n\n      item.optionsArray.map(item1 => {\n        if (item1.optionLabel == \"\") {\n          alert(\"Please enter all answer options\");\n          data = false;\n          return;\n        } else {\n          data = true;\n          return;\n        }\n      });\n    });\n    resultdata.map(res => {\n      if (res.maxScore === \"\" && res.minScore === \"\" && res.title === \"\" && res.needle === \"\") {\n        alert(\"Result Value Cannot be blank!\");\n        data = false;\n        return;\n      } else {\n        data = true;\n      }\n    });\n\n    if (data == true) {\n      var fileUpload = {\n        quizTitle: title,\n        quizSlug: slug,\n        language: language,\n        bannerImage: image,\n        questionsArray: question,\n        resultdata: resultdata\n      };\n      const options = {\n        method: 'POST',\n        headers: {\n          \"Apiuserid\": \"49507884\",\n          \"Scope\": \"In.QuizApp.INSERT\",\n          'Content-Type': 'multipart/form-data',\n          \"Authorization\": `quizApp-oauthtoken ${jwt}`\n        }\n      };\n      const result = await services.createQuiz(fileUpload, options);\n      setLoggedIn(true);\n    }\n  };\n\n  if (loggedIn) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/quizlist\",\n      push: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AdminLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: \"detailView\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 415,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 416,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 15\n    }\n  }, \"Title\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 420,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 421,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"title\",\n    className: \"title-text\",\n    name: \"title\",\n    placeholder: \"Title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 425,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 432,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 434,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 437,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 438,\n      columnNumber: 15\n    }\n  }, \"Slug\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 441,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"slug\",\n    className: \"title-text\",\n    name: \"slug\",\n    placeholder: \"Slug\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 445,\n      columnNumber: 17\n    }\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 455,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 458,\n      columnNumber: 15\n    }\n  }, \"language\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 460,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 465,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    label: \"Category\",\n    id: \"category\",\n    className: \"title-text\",\n    value: language,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 466,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 467,\n      columnNumber: 21\n    }\n  }, \"Select Language\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"en\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 468,\n      columnNumber: 21\n    }\n  }, \"en\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 480,\n      columnNumber: 15\n    }\n  }, \"upload\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-holder\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"output\",\n    className: \"img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    id: \"input\",\n    name: \"input\",\n    onChange: event => handleImage(event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"create-img\",\n    htmlFor: \"input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 21\n    }\n  }, \"  Choose your Photo\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 501,\n      columnNumber: 11\n    }\n  })), question.map((que, index) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 505,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 506,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 509,\n      columnNumber: 19\n    }\n  }, \"Question\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 17\n    }\n  }, question.length > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    onClick: () => removeQuestion(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 43\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 514,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 515,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"question\",\n    className: \"que-text\",\n    name: \"question\",\n    placeholder: \"Enter Question\",\n    onBlur: event => handleQuestion(index, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 519,\n      columnNumber: 21\n    }\n  })), que.optionsArray.map((option, optIndex) => /*#__PURE__*/React.createElement(React.Fragment, {\n    key: optIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 526,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 527,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"radio\",\n    name: `option_${index}`,\n    defaultChecked: que.answer,\n    onClick: event => radioclick(index, optIndex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"create-option\",\n    placeholder: \"Answer\",\n    onBlur: event => handleOption(index, optIndex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizwrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 530,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizfile-upload2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 27\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"quizoption2\",\n    defaultValue: option.optionImg,\n    onChange: event => optionImage(index, optIndex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 532,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/option.png\",\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 536,\n      columnNumber: 29\n    }\n  }))), optIndex > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    onClick: () => removeOption(index, optIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 42\n    }\n  }, \"X\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 543,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    onClick: () => addOption(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 545,\n      columnNumber: 23\n    }\n  }, \"Add Option\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 548,\n      columnNumber: 17\n    }\n  }, index === question.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    onClick: () => addQuestion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 549,\n      columnNumber: 53\n    }\n  }, \"Add Question\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 15\n    }\n  }))), resultdata.map((res, resindex) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 559,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 560,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 561,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 563,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 564,\n      columnNumber: 21\n    }\n  }, \"Result\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 566,\n      columnNumber: 19\n    }\n  }, resultdata.length > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    onClick: () => removeresult(resindex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 567,\n      columnNumber: 47\n    }\n  }, \"X\"))), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 570,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"max\",\n    className: \"result-text\",\n    name: \"max\",\n    placeholder: \"Max Score\",\n    onBlur: event => handleMax(resindex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 575,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"min\",\n    className: \"result-text\",\n    name: \"min\",\n    placeholder: \"Min Score\",\n    onBlur: event => handleMin(resindex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 580,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"resultTitle\",\n    className: \"result-text\",\n    name: \"resultTitle\",\n    placeholder: \"Title\",\n    onBlur: event => handleTitle(resindex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 585,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"phrase\",\n    className: \"result-text\",\n    name: \"phrase\",\n    placeholder: \"Phrase\",\n    onBlur: event => handlephrases(resindex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 590,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    accept: \"image/*\",\n    id: `resultImage${resindex}`,\n    className: \"img-input\",\n    name: `resultImage${resindex}`,\n    onChange: event => handleResultImage(event, resindex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 597,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    id: \"needle\",\n    className: \"result-text\",\n    inputProps: {\n      'aria-label': 'Without label'\n    },\n    onChange: event => handleneedle(resindex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 600,\n      columnNumber: 25\n    }\n  }, \"Select Needle Position \"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 601,\n      columnNumber: 25\n    }\n  }, \"2\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 25\n    }\n  }, \"8\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 603,\n      columnNumber: 25\n    }\n  }, \"12\"), /*#__PURE__*/React.createElement(MenuItem, {\n    value: \"18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 604,\n      columnNumber: 25\n    }\n  }, \"18\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 607,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"create-img\",\n    htmlFor: `resultImage${resindex}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 608,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 609,\n      columnNumber: 25\n    }\n  }, \"  Choose your Photo\")))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    onClick: () => addresult(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 621,\n      columnNumber: 12\n    }\n  }, \"Add Result\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 623,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 624,\n      columnNumber: 11\n    }\n  }, \"Save\"))));\n}\n\nexport default CreateQuiz;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/CreateQuiz.js"],"names":["Card","FormControl","Grid","InputLabel","makeStyles","MenuItem","Select","React","useState","AdminLink","services","Redirect","useStyles","theme","root","width","gridContainer","paddingTop","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","headPart","backgroundColor","icon","categorytitle","fontSize","fontWeight","heading","typography","pxToRem","fontWeightRegular","formControl","alignItems","CreateQuiz","classes","data","JSON","parse","localStorage","getItem","jwt","image","setImage","loggedIn","setLoggedIn","language","setLanguage","question","setQuestion","questionTitle","priority","answer","optionsArray","optionLabel","optionImg","resultdata","setResultData","maxScore","minScore","title","phrase","needle","resultImage","addQuestion","removeQuestion","index","list","splice","addresult","removeresult","listdata","addOption","questionIndex","options","push","previous","slice","current","next","length","handleChange","event","target","value","removeOption","answerIndex","newArray","filter","handleImage","output","document","getElementById","src","URL","createObjectURL","files","onload","revokeObjectURL","imgpath","name","console","log","currentTime","Date","time","getTime","ext","split","file_path","myimg","replace","img","FormData","append","method","headers","result","bannerImage","message","optionImage","values","getImage","handleResultImage","resindex","resultValue","resultimg","result_path","resultimage","handleOption","alert","radioclick","clicked","handleQuestion","handleMax","handleMin","handleTitle","handlephrases","handleneedle","handleSubmit","slug","map","item","item1","res","fileUpload","quizTitle","quizSlug","questionsArray","createQuiz","que","option","optIndex"],"mappings":"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","sourcesContent":["import { Card, FormControl, Grid, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport \"./createQuiz.css\"\nimport AdminLink from '../management/AdminLinks';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  formControl: {\n    alignItems: \"center\"\n\n  },\n}));\n\nfunction CreateQuiz() {\n  const classes = useStyles();\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const [image, setImage] = useState('')\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [language, setLanguage] = useState([])\n  const [question, setQuestion] = useState(\n    [\n      {\n        questionTitle: '',\n        priority: 1,\n        answer: \"\",\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      },\n    ]\n  )\n  const [resultdata, setResultData] = useState(\n    [\n      {\n        maxScore: '',\n        minScore: \"\",\n        title: \"\",\n        phrase: \"\",\n        needle: \"\",\n        resultImage: \"\"\n      }\n    ]\n  )\n\n  const addQuestion = () => {\n    setQuestion([\n      ...question,\n      {\n        questionTitle: '',\n        priority: 1,\n        answer: \"\",\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      }\n    ])\n  }\n\n  const removeQuestion = (index) => {\n    const list = [...question]\n    list.splice(index, 1);\n    setQuestion(list);\n  }\n  const addresult = () => {\n    setResultData([\n      ...resultdata,\n      {\n        maxScore: '',\n        minScore: \"\",\n        title: \"\",\n        phrase: \"\",\n        needle: \"\",\n        resultImage: \"\"\n      }\n    ])\n  }\n\n  const removeresult = (index) => {\n    const listdata = [...resultdata]\n    listdata.splice(index, 1);\n    setResultData(listdata);\n  }\n  const addOption = (questionIndex) => {\n    const options = question[questionIndex];\n    options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n  const handleChange = (event) => {\n    setLanguage(event.target.value);\n  };\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options, optionsArray: [...newArray] }];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n\n  const handleImage = async (event) => {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n    output.onload = function () {\n      URL.revokeObjectURL(output.src) // free memory\n    }\n    var imgpath = event.target.files[0]\n    const data = imgpath.name;\n    console.log(data)\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    console.log(ext[0], ext[1])\n    var file_path = ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path)\n    var img = new FormData()\n    img.append(\"bannerImg\", imgpath)\n    img.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.bannerImage(img, options);\n    console.log(result.message)\n    setImage(result.data.message)\n  }\n\n  const optionImage = async (questionIndex, index, event) => {\n    const values = [...question];\n    var imgpath = event.target.files[0]\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path)\n    var img = new FormData()\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  }\n  const handleResultImage = async (event, resindex) => {\n    const resultValue = [...resultdata];\n    var resultimg = event.target.files[0];\n    const data = resultimg.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    var result_path = resindex + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, result_path)\n    var resultimage = new FormData()\n    resultimage.append(\"resultImage\", resultimg);\n    resultimage.append(\"newName\", myimg);\n    debugger;\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(resultimage, options);\n    console.log(result)\n    resultValue[resindex].resultImage = result_path;\n    setResultData(resultValue);\n  }\n  const handleOption = (questionIndex, index, event) => {\n\n    if ((event.target.value === \"\" && event.target.value === null) || (event.target.value.length <= 2)) {\n      alert(\"please fill option\");\n      return true;\n    }\n    else {\n      const values = [...question];\n      values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n      setQuestion(values);\n    }\n  }\n  const radioclick = (questionIndex, index, event) => {\n    const values = [...question];\n    var clicked = values[questionIndex].optionsArray[index].optionLabel\n    if (clicked === \" \") {\n      alert(\"please choose one answer\")\n    }\n    else {\n      values[questionIndex].answer = clicked\n      setQuestion(values);\n    }\n\n  }\n\n  const handleQuestion = (index, event) => {\n    if (language.length <= 0) {\n      alert(\"Please choose language\");\n      return;\n    }\n    if ((event.target.value === \"\" && event.target.value === null) || (event.target.value.length <= 3)) {\n      alert(\"please fill question\")\n      return true;\n    }\n    else {\n      const values = [...question];\n      values[index].questionTitle = event.target.value;\n      setQuestion(values);\n    }\n\n  }\n\n  const handleMax = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Maxscore\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].maxScore = event.target.value;\n      setResultData(resultValue);\n\n    }\n  }\n  const handleMin = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Min score\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].minScore = event.target.value;\n      setResultData(resultValue);\n\n    }\n\n\n  }\n  const handleTitle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter title\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].title = event.target.value;\n      setResultData(resultValue);\n\n    }\n\n  }\n  const handlephrases = (index, event) => {\n    const resultValue = [...resultdata];\n    resultValue[index].phrase = event.target.value;\n    setResultData(resultValue);\n\n  }\n  const handleneedle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please Choose needle value\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].needle = event.target.value;\n      setResultData(resultValue);\n    }\n\n  }\n\n\n  const handleSubmit = async () => {\n    var title = document.getElementById(\"title\").value\n    var slug = document.getElementById(\"slug\").value\n    if ((title == \"\") || (title == null) || (title.length <= 2)) {\n      alert(\"please enter required title\");\n      return true;\n    } else if (slug == \"\") {\n      alert(\"please enter slug\");\n      return true;\n    }\n\n    let data = true;\n    question.map((item) => {\n      if (item.questionTitle === \"\") {\n        alert(\"Question Cannot be blank!\")\n        data = false;\n        return\n      }\n      else {\n        data = true;\n      }\n      if (item.answer === \"\") {\n        alert(\"Please Choose right option\")\n        data = false;\n        return\n      }\n      else {\n        data = true;\n      }\n      item.optionsArray.map((item1) => {\n        if (item1.optionLabel == \"\") {\n          alert(\"Please enter all answer options\")\n          data = false;\n          return\n        }\n        else {\n          data = true;\n          return\n        }\n      })\n\n\n    })\n    resultdata.map((res) => {\n      if (res.maxScore === \"\" && res.minScore === \"\" && res.title === \"\" && res.needle === \"\") {\n        alert(\"Result Value Cannot be blank!\")\n        data = false;\n        return\n      }\n      else {\n        data = true;\n      }\n\n    })\n    if (data == true) {\n\n      var fileUpload = {\n        quizTitle: title,\n        quizSlug: slug,\n        language: language,\n        bannerImage: image,\n        questionsArray: question,\n        resultdata: resultdata\n\n      }\n      const options = {\n        method: 'POST',\n        headers: {\n          \"Apiuserid\": \"49507884\",\n          \"Scope\": \"In.QuizApp.INSERT\",\n          'Content-Type': 'multipart/form-data',\n          \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n        }\n      }\n      const result = await services.createQuiz(fileUpload, options)\n      setLoggedIn(true)\n    }\n  }\n  if (loggedIn) {\n    return <Redirect to=\"/quizlist\" push={true} />\n  }\n  return (\n    <div className={classes.root}>\n      <AdminLink />\n      <Grid container className=\"detailView\">\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div className=\"createnumber\">\n              <h3>Title</h3>\n            </div>\n            <Card className=\"create-list\">\n              <Grid\n                container\n                justify=\"center\"\n              >\n                <input type=\"text\" id=\"title\" className=\"title-text\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                />\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div className=\"createnumber\">\n              <h3>Slug</h3>\n            </div>\n            <Card className=\"create-list\">\n              <Grid\n                container\n                justify=\"center\"\n              >\n                <input type=\"text\" id=\"slug\" className=\"title-text\"\n                  name=\"slug\"\n                  placeholder=\"Slug\"\n                />\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div className=\"createnumber\">\n              <h3>language</h3>\n            </div>\n            <Card className=\"create-list\">\n              <Grid\n                container\n                justify=\"center\"\n              >\n                <FormControl className={classes.formControl} fullWidth>\n                  <Select label=\"Category\" id=\"category\" className=\"title-text\" value={language} onChange={handleChange} >\n                    <MenuItem value=\"en\">Select Language</MenuItem>\n                    <MenuItem value=\"en\">en</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div className=\"createnumber\">\n              <h3>upload</h3>\n            </div>\n            <Card className=\"create-list\">\n              <Grid\n                container\n                justify=\"center\"\n              >\n                <div className=\"img-holder\">\n                  <img id=\"output\" className=\"img\" />\n                </div>\n                <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\"\n                  onChange={event => handleImage(event)}\n                />\n                <div className=\"create-label\">\n                  <label className=\"create-img\" htmlFor=\"input\">\n                    <span>  Choose your Photo</span>\n                  </label>\n                </div>\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        {\n          question.map((que, index) => (\n            <Grid container key={index}>\n              <Grid item xs></Grid>\n              <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                <div className=\"createnumber\">\n                  <h3>Question</h3>\n                </div>\n                <div className=\"createnumber1\">\n                  {question.length > 1 && <button className=\"delete\" onClick={() => removeQuestion(index)}>X</button>}\n                </div>\n                <Card className=\"create-list\">\n                  <Grid\n                    container\n                    justify=\"center\"\n                  >\n                    <input type=\"text\" id=\"question\" className=\"que-text\"\n                      name=\"question\"\n                      placeholder=\"Enter Question\"\n                      onBlur={event => handleQuestion(index, event)}\n                    />\n                  </Grid>\n                  {que.optionsArray.map((option, optIndex) => (\n                    <React.Fragment key={optIndex}>\n                      <div className=\"answerContainer\">\n                        <input type=\"radio\" name={`option_${index}`} defaultChecked={que.answer} onClick={event => radioclick(index, optIndex, event)} />\n                        <textarea className=\"create-option\" placeholder=\"Answer\" onBlur={event => handleOption(index, optIndex, event)} />\n                        <div className=\"quizwrapper\">\n                          <div className=\"quizfile-upload2\">\n                            <input type=\"file\" className=\"quizoption2\"\n                              defaultValue={option.optionImg}\n                              onChange={event => optionImage(index, optIndex, event)}\n                            />\n                            <img src=\"/assets/image/option.png\" height=\"40px\" />\n                          </div>\n                        </div>\n                        {optIndex > 1 && <button className=\"delete\" onClick={() => removeOption(index, optIndex)}>X</button>}\n                      </div>\n                    </React.Fragment >\n                  ))}\n                  <div className=\"create-label\">\n                    {\n                      <button className=\"addoption\" onClick={() => addOption(index)}>Add Option</button>}\n                  </div>\n                </Card>\n                <div className=\"create-label\">\n                  {index === question.length - 1 && <button className=\"addoption\" onClick={() => addQuestion()}>Add Question</button>}\n                </div>\n              </Grid>\n              <Grid item xs></Grid>\n            </Grid>\n\n          ))}\n\n        {\n          resultdata.map((res, resindex) => (\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                <div>\n                  <div className=\"createnumber\">\n                    <h3>Result</h3>\n                  </div>\n                  <div className=\"createnumber1\">\n                    {resultdata.length > 1 && <button className=\"delete\" onClick={() => removeresult(resindex)}>X</button>}\n                  </div>\n                </div>\n                <Card className=\"create-list\">\n                  <Grid\n                    container\n                    justify=\"center\"\n                  >\n                    <input type=\"text\" id=\"max\" className=\"result-text\"\n                      name=\"max\"\n                      placeholder=\"Max Score\"\n                      onBlur={event => handleMax(resindex, event)}\n                    />\n                    <input type=\"text\" id=\"min\" className=\"result-text\"\n                      name=\"min\"\n                      placeholder=\"Min Score\"\n                      onBlur={event => handleMin(resindex, event)}\n                    />\n                    <input type=\"text\" id=\"resultTitle\" className=\"result-text\"\n                      name=\"resultTitle\"\n                      placeholder=\"Title\"\n                      onBlur={event => handleTitle(resindex, event)}\n                    />\n                    <input type=\"text\" id=\"phrase\" className=\"result-text\"\n                      name=\"phrase\"\n                      placeholder=\"Phrase\"\n                      onBlur={event => handlephrases(resindex, event)}\n                    />\n\n                    <input type=\"file\" accept=\"image/*\" id={`resultImage${resindex}`} className=\"img-input\" name={`resultImage${resindex}`} onChange={event => handleResultImage(event, resindex)} />\n                    <FormControl className={classes.formControl} fullWidth>\n                      <Select id=\"needle\" className=\"result-text\"\n                        inputProps={{ 'aria-label': 'Without label' }} onChange={event => handleneedle(resindex, event)} >\n                        <MenuItem value=\"\" >Select Needle Position </MenuItem>\n                        <MenuItem value=\"2\">2</MenuItem>\n                        <MenuItem value=\"8\">8</MenuItem>\n                        <MenuItem value=\"12\">12</MenuItem>\n                        <MenuItem value=\"18\">18</MenuItem>\n                      </Select>\n                    </FormControl>\n                    <div className=\"create-label\">\n                      <label className=\"create-img\" htmlFor={`resultImage${resindex}`}>\n                        <span>  Choose your Photo</span>\n                      </label>\n                    </div>\n\n                  </Grid>\n                </Card>\n\n              </Grid>\n              <Grid item xs></Grid>\n            </Grid>\n          ))}\n        <div className=\"create-label\">\n          {<button className=\"addoption\" onClick={() => addresult()}>Add Result</button>}\n        </div>\n        <div className=\"create-label\">\n          <button className=\"addoption\" onClick={handleSubmit}>Save</button>\n        </div>\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default CreateQuiz\n"]},"metadata":{},"sourceType":"module"}