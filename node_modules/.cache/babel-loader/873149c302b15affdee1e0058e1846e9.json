{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport { withCookies, Cookies, useCookies } from 'react-cookie';\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\"\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52'\n  }\n}))(LinearProgress);\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction QuestionList({\n  questionlist,\n  limit\n}) {\n  var _tutorialSteps$active, _tutorialSteps$active2, _tutorialSteps$active3;\n\n  const classes = useStyles();\n  const [title, setTitle] = useState({});\n  const [stateCount, setStateCount] = React.useState([]);\n  let [activeStep, setActiveStep] = React.useState(0);\n  let [answerList, setAnswerList] = React.useState([]);\n  const [createQuiz, setCreateQuiz] = useState();\n  const [result, setResult] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  const [clickedAns, setClickedAns] = useState(0);\n  const [cookies, setCookie] = useCookies(['createId']);\n  var dummyArr = []; // const data = JSON.parse(localStorage.getItem('userInfo'));\n  // const createdBy = data['name'];\n\n  const cookie = new Cookies();\n  var categoryId;\n\n  if (localStorage.getItem(\"categoryId\")) {\n    categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n  } else {\n    categoryId = JSON.parse(cookie.get('categoryId'));\n  }\n\n  if (localStorage.getItem(\"userInfo\")) {\n    var data = JSON.parse(localStorage.getItem('userInfo'));\n    var createdBy = data['name'];\n  } else {\n    data = cookie.get('userInfo');\n    createdBy = data['name'];\n    console.log(createdBy);\n  }\n\n  if (localStorage.getItem(\"createId\") == null) {\n    dummyArr = [];\n  } else {\n    dummyArr = JSON.parse(localStorage.getItem(\"createId\"));\n    dummyArr = cookie.get(\"createId\");\n  }\n\n  useEffect(() => {\n    const index = questionlist.map((value, index) => index);\n    setStateCount(index);\n    getCategory();\n  }, []);\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getCategory(categoryData, options);\n    setTitle(result.data.data);\n  };\n\n  let tutorialSteps = [{\n    label: questionlist === null || questionlist === void 0 ? void 0 : questionlist.question,\n    options: questionlist === null || questionlist === void 0 ? void 0 : questionlist.optionsArray\n  }];\n\n  if (questionlist === null || questionlist === void 0 ? void 0 : questionlist.length) {\n    tutorialSteps = questionlist;\n  }\n\n  function showProgress(index) {\n    var increment = Math.ceil(count / limit * 100);\n    setProgress(increment);\n  }\n\n  const handleNext = (id, label) => {\n    var _questionlist$activeS;\n\n    const qusId = (_questionlist$activeS = questionlist[activeStep]) === null || _questionlist$activeS === void 0 ? void 0 : _questionlist$activeS.qusId;\n    const answer = label;\n    const answerId = id;\n    setClickedAns(id);\n    setAnswerList([...answerList, {\n      qusId: qusId,\n      answer: answer,\n      answerId: answerId\n    }]);\n\n    if (limit > answerList.length + 1) {\n      setTimeout(() => {\n        stateCount.shift();\n        activeStep = stateCount[0];\n        setActiveStep(stateCount[0]);\n        setCount(count + 1);\n      }, 500);\n    } else {\n      setTimeout(() => {\n        handleSubmit([...answerList, {\n          qusId: qusId,\n          answer: answer,\n          answerId: answerId\n        }]);\n      }, 500);\n    }\n\n    showProgress(tutorialSteps[activeStep].qusId);\n  };\n\n  const handleSkip = steps => {\n    stateCount.push(steps);\n    stateCount.shift();\n    activeStep = stateCount[0];\n    setActiveStep(stateCount[0]);\n  };\n\n  const handleSubmit = async ([...answerList]) => {\n    const list = {\n      categoryId: categoryId,\n      createdBy: createdBy,\n      quizQuestions: answerList\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\"\n      }\n    };\n    const result = await services.createQuiz(list, options);\n    setCreateQuiz(result.data.data.quizId);\n    setResult(true);\n\n    if (result.data.code === 200) {\n      setResult(true);\n    }\n  };\n\n  if (result) {\n    dummyArr.push(createQuiz);\n    debugger; // setLocalArray(createQuiz)\n\n    localStorage.setItem(\"createId\", JSON.stringify(dummyArr));\n    setCookie(\"createId\", JSON.stringify(dummyArr));\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/sharelink\",\n        state: {\n          quizId: createQuiz\n        }\n      },\n      push: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }\n  }, title.title)), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, \"Question \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 47\n    }\n  }, count, \"/\", limit))), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"questioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"questionname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 13\n    }\n  }, (_tutorialSteps$active = tutorialSteps[activeStep]) === null || _tutorialSteps$active === void 0 ? void 0 : _tutorialSteps$active.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"optioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 13\n    }\n  }, (_tutorialSteps$active2 = tutorialSteps[activeStep]) === null || _tutorialSteps$active2 === void 0 ? void 0 : (_tutorialSteps$active3 = _tutorialSteps$active2.optionsArray) === null || _tutorialSteps$active3 === void 0 ? void 0 : _tutorialSteps$active3.map((options, index) => {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, options.optionImg.length ? /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: clickedAns === options.optionId ? 'clickoption' : 'nonclickoption',\n      onClick: () => {\n        handleNext(options.optionId, options.optionLabel);\n      },\n      key: index,\n      id: \"cardbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      className: \"image-div\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"optionImg\",\n      src: options.optionImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 24\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      className: \"optionbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"cardcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"optioncontent\",\n      id: \"cardText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 24\n      }\n    }, options.optionLabel)))) : /*#__PURE__*/React.createElement(Grid, {\n      justify: \"center\",\n      container: true,\n      className: \"new\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 20\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      className: clickedAns === options.optionId ? 'newclickoption' : 'newnonclickoption',\n      onClick: () => {\n        handleNext(options.optionId, options.optionLabel);\n      },\n      key: index,\n      id: \"cardbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 22\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"newcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"optioncontent\",\n      id: \"cardText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 21\n      }\n    }, options.optionLabel)))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skip\",\n    onClick: () => {\n      limit > answerList.length + 1 ? handleSkip(activeStep) : handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 15\n    }\n  }, \"Skip the Question\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js"],"names":["React","useState","useEffect","Grid","Card","CardContent","makeStyles","withStyles","LinearProgress","services","Redirect","Footer","withCookies","Cookies","useCookies","BorderLinearProgress","theme","root","height","borderRadius","width","colorPrimary","backgroundColor","palette","grey","type","bar","useStyles","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","text","secondary","pro","QuestionList","questionlist","limit","classes","title","setTitle","stateCount","setStateCount","activeStep","setActiveStep","answerList","setAnswerList","createQuiz","setCreateQuiz","result","setResult","progress","setProgress","count","setCount","clickedAns","setClickedAns","cookies","setCookie","dummyArr","cookie","categoryId","localStorage","getItem","JSON","parse","get","data","createdBy","console","log","index","map","value","getCategory","categoryData","options","method","headers","tutorialSteps","label","question","optionsArray","length","showProgress","increment","Math","ceil","handleNext","id","qusId","answer","answerId","setTimeout","shift","handleSubmit","handleSkip","steps","push","list","quizQuestions","quizId","code","setItem","stringify","pathname","state","optionImg","optionId","optionLabel"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from 'react'\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport { withCookies, Cookies, useCookies } from 'react-cookie';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\",\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52',\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n\n}));\nfunction QuestionList({ questionlist,limit }) {\n  const classes = useStyles();\n  const [title, setTitle] = useState({})\n  const [stateCount, setStateCount] = React.useState([])\n  let [activeStep, setActiveStep] = React.useState(0);\n  let [answerList, setAnswerList] = React.useState([]);\n  const [createQuiz, setCreateQuiz] = useState();\n  const [result, setResult] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  const [clickedAns, setClickedAns] = useState(0);\n  const [cookies, setCookie] = useCookies(['createId']);\n  var dummyArr = []\n\n  // const data = JSON.parse(localStorage.getItem('userInfo'));\n  // const createdBy = data['name'];\n  const cookie = new Cookies();\n \n  var categoryId\n  if(localStorage.getItem(\"categoryId\"))\n  {\n   categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n \n  }\n  else{\n      categoryId=JSON.parse(cookie.get('categoryId'));\n     \n  }\n  if(localStorage.getItem(\"userInfo\"))\n  {\n   var data = JSON.parse(localStorage.getItem('userInfo'));\n   var createdBy = data['name'];\n \n  }\n  else{\n    data=(cookie.get('userInfo'));\n    createdBy=data['name']\n    console.log(createdBy);\n  }\n\n\n  if (localStorage.getItem(\"createId\") == null) {\n    dummyArr = []\n  }\n  else {\n    dummyArr = JSON.parse(localStorage.getItem(\"createId\"));\n    dummyArr=cookie.get(\"createId\")\n  }\n\n  useEffect(() => {\n    const index = questionlist.map((value, index) => index);\n    setStateCount(index)\n    getCategory();\n  }, [])\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n      }\n    }\n    const result = await services.getCategory(categoryData, options)\n    setTitle(result.data.data)\n  };\n\n  let tutorialSteps = [\n    {\n      label: questionlist?.question,\n      options: questionlist?.optionsArray,\n    },\n  ];\n  if (questionlist?.length) {\n    tutorialSteps = questionlist;\n  }\n  function showProgress(index) {\n    var increment = Math.ceil((count) / (limit) * 100);\n    setProgress(increment)\n  }\n\n  const handleNext = (id, label) => {\n\n    const qusId = questionlist[activeStep]?.qusId;\n    const answer = label;\n    const answerId = id;\n    setClickedAns(id)\n    setAnswerList(\n      [...answerList, { qusId: qusId, answer: answer, answerId: answerId }]\n    )\n    if (limit > answerList.length + 1) {\n      setTimeout(()=>{\n        stateCount.shift();\n      activeStep = stateCount[0];\n      setActiveStep(stateCount[0]);\n      setCount(count + 1)\n      },500)\n   \n    }\n    else {\n      \n      setTimeout(() => {\n        \n        handleSubmit([...answerList, { qusId: qusId, answer: answer, answerId: answerId }])\n      }, 500)\n    }\n    showProgress(tutorialSteps[activeStep].qusId);\n  }\n\n  const handleSkip = (steps) => {\n    stateCount.push(steps);\n    stateCount.shift();\n    activeStep = stateCount[0];\n    setActiveStep(stateCount[0]);\n\n  };\n\n\n  \n  const handleSubmit = async ([...answerList]) => {\n    \n    const list = {\n      categoryId: categoryId,\n      createdBy: createdBy,\n      quizQuestions: answerList\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n      }\n    }\n    const result = await services.createQuiz(list, options)\n    setCreateQuiz(result.data.data.quizId)\n    setResult(true)\n    if (result.data.code === 200) {\n      setResult(true)\n    }\n  };\n\n  if (result) {\n    dummyArr.push(createQuiz)\n    debugger\n    // setLocalArray(createQuiz)\n    localStorage.setItem(\"createId\", JSON.stringify(dummyArr))\n    setCookie(\"createId\", JSON.stringify(dummyArr))\n    return (<Redirect to={{ pathname: \"/sharelink\", state: { quizId: createQuiz } }} push={true} />)\n  }\n\n  return (\n    <div className={classes.gridContainer}>\n      <Grid container>\n        <Grid item xs></Grid>\n        <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\">\n            <h3 className=\"title\">{title.title}</h3>\n          </div>\n          <div justify=\"center\">\n            <h4 className=\"question\">Question <span>{count}/{limit}</span></h4>\n          </div>\n          <div justify=\"center\">\n            <BorderLinearProgress variant=\"determinate\" value={progress} />\n          </div>\n          <Card className=\"questioncard\">\n\n            <h3 className=\"questionname\">{tutorialSteps[activeStep]?.question}</h3>\n            <div className=\"optioncard\">\n              {\n                tutorialSteps[activeStep]?.optionsArray?.map((options, index) => {\n                  return (\n                    <>\n                     {options.optionImg.length ?\n                      <Grid\n                      container\n                      className={\n                        clickedAns === options.optionId ?\n                          'clickoption' : 'nonclickoption'}\n                      onClick={() => { handleNext(options.optionId, options.optionLabel) }}\n                      key={index}\n                      id=\"cardbox\">\n                      \n                      \n                      <Grid item xs={4} sm={4} md={4} lg={4} className=\"image-div\" >\n                       <img className=\"optionImg\" src={options.optionImg} /> \n                   </Grid>\n                   <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                     <CardContent className=\"cardcontent\">\n                       <h3 className=\"optioncontent\" id=\"cardText\">\n                         {options.optionLabel}\n                       </h3>\n                     </CardContent>\n                \n                  \n                   </Grid>\n                   </Grid>\n                   : \n                 \n                   <Grid justify=\"center\" container className=\"new\">\n                     <Grid item xs={8} sm={8} md={8} lg={8}\n                   className={\n                     clickedAns === options.optionId ?\n                       'newclickoption' : 'newnonclickoption'}\n                   onClick={() => { handleNext(options.optionId, options.optionLabel) }}\n                   key={index}\n                   id=\"cardbox\">\n                  \n                  <CardContent className=\"newcontent\">\n                    <h3 className=\"optioncontent\" id=\"cardText\">\n                      {options.optionLabel}\n                    </h3>\n                  </CardContent>\n             \n                </Grid>\n                   </Grid>\n                      \n                 \n                     \n                   \n                   }\n                     </>\n                     \n                  \n                   \n                  )\n                })\n              }\n            </div>\n            <div className=\"start-wrapper\">\n              <button className=\"skip\" onClick={() => { limit > answerList.length + 1 ? handleSkip(activeStep) : handleSubmit() }}>Skip the Question</button>\n            </div>\n          </Card>\n        </Grid>\n        <Grid item xs></Grid>\n      </Grid>\n      <Footer />\n    </div>\n  )\n}\n\nexport default QuestionList\n"]},"metadata":{},"sourceType":"module"}