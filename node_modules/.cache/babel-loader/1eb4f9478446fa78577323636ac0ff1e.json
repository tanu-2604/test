{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\"\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52'\n  }\n}))(LinearProgress);\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction QuestionList({\n  questionlist\n}) {\n  var _tutorialSteps$active2, _tutorialSteps$active3, _tutorialSteps$active4;\n\n  const classes = useStyles();\n  const [title, setTitle] = useState({});\n  var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n  useEffect(() => {\n    getCategory();\n  }, [1]);\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getCategory(categoryData, options);\n    console.log(result);\n    setTitle(result.data.data);\n  };\n\n  let tutorialSteps = [{\n    label: questionlist === null || questionlist === void 0 ? void 0 : questionlist.question,\n    options: questionlist === null || questionlist === void 0 ? void 0 : questionlist.optionsArray\n  }];\n\n  if (questionlist === null || questionlist === void 0 ? void 0 : questionlist.length) {\n    tutorialSteps = questionlist;\n  }\n\n  const data = JSON.parse(localStorage.getItem('userInfo'));\n  const createdBy = data['name'];\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [answerList, setAnswerList] = React.useState([]);\n  const [createQuiz, setCreateQuiz] = useState();\n  const [result, setResult] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  const [clickedAns, setClickedAns] = useState(0);\n  const maxSteps = tutorialSteps.length;\n\n  function showProgress(index) {\n    var increment = Math.ceil(activeStep / maxSteps * 100);\n    setProgress(increment);\n  }\n\n  const handleNext = (id, label) => {\n    var _tutorialSteps$active;\n\n    const qusId = (_tutorialSteps$active = tutorialSteps[activeStep]) === null || _tutorialSteps$active === void 0 ? void 0 : _tutorialSteps$active.qusId;\n    const answer = label;\n    const answerId = id;\n    setClickedAns(id);\n\n    if (maxSteps - 1 === activeStep) {\n      setAnswerList([...answerList, {\n        qusId: qusId,\n        answer: answer,\n        answerId: answerId\n      }]);\n      setTimeout(() => {\n        handleSubmit([...answerList, {\n          qusId: qusId,\n          answer: answer,\n          answerId: answerId\n        }]);\n      }, 500);\n    } else {\n      setAnswerList([...answerList, {\n        qusId: qusId,\n        answer: answer,\n        answerId: answerId\n      }]);\n      setTimeout(() => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setCount(count + 1);\n      }, 500); // debugger\n    }\n\n    showProgress(tutorialSteps[activeStep].qusId);\n  };\n\n  function handleSkip() {\n    setCount(count + 1);\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  }\n\n  ;\n\n  const handleSubmit = async ([...answerList]) => {\n    const list = {\n      categoryId: categoryId,\n      createdBy: createdBy,\n      quizQuestions: answerList\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\"\n      }\n    };\n    const result = await services.createQuiz(list, options);\n    setCreateQuiz(result.data.data);\n    setResult(true);\n\n    if (result.data.code === 200) {\n      setResult(true);\n    }\n  };\n\n  if (result) {\n    localStorage.setItem(\"createId\", JSON.stringify(createQuiz));\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/sharelink\",\n        state: {\n          quizId: createQuiz\n        }\n      },\n      push: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 14\n    }\n  }, title.title)), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 3\n    }\n  }, \"Question \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 37\n    }\n  }, count, \"/\", maxSteps))), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"questioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"questionname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, count, \": \", (_tutorialSteps$active2 = tutorialSteps[activeStep]) === null || _tutorialSteps$active2 === void 0 ? void 0 : _tutorialSteps$active2.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"optioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, (_tutorialSteps$active3 = tutorialSteps[activeStep]) === null || _tutorialSteps$active3 === void 0 ? void 0 : (_tutorialSteps$active4 = _tutorialSteps$active3.optionsArray) === null || _tutorialSteps$active4 === void 0 ? void 0 : _tutorialSteps$active4.map((options, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: clickedAns === options.optionId ? 'clickoption' : 'nonclickoption',\n      onClick: () => {\n        handleNext(options.optionId, options.optionLabel);\n      },\n      key: index,\n      id: \"cardbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 23\n      }\n    }, options.optionImg.length ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"optionImg\",\n      src: options.optionImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 83\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      className: \"optionbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"cardcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"optioncontent\",\n      id: \"cardText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 27\n      }\n    }, options.optionLabel))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skip\",\n    onClick: () => {\n      maxSteps - 1 != tutorialSteps[activeStep].question.length ? handleSkip() : handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 15\n    }\n  }, \"Skip the Question\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js"],"names":["React","useState","useEffect","Grid","Card","CardContent","makeStyles","withStyles","LinearProgress","services","Redirect","Footer","BorderLinearProgress","theme","root","height","borderRadius","width","colorPrimary","backgroundColor","palette","grey","type","bar","useStyles","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","text","secondary","pro","QuestionList","questionlist","classes","title","setTitle","categoryId","JSON","parse","localStorage","getItem","getCategory","categoryData","options","method","headers","result","console","log","data","tutorialSteps","label","question","optionsArray","length","createdBy","activeStep","setActiveStep","answerList","setAnswerList","createQuiz","setCreateQuiz","setResult","progress","setProgress","count","setCount","clickedAns","setClickedAns","maxSteps","showProgress","index","increment","Math","ceil","handleNext","id","qusId","answer","answerId","setTimeout","handleSubmit","prevActiveStep","handleSkip","list","quizQuestions","code","setItem","stringify","pathname","state","quizId","map","optionId","optionLabel","optionImg"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\",\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52',\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n\n}));\nfunction QuestionList({ questionlist }) {\n\n  const classes = useStyles();\n  const [title,setTitle]=useState({})\n  var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n\n  useEffect(() => {\n    getCategory();\n}, [1])\n\nconst  getCategory = async () => {\n const categoryData={\n     categoryId:categoryId\n }\n\n const options = {\n     method: 'POST',\n     headers: {\n         \"Apiuserid\": \"49507884\",\n         \"Scope\": \"In.QuizApp.READ\",   \n     }\n }\n const result = await services. getCategory(categoryData,options)\n console.log(result)\n setTitle(result.data.data)\n};\n  let tutorialSteps = [\n    {\n      label: questionlist?.question,\n      options: questionlist?.optionsArray,\n    },\n  ];\n\n\n  if (questionlist?.length) {\n    tutorialSteps = questionlist;\n  }\n  const data = JSON.parse(localStorage.getItem('userInfo'));\n  const createdBy = data['name'];\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [answerList, setAnswerList] = React.useState([]);\n  const [createQuiz, setCreateQuiz] = useState();\n  const [result, setResult] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  const [clickedAns, setClickedAns] = useState(0);\n  const maxSteps = tutorialSteps.length;\n\n  function showProgress(index) {\n\n    var increment = Math.ceil((activeStep) / (maxSteps) * 100);\n\n    setProgress(increment)\n\n  }\n\n\n  const handleNext = (id, label) => {\n    const qusId = tutorialSteps[activeStep]?.qusId;\n    const answer = label;\n    const answerId = id;\n    setClickedAns(id)\n    if (maxSteps-1 === activeStep) {\n      setAnswerList(\n        [...answerList, { qusId: qusId, answer: answer, answerId: answerId }]\n      )\n      setTimeout(() => { \n        handleSubmit([...answerList, { qusId: qusId, answer: answer, answerId: answerId }]) }, 500)\n    }\n    else {\n      setAnswerList(\n        [...answerList, { qusId: qusId, answer: answer, answerId: answerId }]\n      )\n      setTimeout(() => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1)\n        setCount(count + 1)\n      }, 500)\n     \n\n      // debugger\n    }\n    showProgress(tutorialSteps[activeStep].qusId);\n\n\n\n  }\n\n\nfunction handleSkip(){ \n    setCount(count + 1)\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n   };\n\n  const handleSubmit = async ([...answerList]) => {\n    \n\n    const list = {\n      categoryId:categoryId,\n      createdBy: createdBy,\n      quizQuestions: answerList\n    }\n \n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n      }\n    }\n    const result = await services.createQuiz(list, options)\n    setCreateQuiz(result.data.data)\n    setResult(true)\n    if (result.data.code === 200) {\n      setResult(true)\n    }\n\n  };\n\n  if (result) {\n    localStorage.setItem(\"createId\", JSON.stringify(createQuiz))\n    return (<Redirect to={{ pathname: \"/sharelink\", state: { quizId: createQuiz } }} push={true} />)\n  }\n\n  return (\n    <div className={classes.gridContainer}>\n      <Grid container>\n        <Grid item xs></Grid>\n        <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\">\n             <h3 className=\"text1\">{title.title}</h3>\n          </div>\n          <div justify=\"center\">\n  <h4 className=\"question\">Question <span>{count}/{maxSteps}</span></h4>\n          </div>\n          <div justify=\"center\">\n            <BorderLinearProgress variant=\"determinate\" value={progress} />\n          </div>\n          <Card className=\"questioncard\">\n            <h3 className=\"questionname\">{count}: {tutorialSteps[activeStep]?.question}</h3>\n            <div className=\"optioncard\">\n              {\n                tutorialSteps[activeStep]?.optionsArray?.map((options, index) => {\n                  return (\n                    <Grid\n                      container\n                      className={\n                        clickedAns === options.optionId ?\n                          'clickoption' : 'nonclickoption'}\n                      onClick={() => { handleNext(options.optionId, options.optionLabel) }}\n                      key={index}\n                      id=\"cardbox\">\n                      <Grid item xs={4} sm={4} md={4} lg={4} >\n                        {options.optionImg.length ?\n                          <img className=\"optionImg\" src={options.optionImg} /> : <span></span>\n                        }\n                      </Grid>\n                      <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                        <CardContent className=\"cardcontent\">\n                          <h3 className=\"optioncontent\" id=\"cardText\">\n                            {options.optionLabel}\n                          </h3>\n                        </CardContent>\n                      </Grid>\n                    </Grid>\n                  )\n                })\n              }\n            </div>\n            <div className=\"start-wrapper\">\n              <button className=\"skip\" onClick={() => { maxSteps - 1 != tutorialSteps[activeStep].question.length ? handleSkip() : handleSubmit() }}>Skip the Question</button>\n            </div>\n          </Card>\n        </Grid>\n        <Grid item xs></Grid>\n      </Grid>\n      <Footer />\n    </div>\n  )\n}\n\nexport default QuestionList\n"]},"metadata":{},"sourceType":"module"}