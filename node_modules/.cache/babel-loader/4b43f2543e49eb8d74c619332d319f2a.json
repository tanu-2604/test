{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js\";\nimport React from 'react';\nimport { Grid, Paper, Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\"\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52'\n  }\n}))(LinearProgress);\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction QuestionList({\n  questionlist\n}) {\n  var _tutorialSteps$active2, _tutorialSteps$active3, _tutorialSteps$active4, _tutorialSteps$active5;\n\n  const classes = useStyles();\n  let tutorialSteps = [{\n    label: questionlist === null || questionlist === void 0 ? void 0 : questionlist.question,\n    options: questionlist === null || questionlist === void 0 ? void 0 : questionlist.optionsArray\n  }];\n\n  if (questionlist === null || questionlist === void 0 ? void 0 : questionlist.length) {\n    tutorialSteps = questionlist;\n  }\n\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [answer, setAnswer] = React.useState({});\n  const maxSteps = tutorialSteps.length;\n\n  const handleNext = (id, label) => {\n    var _tutorialSteps$active;\n\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n    const quid = (_tutorialSteps$active = tutorialSteps[activeStep]) === null || _tutorialSteps$active === void 0 ? void 0 : _tutorialSteps$active.qusId;\n    answer[quid] = {\n      id,\n      label\n    };\n    setAnswer({ ...answer\n    });\n  };\n\n  console.log(answer);\n\n  const handleSkip = () => {\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n  };\n\n  const handleSubmit = () => {\n    var label = [];\n    var label = document.getElementById(\"cardText\").textContent;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 16\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 25\n    }\n  }, \"2021 Friendship\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }, \"Dare\")), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 25\n    }\n  }, \"Question \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 59\n    }\n  }, \"1/15\"))), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 22\n    }\n  }, /*#__PURE__*/React.createElement(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: 50,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"questioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"questionname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, (_tutorialSteps$active2 = tutorialSteps[activeStep]) === null || _tutorialSteps$active2 === void 0 ? void 0 : _tutorialSteps$active2.qusId, \": \", (_tutorialSteps$active3 = tutorialSteps[activeStep]) === null || _tutorialSteps$active3 === void 0 ? void 0 : _tutorialSteps$active3.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"carddesign\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, (_tutorialSteps$active4 = tutorialSteps[activeStep]) === null || _tutorialSteps$active4 === void 0 ? void 0 : (_tutorialSteps$active5 = _tutorialSteps$active4.optionsArray) === null || _tutorialSteps$active5 === void 0 ? void 0 : _tutorialSteps$active5.map((options, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: \"optionpart\",\n      onClick: () => {\n        handleNext(options.optionId, options.optionLabel);\n      },\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 12\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      id: options.optionId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 8\n      }\n    }, options.optionImg.length ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"optionImg\",\n      src: options.optionImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      className: \"optionbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"cardcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"optioncontent\",\n      id: \"cardText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }\n    }, options.optionLabel))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 21\n    }\n  }, maxSteps - 1 != tutorialSteps[activeStep].question.length ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skip\",\n    onClick: handleSkip,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 79\n    }\n  }, \"Skip the Question\") : /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skip\",\n    onClick: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 24\n    }\n  }, \"Submit\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  })));\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js"],"names":["React","Grid","Paper","Card","CardMedia","CardContent","Typography","makeStyles","withStyles","LinearProgress","BorderLinearProgress","theme","root","height","borderRadius","width","colorPrimary","backgroundColor","palette","grey","type","bar","useStyles","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","text","secondary","pro","QuestionList","questionlist","classes","tutorialSteps","label","question","options","optionsArray","length","activeStep","setActiveStep","useState","answer","setAnswer","maxSteps","handleNext","id","prevActiveStep","quid","qusId","console","log","handleSkip","handleSubmit","document","getElementById","textContent","map","index","optionId","optionLabel","optionImg"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {  Grid, Paper,Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n      height: 10,\n      borderRadius: 5,\n      width:\"100%\",\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#FFDD52',\n    },\n  }))(LinearProgress);\n  \nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      pro:{\n          textAlign:\"center\"\n      }\n    \n  }));\n  function QuestionList({questionlist}) {\n\n    const classes = useStyles();\n  \n    let tutorialSteps = [\n      {\n          label: questionlist?.question,\n          options: questionlist?.optionsArray,\n      },\n  ];\n\n  \nif (questionlist?.length) {\n  tutorialSteps = questionlist;\n}\nconst [activeStep, setActiveStep] = React.useState(0);\nconst [answer, setAnswer] = React.useState({});\nconst maxSteps = tutorialSteps.length;\nconst handleNext = (id,label) => { \n  \n  setActiveStep(prevActiveStep => prevActiveStep + 1);\n  const quid=tutorialSteps[activeStep]?.qusId;\n  answer[quid]={id,label}\n  setAnswer(\n    {...answer},\n  )\n  \n};\n\nconsole.log(answer)\nconst handleSkip = () => { setActiveStep(prevActiveStep => prevActiveStep + 1); };\nconst handleSubmit = () => {\n   var label=[];\n  var label=document.getElementById(\"cardText\").textContent\n\n };\n      return (\n          <div className={classes.gridContainer}>\n            <Grid container>\n               <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                     <div justify=\"center\">\n                        <h3 className=\"text1\">2021 Friendship</h3>\n                        <h3 className=\"text2\">Dare</h3>\n                     </div>\n                     <div justify=\"center\">     \n                        <h4 className=\"question\">Question <span>1/15</span></h4>\n                     </div>\n                     <div justify=\"center\">\n                        <BorderLinearProgress variant=\"determinate\" value={50} />\n                     </div>\n                <Card className=\"questioncard\">\n      <h3 className=\"questionname\">{tutorialSteps[activeStep]?.qusId}: {tutorialSteps[activeStep]?.question}</h3>\n               \n                      \n                        <div className=\"carddesign\">\n{\n  tutorialSteps[activeStep]?.optionsArray?.map((options,index)=>{\n    \n    return(<Grid\n      container\n      className=\"optionpart\"\n      onClick={()=>{handleNext(options.optionId,options.optionLabel)}}\n      key={index}\n      >\n       <Grid item xs={4} sm={4} md={4}lg={4} id={options.optionId} >\n         \n           {options.optionImg.length\n             ?<img className=\"optionImg\" \n              src={options.optionImg}/>\n             \n             :<span></span>\n             \n           }\n      </Grid>\n      <Grid item xs={8} sm={8} md={8}lg={8} className=\"optionbg\" >\n        <CardContent className=\"cardcontent\">\n          <h3 className=\"optioncontent\" id=\"cardText\">\n          {options.optionLabel}\n          </h3>\n        </CardContent>\n      </Grid>\n      </Grid>)\n\n  })\n}\n                    </div>\n                   \n                    <div className=\"start-wrapper\">\n                      \n                     {\n                    \n                     maxSteps-1 !=tutorialSteps[activeStep].question.length?  <button className=\"skip\"\n                       onClick={handleSkip}\n                       >Skip the Question</button>:\n                       <button className=\"skip\"onClick={handleSubmit}\n                       >Submit</button>\n                     }\n                    </div> \n             </Card>\n                </Grid>\n                <Grid item xs></Grid>\n           </Grid>\n      </div>\n    )\n}\n\nexport default QuestionList\n"]},"metadata":{},"sourceType":"module"}