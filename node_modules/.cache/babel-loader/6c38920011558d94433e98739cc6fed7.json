{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js\";\nimport React, { useState, useEffect, Component } from 'react';\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\"\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52'\n  }\n}))(LinearProgress);\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction QuestionList({\n  questionlist,\n  limit\n}) {\n  var _tutorialSteps$active, _tutorialSteps$active2, _tutorialSteps$active3;\n\n  const classes = useStyles();\n  const [title, setTitle] = useState({});\n  const [stateCount, setStateCount] = React.useState([]);\n  let [activeStep, setActiveStep] = React.useState(0);\n  let [answerList, setAnswerList] = React.useState([]);\n  const [skipQuesList, setSkipQuesList] = React.useState([]);\n  const [createQuiz, setCreateQuiz] = useState();\n  const [result, setResult] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  const [clickedAns, setClickedAns] = useState(0);\n  const maxSteps = questionlist.length;\n  const [ansLimit, setAnsLimit] = useState(6);\n  var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n  const data = JSON.parse(localStorage.getItem('userInfo'));\n  const createdBy = data['name'];\n  console.log(questionlist);\n  useEffect(() => {\n    console.log(\"useEffect\");\n    const index = questionlist.map((value, index) => index);\n    setStateCount(index);\n    getCategory();\n  }, [1]);\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getCategory(categoryData, options);\n    setTitle(result.data.data);\n  };\n\n  let tutorialSteps = [{\n    label: questionlist === null || questionlist === void 0 ? void 0 : questionlist.question,\n    options: questionlist === null || questionlist === void 0 ? void 0 : questionlist.optionsArray\n  }];\n\n  if (questionlist === null || questionlist === void 0 ? void 0 : questionlist.length) {\n    tutorialSteps = questionlist;\n  }\n\n  function showProgress(index) {\n    var increment = Math.ceil(count / limit * 100);\n    console.log(increment);\n    setProgress(increment);\n  }\n\n  setTimeout(() => {\n    const handleNext = (id, label) => {\n      var _questionlist$activeS;\n\n      const qusId = (_questionlist$activeS = questionlist[activeStep]) === null || _questionlist$activeS === void 0 ? void 0 : _questionlist$activeS.qusId;\n      const answer = label;\n      const answerId = id;\n      setClickedAns(id);\n      setAnswerList([...answerList, {\n        qusId: qusId,\n        answer: answer,\n        answerId: answerId\n      }]);\n\n      if (limit > answerList.length + 1) {\n        stateCount.shift();\n        activeStep = stateCount[0];\n        setActiveStep(stateCount[0]);\n        setCount(count + 1);\n      } else {\n        handleSubmit([...answerList, {\n          qusId: qusId,\n          answer: answer,\n          answerId: answerId\n        }]);\n      }\n\n      showProgress(tutorialSteps[activeStep].qusId);\n    };\n  }, 500);\n\n  const handleSkip = steps => {\n    // console.log(\"answerLis=>\" + answerList.length);\n    // console.log(\"ansLimit=>\" + ansLimit);\n    // console.log(\"activeStep=>\" + activeStep)\n    stateCount.push(steps);\n    stateCount.shift();\n    activeStep = stateCount[0];\n    setActiveStep(stateCount[0]);\n    console.log(questionlist, activeStep, stateCount);\n  };\n\n  console.log(stateCount);\n\n  const handleSubmit = async ([...answerList]) => {\n    const list = {\n      categoryId: categoryId,\n      createdBy: createdBy,\n      quizQuestions: answerList\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\"\n      }\n    };\n    const result = await services.createQuiz(list, options);\n    setCreateQuiz(result.data.data);\n    setResult(true);\n\n    if (result.data.code === 200) {\n      setResult(true);\n    }\n  };\n\n  if (result) {\n    localStorage.setItem(\"createId\", JSON.stringify(createQuiz));\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: \"/sharelink\",\n        state: {\n          quizId: createQuiz\n        }\n      },\n      push: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"text1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 13\n    }\n  }, title.title)), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }\n  }, \"Question \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 47\n    }\n  }, count, \"/\", limit))), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"questioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"questionname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 13\n    }\n  }, count, \": \", (_tutorialSteps$active = tutorialSteps[activeStep]) === null || _tutorialSteps$active === void 0 ? void 0 : _tutorialSteps$active.question), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"optioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 13\n    }\n  }, (_tutorialSteps$active2 = tutorialSteps[activeStep]) === null || _tutorialSteps$active2 === void 0 ? void 0 : (_tutorialSteps$active3 = _tutorialSteps$active2.optionsArray) === null || _tutorialSteps$active3 === void 0 ? void 0 : _tutorialSteps$active3.map((options, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: clickedAns === options.optionId ? 'clickoption' : 'nonclickoption',\n      onClick: () => {\n        handleNext(options.optionId, options.optionLabel);\n      },\n      key: index,\n      id: \"cardbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 23\n      }\n    }, options.optionImg.length ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"optionImg\",\n      src: options.optionImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 27\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 83\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      className: \"optionbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"cardcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"optioncontent\",\n      id: \"cardText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 27\n      }\n    }, options.optionLabel))));\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"start-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"skip\",\n    onClick: () => {\n      maxSteps - 1 != tutorialSteps[activeStep].question.length ? handleSkip(activeStep) : handleSubmit();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 15\n    }\n  }, \"Skip the Question\")))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default QuestionList;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js"],"names":["React","useState","useEffect","Component","Grid","Card","CardContent","makeStyles","withStyles","LinearProgress","services","Redirect","Footer","BorderLinearProgress","theme","root","height","borderRadius","width","colorPrimary","backgroundColor","palette","grey","type","bar","useStyles","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","text","secondary","pro","QuestionList","questionlist","limit","classes","title","setTitle","stateCount","setStateCount","activeStep","setActiveStep","answerList","setAnswerList","skipQuesList","setSkipQuesList","createQuiz","setCreateQuiz","result","setResult","progress","setProgress","count","setCount","clickedAns","setClickedAns","maxSteps","length","ansLimit","setAnsLimit","categoryId","JSON","parse","localStorage","getItem","data","createdBy","console","log","index","map","value","getCategory","categoryData","options","method","headers","tutorialSteps","label","question","optionsArray","showProgress","increment","Math","ceil","setTimeout","handleNext","id","qusId","answer","answerId","shift","handleSubmit","handleSkip","steps","push","list","quizQuestions","code","setItem","stringify","pathname","state","quizId","optionId","optionLabel","optionImg"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,WAArB,QAAwC,mBAAxC;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAO,2BAAP;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,MAAMC,oBAAoB,GAAGL,UAAU,CAAEM,KAAD,KAAY;AAClDC,EAAAA,IAAI,EAAE;AACJC,IAAAA,MAAM,EAAE,EADJ;AAEJC,IAAAA,YAAY,EAAE,CAFV;AAGJC,IAAAA,KAAK,EAAE;AAHH,GAD4C;AAMlDC,EAAAA,YAAY,EAAE;AACZC,IAAAA,eAAe,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBR,KAAK,CAACO,OAAN,CAAcE,IAAd,KAAuB,OAAvB,GAAiC,GAAjC,GAAuC,GAA1D;AADL,GANoC;AASlDC,EAAAA,GAAG,EAAE;AACHP,IAAAA,YAAY,EAAE,CADX;AAEHG,IAAAA,eAAe,EAAE;AAFd;AAT6C,CAAZ,CAAD,CAAV,CAazBX,cAbyB,CAA7B;AAeA,MAAMgB,SAAS,GAAGlB,UAAU,CAAEO,KAAD,KAAY;AACvCY,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,MADA;AAEbC,IAAAA,YAAY,EAAE,MAFD;AAGbC,IAAAA,UAAU,EAAE,SAHC;AAIbC,IAAAA,SAAS,EAAE;AAJE,GADwB;AAOvCC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAElB,KAAK,CAACmB,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAErB,KAAK,CAACO,OAAN,CAAce,IAAd,CAAmBC;AAHrB,GAPgC;AAYvCC,EAAAA,GAAG,EAAE;AACHJ,IAAAA,SAAS,EAAE;AADR;AAZkC,CAAZ,CAAD,CAA5B;;AAiBA,SAASK,YAAT,CAAsB;AAAEC,EAAAA,YAAF;AAAeC,EAAAA;AAAf,CAAtB,EAA8C;AAAA;;AAC5C,QAAMC,OAAO,GAAGjB,SAAS,EAAzB;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoB3C,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAC4C,UAAD,EAAaC,aAAb,IAA8B9C,KAAK,CAACC,QAAN,CAAe,EAAf,CAApC;AACA,MAAI,CAAC8C,UAAD,EAAaC,aAAb,IAA8BhD,KAAK,CAACC,QAAN,CAAe,CAAf,CAAlC;AACA,MAAI,CAACgD,UAAD,EAAaC,aAAb,IAA8BlD,KAAK,CAACC,QAAN,CAAe,EAAf,CAAlC;AACA,QAAM,CAACkD,YAAD,EAAeC,eAAf,IAAkCpD,KAAK,CAACC,QAAN,CAAe,EAAf,CAAxC;AACA,QAAM,CAACoD,UAAD,EAAaC,aAAb,IAA8BrD,QAAQ,EAA5C;AACA,QAAM,CAACsD,MAAD,EAASC,SAAT,IAAsBvD,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACwD,QAAD,EAAWC,WAAX,IAA0BzD,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAAC0D,KAAD,EAAQC,QAAR,IAAoB3D,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAAC4D,UAAD,EAAaC,aAAb,IAA8B7D,QAAQ,CAAC,CAAD,CAA5C;AACA,QAAM8D,QAAQ,GAAGvB,YAAY,CAACwB,MAA9B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BjE,QAAQ,CAAC,CAAD,CAAxC;AACA,MAAIkE,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAjB;AACA,QAAMC,IAAI,GAAGJ,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAb;AACA,QAAME,SAAS,GAAGD,IAAI,CAAC,MAAD,CAAtB;AAEAE,EAAAA,OAAO,CAACC,GAAR,CAAYnC,YAAZ;AACAtC,EAAAA,SAAS,CAAC,MAAM;AACdwE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACA,UAAMC,KAAK,GAAGpC,YAAY,CAACqC,GAAb,CAAiB,CAACC,KAAD,EAAQF,KAAR,KAAkBA,KAAnC,CAAd;AACA9B,IAAAA,aAAa,CAAC8B,KAAD,CAAb;AACAG,IAAAA,WAAW;AACZ,GALQ,EAKN,CAAC,CAAD,CALM,CAAT;;AAOA,QAAMA,WAAW,GAAG,YAAY;AAC9B,UAAMC,YAAY,GAAG;AACnBb,MAAAA,UAAU,EAAEA;AADO,KAArB;AAGA,UAAMc,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,OAAO,EAAE;AACP,qBAAa,UADN;AAEP,iBAAS;AAFF;AAFK,KAAhB;AAOA,UAAM5B,MAAM,GAAG,MAAM7C,QAAQ,CAACqE,WAAT,CAAqBC,YAArB,EAAmCC,OAAnC,CAArB;AACArC,IAAAA,QAAQ,CAACW,MAAM,CAACiB,IAAP,CAAYA,IAAb,CAAR;AACD,GAbD;;AAeA,MAAIY,aAAa,GAAG,CAClB;AACEC,IAAAA,KAAK,EAAE7C,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE8C,QADvB;AAEEL,IAAAA,OAAO,EAAEzC,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE+C;AAFzB,GADkB,CAApB;;AAMA,MAAI/C,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAEwB,MAAlB,EAA0B;AACxBoB,IAAAA,aAAa,GAAG5C,YAAhB;AACD;;AACD,WAASgD,YAAT,CAAsBZ,KAAtB,EAA6B;AAC3B,QAAIa,SAAS,GAAGC,IAAI,CAACC,IAAL,CAAWhC,KAAD,GAAWlB,KAAX,GAAoB,GAA9B,CAAhB;AACAiC,IAAAA,OAAO,CAACC,GAAR,CAAYc,SAAZ;AACA/B,IAAAA,WAAW,CAAC+B,SAAD,CAAX;AACD;;AACDG,EAAAA,UAAU,CAAC,MAAI;AACb,UAAMC,UAAU,GAAG,CAACC,EAAD,EAAKT,KAAL,KAAe;AAAA;;AAEhC,YAAMU,KAAK,4BAAGvD,YAAY,CAACO,UAAD,CAAf,0DAAG,sBAA0BgD,KAAxC;AACA,YAAMC,MAAM,GAAGX,KAAf;AACA,YAAMY,QAAQ,GAAGH,EAAjB;AACAhC,MAAAA,aAAa,CAACgC,EAAD,CAAb;AACA5C,MAAAA,aAAa,CACX,CAAC,GAAGD,UAAJ,EAAgB;AAAE8C,QAAAA,KAAK,EAAEA,KAAT;AAAgBC,QAAAA,MAAM,EAAEA,MAAxB;AAAgCC,QAAAA,QAAQ,EAAEA;AAA1C,OAAhB,CADW,CAAb;;AAGA,UAAIxD,KAAK,GAAGQ,UAAU,CAACe,MAAX,GAAoB,CAAhC,EAAmC;AACjCnB,QAAAA,UAAU,CAACqD,KAAX;AACAnD,QAAAA,UAAU,GAAGF,UAAU,CAAC,CAAD,CAAvB;AACAG,QAAAA,aAAa,CAACH,UAAU,CAAC,CAAD,CAAX,CAAb;AACAe,QAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACD,OALD,MAMK;AAEDwC,QAAAA,YAAY,CAAC,CAAC,GAAGlD,UAAJ,EAAgB;AAAE8C,UAAAA,KAAK,EAAEA,KAAT;AAAgBC,UAAAA,MAAM,EAAEA,MAAxB;AAAgCC,UAAAA,QAAQ,EAAEA;AAA1C,SAAhB,CAAD,CAAZ;AACH;;AACDT,MAAAA,YAAY,CAACJ,aAAa,CAACrC,UAAD,CAAb,CAA0BgD,KAA3B,CAAZ;AACD,KApBD;AAqBD,GAtBS,EAsBR,GAtBQ,CAAV;;AAyBA,QAAMK,UAAU,GAAIC,KAAD,IAAW;AAC5B;AACA;AACA;AACAxD,IAAAA,UAAU,CAACyD,IAAX,CAAgBD,KAAhB;AACAxD,IAAAA,UAAU,CAACqD,KAAX;AACAnD,IAAAA,UAAU,GAAGF,UAAU,CAAC,CAAD,CAAvB;AACAG,IAAAA,aAAa,CAACH,UAAU,CAAC,CAAD,CAAX,CAAb;AACA6B,IAAAA,OAAO,CAACC,GAAR,CAAYnC,YAAZ,EAA0BO,UAA1B,EAAsCF,UAAtC;AAED,GAVD;;AAaA6B,EAAAA,OAAO,CAACC,GAAR,CAAY9B,UAAZ;;AACA,QAAMsD,YAAY,GAAG,OAAO,CAAC,GAAGlD,UAAJ,CAAP,KAA2B;AAC9C,UAAMsD,IAAI,GAAG;AACXpC,MAAAA,UAAU,EAAEA,UADD;AAEXM,MAAAA,SAAS,EAAEA,SAFA;AAGX+B,MAAAA,aAAa,EAAEvD;AAHJ,KAAb;AAMA,UAAMgC,OAAO,GAAG;AACdC,MAAAA,MAAM,EAAE,MADM;AAEdC,MAAAA,OAAO,EAAE;AACP,qBAAa,UADN;AAEP,iBAAS;AAFF;AAFK,KAAhB;AAOA,UAAM5B,MAAM,GAAG,MAAM7C,QAAQ,CAAC2C,UAAT,CAAoBkD,IAApB,EAA0BtB,OAA1B,CAArB;AACA3B,IAAAA,aAAa,CAACC,MAAM,CAACiB,IAAP,CAAYA,IAAb,CAAb;AACAhB,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,QAAID,MAAM,CAACiB,IAAP,CAAYiC,IAAZ,KAAqB,GAAzB,EAA8B;AAC5BjD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD;AACF,GApBD;;AAsBA,MAAID,MAAJ,EAAY;AACVe,IAAAA,YAAY,CAACoC,OAAb,CAAqB,UAArB,EAAiCtC,IAAI,CAACuC,SAAL,CAAetD,UAAf,CAAjC;AACA,wBAAQ,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAEuD,QAAAA,QAAQ,EAAE,YAAZ;AAA0BC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAEzD;AAAV;AAAjC,OAAd;AAAyE,MAAA,IAAI,EAAE,IAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAEX,OAAO,CAAChB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuBiB,KAAK,CAACA,KAA7B,CADF,CADF,eAIE;AAAK,IAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAI,IAAA,SAAS,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOgB,KAAP,OAAelB,KAAf,CAAlC,CADF,CAJF,eAOE;AAAK,IAAA,OAAO,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD;AAAsB,IAAA,OAAO,EAAC,aAA9B;AAA4C,IAAA,KAAK,EAAEgB,QAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAPF,eAUE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,IAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA8BE,KAA9B,iCAAuCyB,aAAa,CAACrC,UAAD,CAApD,0DAAuC,sBAA2BuC,QAAlE,CAFF,eAGE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAEIF,aAAa,CAACrC,UAAD,CAFjB,qFAEI,uBAA2BwC,YAF/B,2DAEI,uBAAyCV,GAAzC,CAA6C,CAACI,OAAD,EAAUL,KAAV,KAAoB;AAC/D,wBACE,oBAAC,IAAD;AACE,MAAA,SAAS,MADX;AAEE,MAAA,SAAS,EACPf,UAAU,KAAKoB,OAAO,CAAC8B,QAAvB,GACE,aADF,GACkB,gBAJtB;AAKE,MAAA,OAAO,EAAE,MAAM;AAAElB,QAAAA,UAAU,CAACZ,OAAO,CAAC8B,QAAT,EAAmB9B,OAAO,CAAC+B,WAA3B,CAAV;AAAmD,OALtE;AAME,MAAA,GAAG,EAAEpC,KANP;AAOE,MAAA,EAAE,EAAC,SAPL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGK,OAAO,CAACgC,SAAR,CAAkBjD,MAAlB,gBACC;AAAK,MAAA,SAAS,EAAC,WAAf;AAA2B,MAAA,GAAG,EAAEiB,OAAO,CAACgC,SAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,gBACyD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAF5D,CARF,eAaE,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,MAAA,EAAE,EAAE,CAAtB;AAAyB,MAAA,EAAE,EAAE,CAA7B;AAAgC,MAAA,EAAE,EAAE,CAApC;AAAuC,MAAA,SAAS,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAI,MAAA,SAAS,EAAC,eAAd;AAA8B,MAAA,EAAE,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGhC,OAAO,CAAC+B,WADX,CADF,CADF,CAbF,CADF;AAuBD,GAxBD,CAFJ,CAHF,eAgCE;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAQ,IAAA,SAAS,EAAC,MAAlB;AAAyB,IAAA,OAAO,EAAE,MAAM;AAAEjD,MAAAA,QAAQ,GAAG,CAAX,IAAgBqB,aAAa,CAACrC,UAAD,CAAb,CAA0BuC,QAA1B,CAAmCtB,MAAnD,GAA4DoC,UAAU,CAACrD,UAAD,CAAtE,GAAqFoD,YAAY,EAAjG;AAAqG,KAA/I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,CAhCF,CAVF,CAFF,eAiDE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,CADF,eAoDE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApDF,CADF;AAwDD;;AAED,eAAe5D,YAAf","sourcesContent":["import React, { useState, useEffect, Component } from 'react'\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\",\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52',\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n\n}));\nfunction QuestionList({ questionlist,limit }) {\n  const classes = useStyles();\n  const [title, setTitle] = useState({})\n  const [stateCount, setStateCount] = React.useState([])\n  let [activeStep, setActiveStep] = React.useState(0);\n  let [answerList, setAnswerList] = React.useState([]);\n  const [skipQuesList, setSkipQuesList] = React.useState([]);\n  const [createQuiz, setCreateQuiz] = useState();\n  const [result, setResult] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  const [clickedAns, setClickedAns] = useState(0);\n  const maxSteps = questionlist.length;\n  const [ansLimit, setAnsLimit] = useState(6);\n  var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n  const data = JSON.parse(localStorage.getItem('userInfo'));\n  const createdBy = data['name'];\n\n  console.log(questionlist);\n  useEffect(() => {\n    console.log(\"useEffect\");\n    const index = questionlist.map((value, index) => index);\n    setStateCount(index)\n    getCategory();\n  }, [1])\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n      }\n    }\n    const result = await services.getCategory(categoryData, options)\n    setTitle(result.data.data)\n  };\n\n  let tutorialSteps = [\n    {\n      label: questionlist?.question,\n      options: questionlist?.optionsArray,\n    },\n  ];\n  if (questionlist?.length) {\n    tutorialSteps = questionlist;\n  }\n  function showProgress(index) {\n    var increment = Math.ceil((count) / (limit) * 100);\n    console.log(increment)\n    setProgress(increment)\n  }\n  setTimeout(()=>{\n    const handleNext = (id, label) => {\n\n      const qusId = questionlist[activeStep]?.qusId;\n      const answer = label;\n      const answerId = id;\n      setClickedAns(id)\n      setAnswerList(\n        [...answerList, { qusId: qusId, answer: answer, answerId: answerId }]\n      )\n      if (limit > answerList.length + 1) {\n        stateCount.shift();\n        activeStep = stateCount[0];\n        setActiveStep(stateCount[0]);\n        setCount(count + 1)\n      }\n      else {\n       \n          handleSubmit([...answerList, { qusId: qusId, answer: answer, answerId: answerId }])\n      }\n      showProgress(tutorialSteps[activeStep].qusId);\n    }\n  },500)\n  \n\n  const handleSkip = (steps) => {\n    // console.log(\"answerLis=>\" + answerList.length);\n    // console.log(\"ansLimit=>\" + ansLimit);\n    // console.log(\"activeStep=>\" + activeStep)\n    stateCount.push(steps);\n    stateCount.shift();\n    activeStep = stateCount[0];\n    setActiveStep(stateCount[0]);\n    console.log(questionlist, activeStep, stateCount);\n    \n  };\n\n\n  console.log(stateCount);\n  const handleSubmit = async ([...answerList]) => {\n    const list = {\n      categoryId: categoryId,\n      createdBy: createdBy,\n      quizQuestions: answerList\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n      }\n    }\n    const result = await services.createQuiz(list, options)\n    setCreateQuiz(result.data.data)\n    setResult(true)\n    if (result.data.code === 200) {\n      setResult(true)\n    }\n  };\n\n  if (result) {\n    localStorage.setItem(\"createId\", JSON.stringify(createQuiz))\n    return (<Redirect to={{ pathname: \"/sharelink\", state: { quizId: createQuiz } }} push={true} />)\n  }\n\n  return (\n    <div className={classes.gridContainer}>\n      <Grid container>\n        <Grid item xs></Grid>\n        <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\">\n            <h3 className=\"text1\">{title.title}</h3>\n          </div>\n          <div justify=\"center\">\n            <h4 className=\"question\">Question <span>{count}/{limit}</span></h4>\n          </div>\n          <div justify=\"center\">\n            <BorderLinearProgress variant=\"determinate\" value={progress} />\n          </div>\n          <Card className=\"questioncard\">\n\n            <h3 className=\"questionname\">{count}: {tutorialSteps[activeStep]?.question}</h3>\n            <div className=\"optioncard\">\n              {\n                tutorialSteps[activeStep]?.optionsArray?.map((options, index) => {\n                  return (\n                    <Grid\n                      container\n                      className={\n                        clickedAns === options.optionId ?\n                          'clickoption' : 'nonclickoption'}\n                      onClick={() => { handleNext(options.optionId, options.optionLabel) }}\n                      key={index}\n                      id=\"cardbox\">\n                      <Grid item xs={4} sm={4} md={4} lg={4} >\n                        {options.optionImg.length ?\n                          <img className=\"optionImg\" src={options.optionImg} /> : <span></span>\n                        }\n                      </Grid>\n                      <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                        <CardContent className=\"cardcontent\">\n                          <h3 className=\"optioncontent\" id=\"cardText\">\n                            {options.optionLabel}\n                          </h3>\n                        </CardContent>\n                      </Grid>\n                    </Grid>\n                  )\n                })\n              }\n            </div>\n            <div className=\"start-wrapper\">\n              <button className=\"skip\" onClick={() => { maxSteps - 1 != tutorialSteps[activeStep].question.length ? handleSkip(activeStep) : handleSubmit() }}>Skip the Question</button>\n            </div>\n          </Card>\n        </Grid>\n        <Grid item xs></Grid>\n      </Grid>\n      <Footer />\n    </div>\n  )\n}\n\nexport default QuestionList\n"]},"metadata":{},"sourceType":"module"}