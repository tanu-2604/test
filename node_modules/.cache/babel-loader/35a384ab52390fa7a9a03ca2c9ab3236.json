{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/EditQuiz.js\";\nimport { Card, CardContent, FormControl, Grid, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport \"./createQuiz.css\";\nimport AdminLink from '../management/AdminLinks';\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nfunction EditQuiz() {\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState([{\n    questionTitle: '',\n    priority: 1,\n    answer: \"\",\n    optionsArray: [{\n      optionLabel: \"\",\n      optionImg: \"\"\n    }, {\n      optionLabel: \"\",\n      optionImg: \"\"\n    }]\n  }]);\n  const [resultdata, setResultData] = useState([{\n    maxScore: '',\n    minScore: \"\",\n    title: \"\",\n    phrase: \"\",\n    needle: \"\",\n    resultImage: \"\"\n  }]);\n  const [quiz, setQuiz] = useState([]);\n  const [image, setImage] = useState('');\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n    getQuizBySlug();\n  }, []);\n\n  const getQuizBySlug = async () => {\n    const data = {\n      quizSlug: id\n    };\n    const options = {\n      method: 'Post',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getQuizBySlug(data, options);\n    console.log(result.data.data);\n    setQuiz(result.data.data);\n    setQuestion(JSON.parse(result.data.data[0].questionData));\n    setResultData(JSON.parse(result.data.data[0].resultData));\n  };\n\n  const addQuestion = () => {\n    setQuestion([...question, {\n      questionTitle: '',\n      priority: 1,\n      answer: \"\",\n      optionsArray: [{\n        optionLabel: \"\",\n        optionImg: \"\"\n      }, {\n        optionLabel: \"\",\n        optionImg: \"\"\n      }]\n    }]);\n  };\n\n  const removeQuestion = index => {\n    const list = [...question];\n    list.splice(index, 1);\n    setQuestion(list);\n  };\n\n  const addresult = () => {\n    setResultData([...resultdata, {\n      maxScore: '',\n      minScore: \"\",\n      title: \"\",\n      phrase: \"\",\n      needle: \"\",\n      resultImage: \"\"\n    }]);\n  };\n\n  const removeresult = index => {\n    const listdata = [...resultdata];\n    listdata.splice(index, 1);\n    setResultData(listdata);\n  };\n\n  const addOption = questionIndex => {\n    const options = question[questionIndex];\n    options.optionsArray.push({\n      optionLabel: \"\",\n      optionImg: \"\"\n    });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options,\n      optionsArray: [...newArray]\n    }];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    const values = [...question];\n    values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n    setQuestion(values);\n  };\n\n  const handleQuestion = (index, event) => {\n    const values = [...question];\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n  };\n\n  const radioclick = (questionIndex, index, event) => {\n    const values = [...question];\n    var clicked = values[questionIndex].optionsArray[index].optionLabel;\n    values[questionIndex].answer = clicked;\n    setQuestion(values);\n  };\n\n  const handleImage = async event => {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n\n    output.onload = function () {\n      URL.revokeObjectURL(output.src); // free memory\n    };\n\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    console.log(data);\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    console.log(ext[0], ext[1]);\n    var file_path = ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"bannerImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.bannerImage(img, options);\n    setImage(result.data.message);\n  };\n\n  const optionImage = async (questionIndex, index, event) => {\n    // var imageOpt = document.getElementById('imageOpt');\n    // imageOpt.src = URL.createObjectURL(event.target.files[0]);\n    // imageOpt.onload = function () {\n    // URL.revokeObjectURL(imageOpt.src) // free memory\n    //  }\n    const values = [...question];\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  };\n\n  const handleMax = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Maxscore\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].maxScore = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handleMin = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Min score\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].minScore = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handleTitle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter title\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].title = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handlephrases = (index, event) => {\n    const resultValue = [...resultdata];\n    resultValue[index].phrase = event.target.value;\n    setResultData(resultValue);\n  };\n\n  const handleneedle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please Choose needle value\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].needle = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handleResultImage = async (event, resindex) => {\n    const resultValue = [...resultdata];\n    var resultimg = event.target.files[0];\n    const data = resultimg.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var result_path = resindex + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, result_path);\n    var resultimage = new FormData();\n    resultimage.append(\"resultImage\", resultimg);\n    resultimage.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(resultimage, options);\n    console.log(result);\n    resultValue[resindex].resultImage = result_path;\n    setResultData(resultValue);\n  };\n\n  const updateList = async () => {\n    var quizId = document.getElementById(\"quizId\").value;\n    var title = document.getElementById(\"title\").value;\n    var slug = document.getElementById(\"slug\").value;\n    var language = document.getElementById(\"language\").value;\n    debugger;\n    var fileUpload = {\n      quizId: quizId,\n      quizTitle: title,\n      quizSlug: slug,\n      language: language,\n      bannerImage: image,\n      questionsArray: question,\n      resultdata: resultdata\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.updateQuiz(fileUpload, options);\n    console.log(result);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AdminLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 9\n    }\n  }), quiz === null || quiz === void 0 ? void 0 : quiz.map((list, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: \"detailView\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"quizId\",\n      defaultValue: list.adminQuizId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 33\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      className: \"title-text\",\n      name: \"title\",\n      defaultValue: list.title,\n      placeholder: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 40\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 33\n      }\n    }, \"Slug\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"slug\",\n      className: \"title-text\",\n      name: \"slug\",\n      defaultValue: list.slug,\n      placeholder: \"Slug\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 40\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 403,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 33\n      }\n    }, \"language\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 416,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      label: \"Category\",\n      id: \"language\",\n      value: list.language,\n      className: \"title-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 417,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: list.language,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 45\n      }\n    }, list.language)))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 425,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 33\n      }\n    }, \"upload\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 434,\n        columnNumber: 43\n      }\n    }, list.bannerImage != \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"output\",\n      className: \"img\",\n      src: `${list.image_base_path}/${list.bannerImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 441,\n        columnNumber: 42\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 40\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"output\",\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 42\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      id: \"input\",\n      name: \"input\",\n      onChange: event => handleImage(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 448,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 449,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"create-img\",\n      htmlFor: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 45\n      }\n    }, \"  Choose your Photo\")))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 457,\n        columnNumber: 29\n      }\n    })), question.map((que, index) => /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 462,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 33\n      }\n    }, \"Question\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 29\n      }\n    }, question.length > 1 && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => removeQuestion(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 52\n      }\n    }, \"X\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 471,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"question\",\n      defaultValue: que.questionTitle,\n      className: \"que-text\",\n      name: \"question\",\n      placeholder: \"Enter Question\",\n      onChange: event => handleQuestion(index, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 40\n      }\n    })), que.optionsArray.map((option, optIndex) => {\n      var _option$optionImg;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"answerContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 483,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: `option_${index}`,\n        defaultChecked: que.answer,\n        onClick: event => radioclick(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484,\n          columnNumber: 40\n        }\n      }), ((_option$optionImg = option.optionImg) === null || _option$optionImg === void 0 ? void 0 : _option$optionImg.length) ? /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"viewOption\",\n        key: optIndex,\n        id: \"cardbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        className: \"div-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"view-img\",\n        src: `${list.image_base_path}/${option.optionImg}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 24\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        sm: 8,\n        md: 8,\n        lg: 8,\n        className: \"viewbg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: \"view-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"create-option\",\n        placeholder: \"Answer\",\n        defaultValue: option.optionLabel,\n        onChange: event => handleOption(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 22\n        }\n      })))) : /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"viewOption\",\n        key: index,\n        id: \"cardbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 502,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        lg: 12,\n        className: \"viewbg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: \"view-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 508,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"create-option\",\n        placeholder: \"Answer\",\n        defaultValue: option.optionLabel,\n        onChange: event => handleOption(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 22\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quizwrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quizfile-upload2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 515,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        className: \"quizoption2\",\n        onChange: event => optionImage(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/image/option.png\",\n        height: \"40px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 35\n        }\n      }))), optIndex > 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: () => removeOption(index, optIndex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 56\n        }\n      }, \"X\")));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 526,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      onClick: () => addOption(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 528,\n        columnNumber: 39\n      }\n    }, \"Add Option\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 31\n      }\n    }, index === question.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      onClick: () => addQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 66\n      }\n    }, \"Add Question\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 535,\n        columnNumber: 29\n      }\n    }))), resultdata === null || resultdata === void 0 ? void 0 : resultdata.map((res, resindex) => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        sm: 6,\n        md: 6,\n        lg: 4,\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 545,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"createnumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 546,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 33\n        }\n      }, \"Result\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"createnumber1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 28\n        }\n      }, resultdata.length > 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: () => removeresult(resindex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 53\n        }\n      }, \"X\"))), /*#__PURE__*/React.createElement(Card, {\n        className: \"create-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 43\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"max\",\n        className: \"result-text\",\n        name: \"max\",\n        defaultValue: res.maxScore,\n        onBlur: event => handleMax(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 40\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"min\",\n        className: \"result-text\",\n        name: \"min\",\n        defaultValue: res.minScore,\n        onBlur: event => handleMin(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"resultTitle\",\n        className: \"result-text\",\n        name: \"resultTitle\",\n        defaultValue: res.title,\n        onBlur: event => handleTitle(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"phrase\",\n        className: \"result-text\",\n        name: \"phrase\",\n        defaultValue: res.phrase,\n        onBlur: event => handlephrases(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        id: `resultImage${resindex}`,\n        className: \"img-input\",\n        name: `resultImage${resindex}`,\n        onChange: event => handleResultImage(event, resindex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 579,\n          columnNumber: 37\n        }\n      }), /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 580,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        id: \"needle\",\n        className: \"result-text\",\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        onChange: event => handleneedle(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 581,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 583,\n          columnNumber: 41\n        }\n      }, \"Select Needle Position \"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 43\n        }\n      }, \"2\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 43\n        }\n      }, \"8\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 43\n        }\n      }, \"12\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 587,\n          columnNumber: 43\n        }\n      }, \"18\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"create-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"create-img\",\n        htmlFor: `resultImage${resindex}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 41\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 592,\n          columnNumber: 45\n        }\n      }, \"  Choose your Photo\")))))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 600,\n          columnNumber: 29\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 605,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      onClick: updateList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 606,\n        columnNumber: 33\n      }\n    }, \"Update\")));\n  }));\n}\n\nexport default EditQuiz;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/EditQuiz.js"],"names":["Card","CardContent","FormControl","Grid","makeStyles","MenuItem","Select","React","useEffect","useState","AdminLink","useParams","services","useStyles","theme","root","width","gridContainer","paddingTop","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","headPart","backgroundColor","icon","categorytitle","fontSize","fontWeight","heading","typography","pxToRem","fontWeightRegular","EditQuiz","classes","id","question","setQuestion","questionTitle","priority","answer","optionsArray","optionLabel","optionImg","resultdata","setResultData","maxScore","minScore","title","phrase","needle","resultImage","quiz","setQuiz","image","setImage","data","JSON","parse","localStorage","getItem","jwt","getQuizBySlug","quizSlug","options","method","headers","result","console","log","questionData","resultData","addQuestion","removeQuestion","index","list","splice","addresult","removeresult","listdata","addOption","questionIndex","push","previous","slice","current","next","length","removeOption","answerIndex","newArray","filter","value","handleOption","event","values","target","handleQuestion","radioclick","clicked","handleImage","output","document","getElementById","src","URL","createObjectURL","files","onload","revokeObjectURL","imgpath","name","currentTime","Date","time","getTime","ext","split","file_path","myimg","replace","img","FormData","append","bannerImage","message","optionImage","getImage","handleMax","alert","resultValue","handleMin","handleTitle","handlephrases","handleneedle","handleResultImage","resindex","resultimg","result_path","resultimage","updateList","quizId","slug","language","fileUpload","quizTitle","questionsArray","updateQuiz","map","adminQuizId","formControl","image_base_path","que","option","optIndex","res"],"mappings":"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","sourcesContent":["import { Card, CardContent, FormControl, Grid, makeStyles, MenuItem, Select} from '@material-ui/core';\nimport React,{useEffect, useState} from 'react';\nimport \"./createQuiz.css\"\nimport AdminLink from '../management/AdminLinks';\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    gridContainer: {\n      paddingTop:\"20px\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    headPart:{\n        backgroundColor:\"#133b5c\",\n      color:\"#ffff\"\n    },\n    icon:{\n        color:\"#fff\"\n    },\n    categorytitle:{\n        color:\"#133b5c\",\n        fontSize:\"35px\",\n        fontWeight:\"600\",\n        textAlign:\"center\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(20),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n\nfunction EditQuiz() {\n    const classes = useStyles();\n    const {id}=useParams();\n    const [question, setQuestion] = useState(\n      [\n        {\n          questionTitle: '',\n          priority:1,\n          answer:\"\",\n          optionsArray: [\n            { optionLabel: \"\",optionImg: \"\"  },\n            { optionLabel: \"\",optionImg: \"\"  }\n          ]\n        },\n      ]\n      )\n      const [resultdata, setResultData] = useState(\n        [\n          {\n           maxScore: '',\n           minScore:\"\",\n           title:\"\",\n           phrase:\"\",\n           needle:\"\",\n           resultImage:\"\"\n          }\n        ]\n      )\n \n  const [quiz,setQuiz]=useState([])\n  const[image,setImage]=useState('')\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n      getQuizBySlug();\n  }, [])\n\n  const getQuizBySlug = async () => {\n       const data={\n         quizSlug:id\n       }\n      const options = {\n          method: 'Post',\n          headers: {\n              \"Apiuserid\": \"49507884\",\n              \"Scope\": \"In.QuizApp.READ\",\n              \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n      }\n      const result = await services.getQuizBySlug(data,options)\n      console.log(result.data.data)\n      setQuiz(result.data.data)\n      setQuestion(JSON.parse(result.data.data[0].questionData))\n      setResultData(JSON.parse(result.data.data[0].resultData))\n  };\n      const addQuestion = () => {\n        setQuestion([\n          ...question,\n          {\n            questionTitle: '',\n            priority:1,\n            answer:\"\",\n            optionsArray: [\n              { optionLabel: \"\",optionImg: \"\"  },\n              { optionLabel: \"\",optionImg: \"\"  }\n            ]\n          },\n        ])\n      }\n    \n      const removeQuestion = (index) => {\n        const list = [...question]\n        list.splice(index, 1);\n        setQuestion(list);\n      }\n      const addresult = () => {\n        setResultData([\n          ...resultdata,\n          {\n            maxScore: '',\n            minScore:\"\",\n            title:\"\",\n            phrase:\"\",\n            needle:\"\",\n            resultImage:\"\"\n           }\n        ])\n      }\n    \n      const removeresult = (index) => {\n        const listdata = [...resultdata]\n        listdata.splice(index, 1);\n        setResultData(listdata);\n      }\n      const addOption = (questionIndex) => {\n        const options = question[questionIndex];\n        options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n        const previous = question.slice(0, questionIndex);\n        const current = [options];\n        const next = question.slice(questionIndex + 1, question?.length);\n        setQuestion([\n          ...previous,\n          ...current,\n          ...next\n        ]);\n      }\n      const removeOption = (questionIndex, answerIndex) => {\n        const options = question[questionIndex];\n        const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n        const previous = question.slice(0, questionIndex);\n        const current = [{ ...options, optionsArray: [...newArray] }];\n        const next = question.slice(questionIndex + 1, question?.length);\n        setQuestion([\n          ...previous,\n          ...current,\n          ...next\n        ]);\n      }\n      const handleOption = (questionIndex, index, event) => {\n        const values = [...question];\n    \n        values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n        setQuestion(values);\n      }\n      const handleQuestion = (index, event) => {\n\n        const values = [...question];\n    \n        values[index].questionTitle = event.target.value;\n        setQuestion(values);\n    \n      }\n      const radioclick = (questionIndex,index,event) => {\n        const values = [...question];\n        var clicked= values[questionIndex].optionsArray[index].optionLabel\n        values[questionIndex].answer=clicked\n        setQuestion(values);\n      }\n      const handleImage = async(event) => {\n        var output = document.getElementById('output');\n        output.src = URL.createObjectURL(event.target.files[0]);\n        output.onload = function () {\n        URL.revokeObjectURL(output.src) // free memory\n         }\n         var imgpath=event.target.files[0]\n        const data = imgpath.name;\n        console.log(data)\n        const currentTime = new Date();\n        const time = currentTime.getTime();\n        const ext= data.split('.')\n        console.log(ext[0],ext[1])\n        var file_path=ext[0]+time+'.'+ext[1];\n        var myimg=data.replace(data,file_path)\n        var img=new FormData()\n        img.append(\"bannerImg\",imgpath)\n        img.append(\"newName\",myimg)\n        const options = {\n          method: 'POST',\n          headers: {\n            \"Apiuserid\": \"49507884\",\n            \"Scope\": \"In.QuizApp.INSERT\",\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n        }\n        const result = await services.bannerImage(img, options);\n       setImage(result.data.message)\n      }\n      \n      const optionImage = async(questionIndex, index, event) => {\n        // var imageOpt = document.getElementById('imageOpt');\n        // imageOpt.src = URL.createObjectURL(event.target.files[0]);\n        // imageOpt.onload = function () {\n        // URL.revokeObjectURL(imageOpt.src) // free memory\n        //  }\n        const values = [...question];\n         var imgpath=event.target.files[0]\n        const data = imgpath.name;\n        const currentTime = new Date();\n        const time = currentTime.getTime();\n        const ext= data.split('.')\n        var file_path= questionIndex+'_' + index+'_' +ext[0]+time+'.'+ext[1];\n        var myimg=data.replace(data,file_path)\n        var img=new FormData()\n        img.append(\"optionImg\",imgpath);\n        img.append(\"newName\",myimg)\n        const options = {\n          method: 'POST',\n          headers: {\n            \"Apiuserid\": \"49507884\",\n            \"Scope\": \"In.QuizApp.INSERT\",\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n        }\n        const result = await services.getImage(img, options);\n        values[questionIndex].optionsArray[index].optionImg=file_path;\n        setQuestion(values);\n      }\n      const handleMax = (index, event) => {  \n        if(event.target.value===\"\")\n        {\n          alert(\"Please enter Maxscore\");\n          return true;\n        }  \n        else{\n          const resultValue = [...resultdata];\n          resultValue[index].maxScore = event.target.value;\n          setResultData(resultValue);\n      \n        }   \n      }\n      const handleMin = (index, event) => {    \n        if(event.target.value===\"\")\n        {\n          alert(\"Please enter Min score\");\n          return true;\n        }  \n        else{\n          const resultValue = [...resultdata];\n        resultValue[index].minScore = event.target.value;\n        setResultData(resultValue);\n      \n        }      \n        \n    \n      }\n      const handleTitle = (index, event) => {\n        if(event.target.value===\"\")\n        {\n          alert(\"Please enter title\");\n          return true;\n        }  \n        else{\n          const resultValue = [...resultdata];\n          resultValue[index].title= event.target.value;\n          setResultData(resultValue);\n      \n        }          \n    \n      }\n      const handlephrases = (index, event) => {       \n        const resultValue = [...resultdata];\n        resultValue[index].phrase = event.target.value;\n        setResultData(resultValue);\n    \n      }\n      const handleneedle = (index, event) => {  \n        if(event.target.value===\"\")\n        {\n          alert(\"Please Choose needle value\");\n          return true;\n        }  \n        else{\n          const resultValue = [...resultdata];\n          resultValue[index].needle = event.target.value;\n          setResultData(resultValue);\n        }          \n    \n      }\n      const handleResultImage = async( event,resindex) => {\n        const resultValue = [...resultdata];\n         var resultimg=event.target.files[0]\n        const data = resultimg.name;\n        const currentTime = new Date();\n        const time = currentTime.getTime();\n        const ext= data.split('.')\n        var result_path= resindex+'_' +ext[0]+time+'.'+ext[1];\n        var myimg=data.replace(data,result_path)\n        var resultimage=new FormData()\n       resultimage.append(\"resultImage\",resultimg);\n       resultimage.append(\"newName\",myimg)\n        const options = {\n          method: 'POST',\n          headers: {\n            \"Apiuserid\": \"49507884\",\n            \"Scope\": \"In.QuizApp.INSERT\",\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n        }\n        const result = await services.getImage(resultimage, options);\n        console.log(result)\n        resultValue[resindex].resultImage=result_path;\n        setResultData(resultValue);\n      }\n      const updateList = async() => {\n        var quizId=document.getElementById(\"quizId\").value\n        var title=document.getElementById(\"title\").value\n        var slug=document.getElementById(\"slug\").value\n        var language=document.getElementById(\"language\").value\n        debugger\n       \n        var fileUpload={\n          quizId:quizId,\n          quizTitle:title,\n          quizSlug:slug,\n          language:language,\n          bannerImage:image,\n          questionsArray:question,\n          resultdata:resultdata\n\n        }\n        const options = {\n          method: 'POST',\n          headers: {\n            \"Apiuserid\": \"49507884\",\n            \"Scope\": \"In.QuizApp.INSERT\",\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n        }\n        const result = await services.updateQuiz(fileUpload, options)\n        console.log(result)\n  }\n    return (\n        <div className={classes.root}>\n        <AdminLink/>\n           {\n             quiz?.map((list,index)=>{\n               return(\n                <Grid container className=\"detailView\">\n                <Grid container>\n                  <input type=\"hidden\" id=\"quizId\" defaultValue={list.adminQuizId} />\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} >\n                            <div className=\"createnumber\">\n                                <h3>Title</h3>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                       <input  type=\"text\" id=\"title\" className=\"title-text\"\n                                    name=\"title\"\n                                    defaultValue={list.title}\n                                    placeholder=\"Title\"\n                                    />\n                                       </Grid>\n                              </Card>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                          <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} >\n                            <div className=\"createnumber\">\n                                <h3>Slug</h3>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                       <input  type=\"text\" id=\"slug\" className=\"title-text\"\n                                    name=\"slug\"\n                                    defaultValue={list.slug}\n                                    placeholder=\"Slug\"\n                                    />\n                                       </Grid>\n                              </Card>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                           <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} >\n                            <div className=\"createnumber\">\n                                <h3>language</h3>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                        <FormControl className={classes.formControl}fullWidth  >\n                                          <select label=\"Category\" id=\"language\" value={list.language} className=\"title-text\" > \n                                            {/* <MenuItem value=\"\">select Language</MenuItem>      */}\n                                            <option value={list.language}>{list.language}</option>\n                                          </select>\n                                       </FormControl>\n                                       </Grid>\n                              </Card>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                          <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} >\n                            <div className=\"createnumber\">\n                                <h3>upload</h3>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                           {\n                          list.bannerImage!=\"\"?\n                              <div className=\"img-holder\">\n                                         <img id=\"output\" className=\"img\" src={`${list.image_base_path}/${list.bannerImage}`}/>\n                                        </div>\n                                           :\n                                       <div className=\"img-holder\">\n                                         <img id=\"output\" className=\"img\"/>\n                                        </div>\n                        }\n                                         <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\"  onChange={event => handleImage(event)} />\n                                        <div className=\"create-label\">\n                                        <label className=\"create-img\" htmlFor=\"input\">\n                                            <span>  Choose your Photo</span>\n                                        </label>\n                                        </div>\n                                       </Grid>\n                              </Card>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                          {\n                        question.map((que, index) => (\n                          <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                            <div className=\"createnumber\">\n                                <h3>Question</h3>\n                            </div>\n                            <div className=\"createnumber1\">\n                            {question.length > 1 &&<button className=\"delete\" onClick={() => removeQuestion(index)}>X</button>}\n                           </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                       <input  type=\"text\" id=\"question\" defaultValue={que.questionTitle} className=\"que-text\"\n                                    name=\"question\"\n                                    placeholder=\"Enter Question\"\n                                    onChange={event => handleQuestion(index, event)}\n                                    />\n                                       </Grid>\n                                       {que.optionsArray.map((option, optIndex) => (\n                                       <>\n                                      <div className=\"answerContainer\">\n                                       <input type=\"radio\"  name={`option_${index}`} defaultChecked={que.answer} onClick={event => radioclick(index, optIndex, event)} />\n                                       {option.optionImg?.length ?\n                      <Grid\n                      container\n                      className=\"viewOption\"\n                      key={optIndex}\n                      id=\"cardbox\">\n                      <Grid item xs={4} sm={4} md={4} lg={4} className=\"div-image\" >\n                       <img className=\"view-img\"  src={`${list.image_base_path}/${option.optionImg}`} /> \n                     </Grid>\n                     <Grid item xs={8} sm={8} md={8} lg={8} className=\"viewbg\" >\n                     <CardContent className=\"view-card\">\n                     <textarea className=\"create-option\" placeholder=\"Answer\" defaultValue={option.optionLabel} onChange={event => handleOption(index, optIndex, event)}/>\n                     </CardContent>\n                   </Grid>\n                   </Grid>\n                   : \n                 \n                   <Grid\n                   container\n                   className=\"viewOption\"\n                   key={index}\n                   id=\"cardbox\">\n                  <Grid item xs={12} sm={12} md={12} lg={12} className=\"viewbg\" >\n                     <CardContent className=\"view-card\">\n                     <textarea className=\"create-option\" placeholder=\"Answer\" defaultValue={option.optionLabel} onChange={event => handleOption(index, optIndex, event)}/>\n                     </CardContent>\n                   </Grid>\n                </Grid>\n                   }\n                   <div className=\"quizwrapper\">\n                                <div className=\"quizfile-upload2\">\n                                  <input type=\"file\" className=\"quizoption2\"\n                                    onChange={event => optionImage(index, optIndex, event)}\n                                  />\n                                  <img src=\"/assets/image/option.png\" height=\"40px\" />\n                                </div>\n                                </div>\n                                       {optIndex > 1 &&<button className=\"delete\"  onClick={() => removeOption(index, optIndex)}>X</button>}\n                                      </div>\n                                      </>\n                                       ))}\n                                      <div className=\"create-label\">\n                                      {\n                                      <button className=\"addoption\"   onClick={() => addOption(index)}>Add Option</button>}\n                                      </div>\n                              </Card>\n                              <div className=\"create-label\">\n                              {index === question.length - 1 &&  <button className=\"addoption\"   onClick={() => addQuestion()}>Add Question</button>}\n                             </div>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                          \n                        ))}\n                                                {\n                        resultdata?.map((res,resindex)=>{\n                          return(\n                            <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                            <div>\n                            <div className=\"createnumber\">\n                                <h3>Result</h3>\n                            </div>\n                           <div className=\"createnumber1\">\n                           {resultdata.length > 1 &&<button className=\"delete\" onClick={() => removeresult(resindex)}>X</button>}\n                           </div>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                       <input  type=\"text\" id=\"max\" className=\"result-text\"\n                                    name=\"max\"\n                                    defaultValue={res.maxScore}\n                                    onBlur={event => handleMax(resindex, event)}\n                                    />\n                                    <input  type=\"text\" id=\"min\" className=\"result-text\"\n                                    name=\"min\"\n                                    defaultValue={res.minScore}\n                                    onBlur={event => handleMin(resindex, event)}\n                                    />\n                                    <input  type=\"text\" id=\"resultTitle\" className=\"result-text\"\n                                    name=\"resultTitle\"\n                                    defaultValue={res.title}\n                                    onBlur={event => handleTitle(resindex, event)}\n                                    />\n                                    <input  type=\"text\" id=\"phrase\" className=\"result-text\"\n                                    name=\"phrase\"\n                                    defaultValue={res.phrase}\n                                    onBlur={event => handlephrases(resindex, event)}\n                                    />\n                                    \n                                    <input type=\"file\" accept=\"image/*\" id={`resultImage${resindex}`}  className=\"img-input\" name={`resultImage${resindex}`} onChange={event => handleResultImage(event,resindex)} />\n                                    <FormControl className={classes.formControl} fullWidth>\n                                        <Select  id=\"needle\" className=\"result-text\"\n                                             inputProps={{ 'aria-label': 'Without label' }} onChange={event => handleneedle(resindex, event)} > \n                                        <MenuItem value=\"\" >Select Needle Position </MenuItem>\n                                          <MenuItem value=\"2\">2</MenuItem>     \n                                          <MenuItem value=\"8\">8</MenuItem>\n                                          <MenuItem value=\"12\">12</MenuItem> \n                                          <MenuItem value=\"18\">18</MenuItem> \n                                        </Select>\n                                   </FormControl>\n                                        <div className=\"create-label\">\n                                        <label className=\"create-img\" htmlFor={`resultImage${resindex}`}>\n                                            <span>  Choose your Photo</span>\n                                        </label>\n                                        </div>\n                                        \n                                       </Grid>\n                              </Card>\n                             \n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                       )\n                      })\n                    }\n                            <div className=\"create-label\">\n                                <button className=\"addoption\" onClick={updateList}>Update</button>\n                             </div>\n                </Grid>\n               )\n             })\n           }\n        </div>\n    )\n}\n\nexport default EditQuiz\n"]},"metadata":{},"sourceType":"module"}