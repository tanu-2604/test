{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/EditQuiz.js\";\nimport { Card, CardContent, FormControl, Grid, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport \"./createQuiz.css\";\nimport AdminLink from '../management/AdminLinks';\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nfunction EditQuiz() {\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState([{\n    questionTitle: '',\n    optionsArray: [{\n      optionLabel: \"\"\n    }, {\n      optionLabel: \"\"\n    }]\n  }]);\n  const [category, setCategory] = useState([]);\n  const [categoryOption, setCategoryOption] = useState([]);\n  const [quiz, setQuiz] = useState([]);\n  const [image, setImage] = useState('');\n  const [que, setQue] = useState([]);\n  const [language, setLanguage] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n    getQuizBySlug();\n  }, []);\n\n  const getQuizBySlug = async () => {\n    const data = {\n      quizSlug: id\n    };\n    const options = {\n      method: 'Post',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getQuizBySlug(data, options);\n    console.log(result.data.data);\n    setQuiz(result.data.data);\n    setQuestion(JSON.parse(result.data.data[0].questionData));\n  };\n\n  const addQuestion = () => {\n    setQuestion([...question, {\n      questionTitle: '',\n      optionsArray: [{\n        optionLabel: \"\"\n      }, {\n        optionLabel: \"\"\n      }]\n    }]);\n  };\n\n  const removeQuestion = index => {\n    const list = [...question];\n    list.splice(index, 1);\n    setQuestion(list);\n  };\n\n  const addOption = questionIndex => {\n    const options = question[questionIndex];\n    options.optionsArray.push({\n      optionLabel: \"\",\n      optionImg: \"\"\n    });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const handleChange = event => {\n    setLanguage(event.target.value);\n  };\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options,\n      optionsArray: [...newArray]\n    }];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    const values = [...question];\n    values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n    setQuestion(values);\n  };\n\n  const handleQuestion = (index, event) => {\n    const values = [...question];\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n  };\n\n  const handleImage = async event => {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n\n    output.onload = function () {\n      URL.revokeObjectURL(output.src); // free memory\n    };\n\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    console.log(data);\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    console.log(ext[0], ext[1]);\n    var file_path = ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"bannerImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.bannerImage(img, options);\n    console.log(result.message);\n    setImage(result.data.message);\n  };\n\n  const optionImage = async (questionIndex, index, event) => {\n    const values = [...question];\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AdminLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 9\n    }\n  }), quiz === null || quiz === void 0 ? void 0 : quiz.map((list, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: \"detailView\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 33\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      className: \"title-text\",\n      name: \"title\",\n      defaultValue: list.title,\n      placeholder: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 40\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 33\n      }\n    }, \"Slug\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"slug\",\n      className: \"title-text\",\n      name: \"slug\",\n      defaultValue: list.slug,\n      placeholder: \"Slug\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 40\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 33\n      }\n    }, \"language\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Select, {\n      label: \"Category\",\n      id: \"category\",\n      className: \"title-text\",\n      defaultValue: list.language,\n      onChange: handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 45\n      }\n    }, \"Select Language\"), /*#__PURE__*/React.createElement(MenuItem, {\n      value: \"en\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 45\n      }\n    }, \"en\")))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 33\n      }\n    }, \"upload\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"output\",\n      className: \"img\",\n      src: `${list.image_base_path}/${list.bannerImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 42\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      id: \"input\",\n      name: \"input\",\n      onChange: event => handleImage(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 42\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"create-img\",\n      htmlFor: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 45\n      }\n    }, \"  Choose your Photo\")))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 29\n      }\n    })), question.map((que, index) => /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 33\n      }\n    }, \"Question\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 29\n      }\n    }, question.length > 1 && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => removeQuestion(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 52\n      }\n    }, \"X\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"question\",\n      defaultValue: que.questionTitle,\n      className: \"que-text\",\n      name: \"question\",\n      placeholder: \"Enter Question\",\n      onChange: event => handleQuestion(index, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 40\n      }\n    })), que.optionsArray.map((option, optIndex) => {\n      var _option$optionImg;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"answerContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 39\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 40\n        }\n      }), ((_option$optionImg = option.optionImg) === null || _option$optionImg === void 0 ? void 0 : _option$optionImg.length) ? /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"viewOption\",\n        key: index,\n        id: \"cardbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 2,\n        sm: 2,\n        md: 2,\n        lg: 2,\n        className: \"div-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"view-img\",\n        src: `${list.image_base_path}/${option.optionImg}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 24\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 6,\n        sm: 6,\n        md: 6,\n        lg: 6,\n        className: \"viewbg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: \"view-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"create-answer\",\n        placeholder: \"Answer\",\n        defaultValue: option.optionLabel,\n        onChange: event => handleOption(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 22\n        }\n      })))) : /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"viewOption\",\n        key: index,\n        id: \"cardbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        sm: 8,\n        md: 8,\n        lg: 8,\n        className: \"viewbg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: \"view-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 22\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"create-answer\",\n        placeholder: \"Answer\",\n        defaultValue: option.optionLabel,\n        onChange: event => handleOption(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 22\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quizwrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 20\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quizfile-upload2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        className: \"quizoption2\",\n        defaultValue: option.optionImg,\n        onChange: event => optionImage(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/image/option.png\",\n        height: \"40px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 35\n        }\n      }))), optIndex > 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: () => removeOption(index, optIndex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 56\n        }\n      }, \"X\")));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      onClick: () => addOption(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 39\n      }\n    }, \"Add Option\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 31\n      }\n    }, index === question.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      onClick: () => addQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 66\n      }\n    }, \"Add Question\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 29\n      }\n    }))), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 33\n      }\n    }, \"Result\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 28\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 28\n      }\n    }, \"X\"))), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 43\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"max\",\n      className: \"result-text\",\n      name: \"max\",\n      placeholder: \"Max Score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 40\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"min\",\n      className: \"result-text\",\n      name: \"min\",\n      placeholder: \"Min Score\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"resultTitle\",\n      className: \"result-text\",\n      name: \"resultTitle\",\n      placeholder: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"phrase\",\n      className: \"result-text\",\n      name: \"phrase\",\n      placeholder: \"Phrase\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"span\", {\n      id: \"upload\",\n      className: \"result-text\",\n      name: \"upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 38\n      }\n    }, \"Please Upload File\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      id: \"input\",\n      name: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 37\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"create-img\",\n      htmlFor: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 45\n      }\n    }, \"  Choose your Photo\"))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 33\n      }\n    }, \"Add Result\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 33\n      }\n    }, \"Save\")));\n  }));\n}\n\nexport default EditQuiz;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/EditQuiz.js"],"names":["Card","CardContent","FormControl","Grid","makeStyles","MenuItem","Select","React","useEffect","useState","AdminLink","useParams","services","useStyles","theme","root","width","gridContainer","paddingTop","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","headPart","backgroundColor","icon","categorytitle","fontSize","fontWeight","heading","typography","pxToRem","fontWeightRegular","EditQuiz","classes","id","question","setQuestion","questionTitle","optionsArray","optionLabel","category","setCategory","categoryOption","setCategoryOption","quiz","setQuiz","image","setImage","que","setQue","language","setLanguage","data","JSON","parse","localStorage","getItem","jwt","getQuizBySlug","quizSlug","options","method","headers","result","console","log","questionData","addQuestion","removeQuestion","index","list","splice","addOption","questionIndex","push","optionImg","previous","slice","current","next","length","handleChange","event","target","value","removeOption","answerIndex","newArray","filter","handleOption","values","handleQuestion","handleImage","output","document","getElementById","src","URL","createObjectURL","files","onload","revokeObjectURL","imgpath","name","currentTime","Date","time","getTime","ext","split","file_path","myimg","replace","img","FormData","append","bannerImage","message","optionImage","getImage","map","title","slug","formControl","image_base_path","option","optIndex"],"mappings":"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","sourcesContent":["import { Card, CardContent, FormControl, Grid, makeStyles, MenuItem, Select} from '@material-ui/core';\nimport React,{useEffect, useState} from 'react';\nimport \"./createQuiz.css\"\nimport AdminLink from '../management/AdminLinks';\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    gridContainer: {\n      paddingTop:\"20px\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    headPart:{\n        backgroundColor:\"#133b5c\",\n      color:\"#ffff\"\n    },\n    icon:{\n        color:\"#fff\"\n    },\n    categorytitle:{\n        color:\"#133b5c\",\n        fontSize:\"35px\",\n        fontWeight:\"600\",\n        textAlign:\"center\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(20),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n\nfunction EditQuiz() {\n    const classes = useStyles();\n    const {id}=useParams();\n    const [question, setQuestion] = useState(\n        [\n          {\n            questionTitle: '',\n            optionsArray: [\n              { optionLabel: \"\" },\n              { optionLabel: \"\" }\n            ]\n          },\n        ]\n      )\n    \n  const [category, setCategory] = useState([])\n  const [categoryOption, setCategoryOption] = useState([])\n  const [quiz,setQuiz]=useState([])\n  const[image,setImage]=useState('')\n  const [que,setQue]=useState([])\n  const [language, setLanguage] = useState([])\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n      getQuizBySlug();\n  }, [])\n\n  const getQuizBySlug = async () => {\n       const data={\n         quizSlug:id\n       }\n      const options = {\n          method: 'Post',\n          headers: {\n              \"Apiuserid\": \"49507884\",\n              \"Scope\": \"In.QuizApp.READ\",\n              \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n      }\n      const result = await services.getQuizBySlug(data,options)\n      console.log(result.data.data)\n      setQuiz(result.data.data)\n      setQuestion(JSON.parse(result.data.data[0].questionData))\n  };\n      const addQuestion = () => {\n        setQuestion([\n          ...question,\n          {\n            questionTitle: '',\n            optionsArray: [\n              { optionLabel: \"\"},\n              { optionLabel: \"\"}\n            ]\n          }\n        ])\n      }\n    \n      const removeQuestion = (index) => {\n        const list = [...question]\n        list.splice(index, 1);\n        setQuestion(list);\n      }\n      const addOption = (questionIndex) => {\n        const options = question[questionIndex];\n        options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n        const previous = question.slice(0, questionIndex);\n        const current = [options];\n        const next = question.slice(questionIndex + 1, question?.length);\n        setQuestion([\n          ...previous,\n          ...current,\n          ...next\n        ]);\n      }\n      const handleChange = (event) => {\n        setLanguage(event.target.value);\n      };\n      const removeOption = (questionIndex, answerIndex) => {\n        const options = question[questionIndex];\n        const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n        const previous = question.slice(0, questionIndex);\n        const current = [{ ...options, optionsArray: [...newArray] }];\n        const next = question.slice(questionIndex + 1, question?.length);\n        setQuestion([\n          ...previous,\n          ...current,\n          ...next\n        ]);\n      }\n      const handleOption = (questionIndex, index, event) => {\n        const values = [...question];\n    \n        values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n        setQuestion(values);\n      }\n      const handleQuestion = (index, event) => {\n\n        const values = [...question];\n    \n        values[index].questionTitle = event.target.value;\n        setQuestion(values);\n    \n      }\n      const handleImage = async(event) => {\n        var output = document.getElementById('output');\n        output.src = URL.createObjectURL(event.target.files[0]);\n        output.onload = function () {\n        URL.revokeObjectURL(output.src) // free memory\n         }\n         var imgpath=event.target.files[0]\n        const data = imgpath.name;\n        console.log(data)\n        const currentTime = new Date();\n        const time = currentTime.getTime();\n        const ext= data.split('.')\n        console.log(ext[0],ext[1])\n        var file_path=ext[0]+time+'.'+ext[1];\n        var myimg=data.replace(data,file_path)\n        var img=new FormData()\n        img.append(\"bannerImg\",imgpath)\n        img.append(\"newName\",myimg)\n        const options = {\n          method: 'POST',\n          headers: {\n            \"Apiuserid\": \"49507884\",\n            \"Scope\": \"In.QuizApp.INSERT\",\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n        }\n        const result = await services.bannerImage(img, options);\n        console.log(result.message)\n       setImage(result.data.message)\n      }\n      const optionImage = async(questionIndex, index, event) => {\n        const values = [...question];\n         var imgpath=event.target.files[0]\n        const data = imgpath.name;\n        const currentTime = new Date();\n        const time = currentTime.getTime();\n        const ext= data.split('.')\n        var file_path= questionIndex+'_' + index+'_' +ext[0]+time+'.'+ext[1];\n        var myimg=data.replace(data,file_path)\n        var img=new FormData()\n        img.append(\"optionImg\",imgpath);\n        img.append(\"newName\",myimg)\n        const options = {\n          method: 'POST',\n          headers: {\n            \"Apiuserid\": \"49507884\",\n            \"Scope\": \"In.QuizApp.INSERT\",\n            'Content-Type': 'multipart/form-data',\n            \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n        }\n        const result = await services.getImage(img, options);\n        values[questionIndex].optionsArray[index].optionImg=file_path;\n        setQuestion(values);\n      }\n    \n    return (\n        <div className={classes.root}>\n        <AdminLink/>\n           {\n             quiz?.map((list,index)=>{\n               return(\n                <Grid container className=\"detailView\">\n                <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} >\n                            <div className=\"createnumber\">\n                                <h3>Title</h3>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                       <input  type=\"text\" id=\"title\" className=\"title-text\"\n                                    name=\"title\"\n                                    defaultValue={list.title}\n                                    placeholder=\"Title\"\n                                    />\n                                       </Grid>\n                              </Card>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                          <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} >\n                            <div className=\"createnumber\">\n                                <h3>Slug</h3>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                       <input  type=\"text\" id=\"slug\" className=\"title-text\"\n                                    name=\"slug\"\n                                    defaultValue={list.slug}\n                                    placeholder=\"Slug\"\n                                    />\n                                       </Grid>\n                              </Card>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                           <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} >\n                            <div className=\"createnumber\">\n                                <h3>language</h3>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                        <FormControl className={classes.formControl} fullWidth>\n                                          <Select label=\"Category\" id=\"category\" className=\"title-text\" defaultValue={list.language} onChange={handleChange} > \n                                            <MenuItem value=\"en\">Select Language</MenuItem>     \n                                            <MenuItem value=\"en\">en</MenuItem>\n                                          </Select>\n                                       </FormControl>\n                                       </Grid>\n                              </Card>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                          <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} >\n                            <div className=\"createnumber\">\n                                <h3>upload</h3>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                        <div className=\"img-holder\">\n                                         <img id=\"output\" className=\"img\" src={`${list.image_base_path}/${list.bannerImage}`}/>\n                                        </div>\n                                         <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\"  onChange={event => handleImage(event)} />\n                                        <div className=\"create-label\">\n                                        <label className=\"create-img\" htmlFor=\"input\">\n                                            <span>  Choose your Photo</span>\n                                        </label>\n                                        </div>\n                                       </Grid>\n                              </Card>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                          {\n                        question.map((que, index) => (\n                          <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                            <div className=\"createnumber\">\n                                <h3>Question</h3>\n                            </div>\n                            <div className=\"createnumber1\">\n                            {question.length > 1 &&<button className=\"delete\" onClick={() => removeQuestion(index)}>X</button>}\n                           </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                       <input  type=\"text\" id=\"question\" defaultValue={que.questionTitle} className=\"que-text\"\n                                    name=\"question\"\n                                    placeholder=\"Enter Question\"\n                                    onChange={event => handleQuestion(index, event)}\n                                    />\n                                       </Grid>\n                                       {que.optionsArray.map((option, optIndex) => (\n                                       <>\n                                      <div className=\"answerContainer\">\n                                       <input type=\"radio\"/>\n                                       {option.optionImg?.length ?\n                      <Grid\n                      container\n                      className=\"viewOption\"\n                      key={index}\n                      id=\"cardbox\">\n                      <Grid item xs={2} sm={2} md={2} lg={2} className=\"div-image\" >\n                       <img className=\"view-img\" src={`${list.image_base_path}/${option.optionImg}`} /> \n                     </Grid>\n                     <Grid item xs={6} sm={6} md={6} lg={6} className=\"viewbg\" >\n                     <CardContent className=\"view-card\">\n                     <textarea className=\"create-answer\" placeholder=\"Answer\" defaultValue={option.optionLabel} onChange={event => handleOption(index, optIndex, event)}/>\n                     </CardContent>\n                   </Grid>\n                   </Grid>\n                   : \n                 \n                   <Grid\n                   container\n                   className=\"viewOption\"\n                   key={index}\n                   id=\"cardbox\">\n                  <Grid item xs={8} sm={8} md={8} lg={8} className=\"viewbg\" >\n                     <CardContent className=\"view-card\">\n                     <textarea className=\"create-answer\" placeholder=\"Answer\" defaultValue={option.optionLabel} onChange={event => handleOption(index, optIndex, event)}/>\n                     </CardContent>\n                   </Grid>\n                </Grid>\n                   }\n                   <div className=\"quizwrapper\">\n                                <div className=\"quizfile-upload2\">\n                                  <input type=\"file\" className=\"quizoption2\"\n                                    defaultValue={option.optionImg}\n                                    onChange={event => optionImage(index, optIndex, event)}\n                                  />\n                                  <img src=\"/assets/image/option.png\" height=\"40px\" />\n                                </div>\n                                </div>\n                                       {optIndex > 1 &&<button className=\"delete\"  onClick={() => removeOption(index, optIndex)}>X</button>}\n                                      </div>\n                                      </>\n                                       ))}\n                                      <div className=\"create-label\">\n                                      {\n                                      <button className=\"addoption\"   onClick={() => addOption(index)}>Add Option</button>}\n                                      </div>\n                              </Card>\n                              <div className=\"create-label\">\n                              {index === question.length - 1 &&  <button className=\"addoption\"   onClick={() => addQuestion()}>Add Question</button>}\n                             </div>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                          \n                        ))}\n                          <Grid container>\n                            <Grid item xs></Grid>\n                            <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                            <div>\n                            <div className=\"createnumber\">\n                                <h3>Result</h3>\n                            </div>\n                           <div className=\"createnumber1\">\n                           <button className=\"delete\">X</button>\n                           </div>\n                            </div>\n                              <Card className=\"create-list\">\n                                          <Grid\n                                          container\n                                          justify=\"center\"\n                                         >\n                                       <input  type=\"text\" id=\"max\" className=\"result-text\"\n                                    name=\"max\"\n                                    placeholder=\"Max Score\"\n                                    />\n                                    <input  type=\"text\" id=\"min\" className=\"result-text\"\n                                    name=\"min\"\n                                    placeholder=\"Min Score\"\n                                    />\n                                    <input  type=\"text\" id=\"resultTitle\" className=\"result-text\"\n                                    name=\"resultTitle\"\n                                    placeholder=\"Title\"\n                                    />\n                                    <input  type=\"text\" id=\"phrase\" className=\"result-text\"\n                                    name=\"phrase\"\n                                    placeholder=\"Phrase\"\n                                    />\n                                     <span  id=\"upload\" className=\"result-text\"\n                                    name=\"upload\"\n                                    >Please Upload File</span>\n                                    <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\" />\n                                        <div className=\"create-label\">\n                                        <label className=\"create-img\" htmlFor=\"input\">\n                                            <span>  Choose your Photo</span>\n                                        </label>\n                                        </div>\n                                       </Grid>\n                              </Card>\n                              <div className=\"create-label\">\n                                <button className=\"addoption\">Add Result</button>\n                             </div>\n                            </Grid>\n                            <Grid item xs></Grid>\n                          </Grid>\n                            <div className=\"create-label\">\n                                <button className=\"addoption\">Save</button>\n                             </div>\n                </Grid>\n               )\n             })\n           }\n        </div>\n    )\n}\n\nexport default EditQuiz\n"]},"metadata":{},"sourceType":"module"}