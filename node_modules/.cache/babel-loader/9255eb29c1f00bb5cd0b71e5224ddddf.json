{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/ViewAns.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Card, CardContent, Grid, makeStyles, TextField } from '@material-ui/core';\nimport \"./createQuiz.css\";\nimport AdminLink from '../management/AdminLinks';\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\n\nfunction ViewAns() {\n  const {\n    id\n  } = useParams();\n  const [playerResult, setPlayerResult] = useState([]);\n  const [resultAns, setResultAns] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n    getPlayerResult();\n  }, []);\n\n  const getPlayerResult = async () => {\n    const data = {\n      resultId: id\n    };\n    const options = {\n      method: 'Post',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getPlayerResult(data, options);\n    setPlayerResult(result.data.data);\n    setResultAns(JSON.parse(result.data.data[0].answers));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AdminLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 14\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }), playerResult.map((player, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 5\n      }\n    }, player.playerName)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 6\n      }\n    })), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"all-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 15\n      }\n    }, \"Score: \", player.score), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"all-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }, \"Played At: \", player.createDate), resultAns.map((answerd, index) => {\n      return /*#__PURE__*/React.createElement(React.Fragment, null, answerd.correct === \"yes\" ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"right-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 20\n        }\n      }, answerd.answer) : /*#__PURE__*/React.createElement(\"span\", {\n        className: \"wrong-text\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 20\n        }\n      }, answerd.answer));\n    }))));\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default ViewAns;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/ViewAns.js"],"names":["React","useEffect","useState","Card","CardContent","Grid","makeStyles","TextField","AdminLink","useParams","services","ViewAns","id","playerResult","setPlayerResult","resultAns","setResultAns","data","JSON","parse","localStorage","getItem","jwt","getPlayerResult","resultId","options","method","headers","result","answers","map","player","index","playerName","score","createDate","answerd","correct","answer"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { Card, CardContent, Grid, makeStyles, TextField } from '@material-ui/core';\nimport \"./createQuiz.css\"\nimport AdminLink from '../management/AdminLinks'\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\n\nfunction ViewAns() {\n  const {id}=useParams();\n    const[playerResult,setPlayerResult]=useState([])\n    const[resultAns,setResultAns]=useState([])\n    const data = JSON.parse(localStorage.getItem('friend'));\n    const jwt = data['jwt'];\n    useEffect(() => {\n        getPlayerResult();\n    }, [])\n  \n    const getPlayerResult = async () => {\n         const data={\n           resultId:id\n         }\n        const options = {\n            method: 'Post',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",\n                \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n            }\n        }\n        const result = await services.getPlayerResult(data,options)\n        setPlayerResult(result.data.data)\n        setResultAns(JSON.parse(result.data.data[0].answers))\n\n    };\n    return (\n        <>\n             <AdminLink/>\n             <Grid container>\n                    <Grid item xs></Grid>\n{\n  playerResult.map((player,index)=>{\n    return(\n      <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n      <div>\n      <div className=\"createnumber\">\n    <h3>{player.playerName}</h3>\n      </div>\n     <div className=\"createnumber1\">\n     </div>\n      </div>\n        <Card className=\"create-list\">\n          <Grid container justify=\"center\">\n              <span className=\"all-text\">Score: {player.score}</span>\n              <span className=\"all-text\">Played At: {player.createDate}</span>\n              {\n                resultAns.map((answerd,index)=>{\n               return(\n                 <>\n                   {\n                   answerd.correct===\"yes\"?\n                   <span className=\"right-text\">{answerd.answer}</span>\n                   :\n                   <span className=\"wrong-text\">{answerd.answer}</span>\n                 }\n                 </>\n                 \n               )\n                })\n              }\n        </Grid>\n        </Card>\n      </Grid>\n    )\n  })\n}\n                    <Grid item xs></Grid>\n                  </Grid>\n        </>\n    ) \n}\n\nexport default ViewAns\n"]},"metadata":{},"sourceType":"module"}