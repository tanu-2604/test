{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/form/FriendLink.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../style/friendlink.css';\nimport { Grid, Card } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\nimport services from '../../services/services';\nimport Footer from '../footer/Footer';\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  head: {\n    textAlign: \"center\"\n  },\n  list: {\n    margin: \"25px auto\",\n    textAlign: \"center\"\n  },\n  add: {\n    width: \"100%\"\n  }\n}));\n\nfunction FriendLink() {\n  const classes = useStyles();\n  const history = useHistory();\n  const [quiz, setQuiz] = useState([]);\n  const [list, setList] = useState([]);\n  const [right, setRight] = useState(false);\n  const [loader, setLoader] = useState(false);\n  var {\n    id\n  } = useParams();\n  console.log(id, typeof id);\n  useEffect(() => {\n    if (localStorage.getItem('createId') != null) {\n      JSON.parse(localStorage.getItem('createId')).map(item => {\n        console.log(item, typeof item);\n\n        if (item === id) {\n          history.push(`/sharelink/`);\n        } else {\n          setLoader(true);\n        }\n      });\n    }\n\n    getQuiz();\n  }, []);\n\n  const getQuiz = async () => {\n    const data = {\n      quizId: id\n    };\n    const options = {\n      method: 'GET',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getQuiz(data, options);\n    setQuiz(result.data.data);\n    setList(result.data.data.quizQuestion);\n  }; //         if(localStorage.getItem('createId') != null)\n  // {\n  //         var alldata=JSON.parse(localStorage.getItem('alldata'))\n  //          var feedbackId=alldata['quizId']\n  //     if(feedbackId===id)\n  //     {\n  //         return<Redirect to=\"/score\"/>\n  //     }\n  // }\n\n\n  const playby = () => {\n    var name = document.getElementById(\"feedbackBy\").value;\n\n    if (name == \"\" || name == null || name.length <= 2) {\n      alert(\"please enter required name\");\n    } else {\n      localStorage.setItem(\"feedbackby\", name);\n      setRight(true);\n    }\n  };\n\n  if (right) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/quizlink',\n        state: {\n          quizQuestions: quiz\n        }\n      },\n      push: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, loader ? /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    className: classes.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"friendship\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"2021 Friendship\"), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"dare\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 25\n    }\n  }, \"Dare\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"form-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"how\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 24\n    }\n  }, \"How well do you know \", quiz.createdBy, \"?\"), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"First\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 24\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"feedbackBy\",\n    className: \"name\",\n    placeholder: \"Enter Your Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 24\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"friendStart\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"started\",\n    onClick: playby,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 28\n    }\n  }, \" Start\")), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"how\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 29\n    }\n  }, \"Who Knows \", quiz.createdBy, \" Best ?\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    className: classes.list,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"#\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/Image5.png\",\n    className: classes.add,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 24\n    }\n  }))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 10\n    }\n  })) : null);\n}\n\nexport default FriendLink;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/form/FriendLink.js"],"names":["React","useState","useEffect","Grid","Card","makeStyles","useParams","Redirect","useHistory","services","Footer","useStyles","theme","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","head","list","margin","add","width","FriendLink","classes","history","quiz","setQuiz","setList","right","setRight","loader","setLoader","id","console","log","localStorage","getItem","JSON","parse","map","item","push","getQuiz","data","quizId","options","method","headers","result","quizQuestion","playby","name","document","getElementById","value","length","alert","setItem","pathname","state","quizQuestions","createdBy"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport '../style/friendlink.css'\nimport {  Grid,Card} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams,Redirect, useHistory } from 'react-router-dom';\nimport services from '../../services/services';\nimport Footer from '../footer/Footer';\n\n\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      head:{\n          textAlign:\"center\"\n      },\n      list:{\n        margin:\"25px auto\",\n        textAlign:\"center\"\n      },\n      add:{\n          width:\"100%\"\n      }\n      \n    \n  }));\n  \nfunction FriendLink() {\nconst classes = useStyles();\nconst history = useHistory()\nconst [quiz,setQuiz]=useState([])\nconst [list,setList]=useState([]) \nconst [right,setRight]=useState(false) \nconst[loader,setLoader]=useState(false)\nvar {id} = useParams();\nconsole.log(id,typeof id)\n    useEffect(() => {\n        if (localStorage.getItem('createId') != null) {\n            JSON.parse(localStorage.getItem('createId')).map(item => {\n\n                console.log(item,typeof item)\n                if (item === id) {\n                    history.push(`/sharelink/`);\n                }\n                else{\n                    setLoader(true)\n                }\n            });\n        }\n        getQuiz();\n    }, [])\n\n   const getQuiz = async () => {\n       const data={\n            quizId:id\n       }\n       const options = {\n           method: 'GET',\n           headers: {\n               \"Apiuserid\": \"49507884\",\n               \"Scope\": \"In.QuizApp.READ\",\n               \n           }\n       }\n       const result = await services.getQuiz(data,options)\n       setQuiz(result.data.data)\n       setList(result.data.data.quizQuestion)\n       \n    };\n\n    \n        \n    //         if(localStorage.getItem('createId') != null)\n    // {\n    //         var alldata=JSON.parse(localStorage.getItem('alldata'))\n    //          var feedbackId=alldata['quizId']\n    //     if(feedbackId===id)\n    //     {\n    //         return<Redirect to=\"/score\"/>\n    //     }\n    // }\n       \n        \n   \n const playby=()=>{\n     var name=document.getElementById(\"feedbackBy\").value;\n     \n     if((name == \"\") || (name==null) || (name.length<=2))\n      {\n         alert(\"please enter required name\");\n       \n      }\n      else{\n        localStorage.setItem(\"feedbackby\",name);\n        setRight(true)\n      }\n     \n }\n if(right)\n {\n     return(<Redirect to={{\n        pathname: '/quizlink',\n        state:{quizQuestions:quiz}}}push={true}/>)\n }\n    return (\n        <>{\n            loader?\n            <div className={classes.gridContainer}>\n            <Grid container>\n                <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4}>                    \n                    <div justify=\"center\" className={classes.head}>\n                        <h3 className=\"friendship\">2021 Friendship</h3>\n                        <h3 className=\"dare\">Dare</h3>\n                    </div>\n                    <Card className=\"form-card\">\n                       <h3 className=\"how\">How well do you know {quiz.createdBy}?</h3>\n                       <h4 className=\"First\">Name</h4>\n                           <input type=\"text\" id=\"feedbackBy\" className=\"name\" placeholder=\"Enter Your Name\"/>\n                       <br />\n                       <div className=\"friendStart\">\n                           <button className=\"started\" onClick={playby}> Start</button>\n                        </div>\n                            <h3 className=\"how\">Who Knows {quiz.createdBy} Best ?</h3>\n                    </Card>\n                </Grid>\n              <Grid item xs></Grid>\n\n            </Grid>\n            <br/>\n            <Grid container>\n                <Grid item xs></Grid>\n                <Grid item className={classes.list} xs={11} sm={6} md={6} lg={4}>\n                    <a href=\"#\">\n                       <img src=\"/assets/image/Image5.png\" className={classes.add}/>\n                    </a>\n                </Grid>\n                <Grid item xs></Grid>\n            </Grid>\n  {/* {\n       list?.map((question,index)=>{\n          return( <Grid container justify=\"center\" key={index}>\n                   \n                     <Grid className=\"paragrid\"item xs={11} sm={6} md={6} lg={4}>\n                      <p className=\"list-para\">{question.title}</p> </Grid>\n                   \n  </Grid>\n   )\n   })\n  } */}\n         <Footer/>\n        </div>\n       :null\n        }\n            \n        </>\n    );\n    }\n\nexport default FriendLink\n"]},"metadata":{},"sourceType":"module"}