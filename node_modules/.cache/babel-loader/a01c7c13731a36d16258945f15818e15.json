{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/form/PlayQuiz.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/playquiz.css';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nconst BorderLinearProgress = withStyles(theme => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\"\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700]\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52'\n  }\n}))(LinearProgress);\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n}));\n\nfunction PlayQuiz({\n  quizlist,\n  quizId,\n  createdBy,\n  category\n}) {\n  var _quiz$activeStep, _quiz$activeStep$opti;\n\n  const [score, setScore] = useState(0);\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [meter, setMeter] = useState(false);\n  const [correctAns, setCorrectAns] = useState(0);\n  const [clickedAns, setClickedAns] = useState(0);\n  const [progress, setProgress] = useState(false);\n  const [count, setCount] = useState(1);\n  const json = localStorage.getItem(\"feedbackby\");\n  const [title, setTitle] = useState({});\n  useEffect(() => {\n    getCategory();\n  }, []);\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: category\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getCategory(categoryData, options);\n    setTitle(result.data.data);\n  };\n\n  let quiz = [{\n    label: quizlist === null || quizlist === void 0 ? void 0 : quizlist.question,\n    options: quizlist === null || quizlist === void 0 ? void 0 : quizlist.options\n  }];\n  const classes = useStyles();\n\n  if (quizlist === null || quizlist === void 0 ? void 0 : quizlist.length) {\n    quiz = quizlist;\n  }\n\n  function showProgress(index) {\n    var increment = Math.ceil(count / maxSteps * 100);\n    setProgress(increment);\n  }\n\n  const maxSteps = quiz.length;\n\n  const handleSelect = (optId, label) => {\n    setClickedAns(optId);\n\n    if (optId === quiz[activeStep].answerId) {\n      increaseScore();\n      setCorrectAns(quiz[activeStep].answerId);\n    } else {\n      setCorrectAns(quiz[activeStep].answerId);\n    }\n  };\n\n  const handleNext = (optId, label) => {\n    if (maxSteps - 1 !== activeStep) {\n      setTimeout(() => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1);\n        setCount(count + 1);\n      }, 500);\n    } else {\n      handleSubmit();\n    }\n\n    handleSelect(optId, label);\n    showProgress(quiz[activeStep].qusId);\n  };\n\n  const increaseScore = () => {\n    setScore(score + 1);\n  };\n\n  const handleSubmit = async () => {\n    const data = {\n      quizId: quizId,\n      feedbackBy: json,\n      score: score\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\"\n      }\n    };\n    const result = await services.getResult(data, options);\n    setMeter(result.data.data);\n  };\n\n  if (meter === true) {\n    var datalist = {\n      list: quizlist.length,\n      quizId: quizId,\n      createdBy: createdBy,\n      score: {\n        score\n      }\n    };\n    localStorage.setItem('alldata', JSON.stringify(datalist));\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/score',\n        state: {\n          category: {\n            category\n          }\n        }\n      },\n      push: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 10\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 12\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 22\n    }\n  }, title.title)), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 22\n    }\n  }, \"Question \", /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 56\n    }\n  }, count, \"/\", maxSteps))), /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(BorderLinearProgress, {\n    variant: \"determinate\",\n    value: progress,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Card, {\n    className: \"playoptioncard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 18\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"questionname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 17\n    }\n  }, count, \":\", quiz[activeStep].title), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"playcard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 20\n    }\n  }, (_quiz$activeStep = quiz[activeStep]) === null || _quiz$activeStep === void 0 ? void 0 : (_quiz$activeStep$opti = _quiz$activeStep.options) === null || _quiz$activeStep$opti === void 0 ? void 0 : _quiz$activeStep$opti.map((options, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: correctAns === options.optionId ? 'correctplay' : clickedAns === options.optionId ? 'incorrectplay' : 'options',\n      correct: quiz[activeStep].answer,\n      key: index,\n      onClick: () => {\n        handleNext(options.optionId, options.optionLabel);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 23\n      }\n    }, options.optionImg.length ? /*#__PURE__*/React.createElement(\"img\", {\n      className: \"playImg\",\n      src: options.optionImg,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 34\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      className: \"optionbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"playcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"play-head\",\n      id: \"cardText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 27\n      }\n    }, options.optionLabel))));\n  })))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 8\n    }\n  }));\n}\n\nexport default PlayQuiz;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/form/PlayQuiz.js"],"names":["React","useState","useEffect","Grid","Card","CardContent","makeStyles","withStyles","LinearProgress","services","Redirect","Footer","BorderLinearProgress","theme","root","height","borderRadius","width","colorPrimary","backgroundColor","palette","grey","type","bar","useStyles","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","text","secondary","pro","PlayQuiz","quizlist","quizId","createdBy","category","score","setScore","activeStep","setActiveStep","meter","setMeter","correctAns","setCorrectAns","clickedAns","setClickedAns","progress","setProgress","count","setCount","json","localStorage","getItem","title","setTitle","getCategory","categoryData","categoryId","options","method","headers","result","data","quiz","label","question","classes","length","showProgress","index","increment","Math","ceil","maxSteps","handleSelect","optId","answerId","increaseScore","handleNext","setTimeout","prevActiveStep","handleSubmit","qusId","feedbackBy","getResult","datalist","list","setItem","JSON","stringify","pathname","state","map","optionId","answer","optionLabel","optionImg"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\nimport {Grid,Card, CardContent} from '@material-ui/core';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\nimport '../style/playquiz.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n      height: 10,\n      borderRadius: 5,\n      width:\"100%\",\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#FFDD52',\n    },\n  }))(LinearProgress);\n  \nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      pro:{\n          textAlign:\"center\"\n      }\n    \n  }));\nfunction PlayQuiz({quizlist,quizId,createdBy,category}) {\n\n const[score,setScore]=useState(0)\n const [activeStep, setActiveStep] = React.useState(0);\n const [meter,setMeter]=useState(false);\n const [correctAns,setCorrectAns]= useState(0);\n const [clickedAns,setClickedAns]= useState(0);\n const [progress,setProgress]=useState(false);\n const [count,setCount]=useState(1);\n const json =localStorage.getItem(\"feedbackby\")\n const [title,setTitle]=useState({})\n \n\n  useEffect(() => {\n    getCategory();\n}, [])\n\nconst  getCategory = async () => {\n const categoryData={\n     categoryId:category\n }\n\n const options = {\n     method: 'POST',\n     headers: {\n         \"Apiuserid\": \"49507884\",\n         \"Scope\": \"In.QuizApp.READ\",   \n     }\n }\n const result = await services. getCategory(categoryData,options)\n setTitle(result.data.data)\n};\n  let quiz = [\n    {\n        label: quizlist?.question,\n        options: quizlist?.options,\n    },\n];\n\n    const classes = useStyles();\n    if (quizlist?.length) {\n      quiz = quizlist;\n    }\n    \n    function showProgress(index) {\n\n      var increment = Math.ceil((count) / (maxSteps) * 100);\n      setProgress(increment)\n      \n    }\n    const maxSteps = quiz.length;\n    const handleSelect = (optId,label)=>{\n       setClickedAns(optId)\n       if(optId===quiz[activeStep].answerId){\n            increaseScore();\n           setCorrectAns(quiz[activeStep].answerId)\n       }\n       else{\n         setCorrectAns(quiz[activeStep].answerId)\n       }\n     \n    }\n\n\nconst handleNext = (optId,label)=>{\n\n  if(maxSteps-1 !==activeStep){\n    setTimeout(()=>{setActiveStep(prevActiveStep => prevActiveStep + 1)\n      setCount(count+1)},500)\n    \n   \n  }\n  else{\n   \n     handleSubmit()\n  }\n  handleSelect(optId,label);\n\n  showProgress(quiz[activeStep].qusId);\n}\nconst increaseScore = ()=>{\n  setScore(score+1)\n}\nconst handleSubmit = async() =>{\n    const data={\n      quizId:quizId,\n      feedbackBy:json,\n      score:score\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n      }\n    }\n    const result = await services.getResult(data, options)\n     setMeter(result.data.data)\n}\nif(meter===true)\n{\n  var datalist={list:quizlist.length,quizId:quizId,createdBy:createdBy,score:{score}}\n  localStorage.setItem('alldata',JSON.stringify(datalist))\n  return(<Redirect to={{\n    pathname: '/score',\n    state:{category:{category}}}} push={true} />)\n\n}\n    return (\n        <div className={classes.gridContainer}>\n        <Grid container>\n           <Grid item xs></Grid>\n            <Grid item xs={11} sm={6} md={6} lg={4} >\n                 <div justify=\"center\">\n                     <h3 className=\"title\">{title.title}</h3>\n                   \n                 </div>\n                 <div justify=\"center\">     \n                     <h4 className=\"question\">Question <span>{count}/{maxSteps}</span></h4>\n                 </div>\n                 <div justify=\"center\">\n                    <BorderLinearProgress variant=\"determinate\" value={progress} />\n                 </div>\n                 <Card className=\"playoptioncard\">\n                <h3 className=\"questionname\">{count}:{quiz[activeStep].title}</h3>\n                   <div className=\"playcard\">\n                    {\n                    quiz[activeStep]?.options?.map((options,index)=>{\n\n                    return(\n                        <Grid\n                      container\n                      className= {\n                        correctAns === options.optionId ?\n                        'correctplay' : \n                      clickedAns === options.optionId?\n                      'incorrectplay' : 'options'}\n                      correct={quiz[activeStep].answer}\n                      key={index}\n                      onClick={()=>{handleNext(options.optionId,options.optionLabel)}}\n                      >\n                      <Grid item xs={4} sm={4} md={4}lg={4}>\n                      {options.optionImg.length\n                                ?<img className=\"playImg\" \n                                  src={options.optionImg}/>\n                                :<span></span>\n                              }\n                      </Grid>\n                      <Grid item xs={8} sm={8} md={8}lg={8} className=\"optionbg\" >\n                        <CardContent className=\"playcontent\">\n                          <h3 className=\"play-head\"id=\"cardText\">\n                        {options.optionLabel}\n                          </h3>\n                        </CardContent>\n                      </Grid>\n                      </Grid>\n                    )\n\n                    })\n                    } \n                </div>\n         </Card>\n            </Grid>\n            <Grid item xs></Grid>\n       </Grid>\n       <Footer/>\n  </div>\n    )\n}\n\nexport default PlayQuiz\n"]},"metadata":{},"sourceType":"module"}