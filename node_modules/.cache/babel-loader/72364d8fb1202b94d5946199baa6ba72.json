{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/question/AllQuestionList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Divider, Card, CardContent } from '@material-ui/core';\nimport services from '../../../services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\nexport default function AllQuestionList() {\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [questionList, setQuestionList] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n    getQuestions();\n  }, []);\n\n  const getQuestions = async () => {\n    const data = {\n      categoryId: id\n    };\n    const options = {\n      method: 'GET',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getQuestions(data, options);\n    console.log(result);\n    setQuestionList(result.data.data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    className: classes.gridContainer,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, questionList.map((list, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"questioncard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"questionname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 20\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"optioncard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 26\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: \"nonclickoption\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 35\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 4,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"optionImg\",\n      src: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 38\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 8,\n      sm: 8,\n      md: 8,\n      lg: 8,\n      className: \"optionbg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(CardContent, {\n      className: \"cardcontent\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 34\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"optioncontent\",\n      id: \"cardText\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 36\n      }\n    }))))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/question/AllQuestionList.js"],"names":["React","useEffect","useState","makeStyles","Accordion","AccordionSummary","AccordionDetails","Typography","ExpandMoreIcon","useParams","Grid","Divider","Card","CardContent","services","useStyles","theme","root","width","headPart","backgroundColor","color","icon","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","AllQuestionList","classes","id","questionList","setQuestionList","data","JSON","parse","localStorage","getItem","jwt","getQuestions","categoryId","options","method","headers","result","console","log","gridContainer","map","list","index"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Accordion from '@material-ui/core/Accordion';\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Divider, Card, CardContent } from '@material-ui/core';\nimport services from '../../../services';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    headPart:{\n        backgroundColor:\"#133b5c\",\n      color:\"#ffff\"\n    },\n    icon:{\n        color:\"#fff\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(20),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n  \n  export default function AllQuestionList() {\n    const classes = useStyles();\n\n    const {id} = useParams();\n    const [questionList, setQuestionList] = useState([]);\n    const data = JSON.parse(localStorage.getItem('friend'));\n    const jwt = data['jwt'];\n    useEffect(() => {\n        getQuestions();\n    }, [])\n\n    const getQuestions = async () => {\n        const data={\n             categoryId:id\n        }\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",\n                \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n            }\n        }\n        const result = await services.getQuestions(data,options)\n        console.log(result)\n        setQuestionList(result.data.data)\n    };\n  \n    return (\n      <div className={classes.root}>\n\n          <Grid\n                container\n                spacing={4}\n                className={classes.gridContainer}\n                justify=\"center\"\n             >\n               {\n                 questionList.map((list,index)=>{\n                   return(\n                    <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                      <Card className=\"questioncard\">\n                   <h3 className=\"questionname\">{}</h3>\n                         <div className=\"optioncard\">\n                                  <Grid\n                                  container\n                                  className=\"nonclickoption\"\n                                 >\n                                <Grid item xs={4} sm={4} md={4} lg={4} >\n                                     <img className=\"optionImg\" src=\"\" /> \n                                </Grid>\n                                <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                              \n                                 <CardContent className=\"cardcontent\">\n                                   <h3 className=\"optioncontent\" id=\"cardText\">\n                                    \n                                   </h3>\n                                 </CardContent>\n                            \n                               </Grid>\n                               </Grid>\n                               \n                    \n                        </div>\n                        \n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                   )\n                 })\n               }\n                \n         </Grid>\n        </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}