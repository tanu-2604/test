{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/EditQuiz.js\";\nimport { Card, CardContent, FormControl, Grid, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport \"./createQuiz.css\";\nimport AdminLink from '../management/AdminLinks';\nimport { Redirect, useParams } from 'react-router-dom';\nimport services from '../../services/services';\nimport { PhotoSizeSelectLargeOutlined } from '@material-ui/icons';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\n\nfunction EditQuiz() {\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  const [question, setQuestion] = useState([{\n    questionTitle: '',\n    priority: 1,\n    answer: \"\",\n    optionsArray: [{\n      optionLabel: \"\",\n      optionImg: \"\"\n    }, {\n      optionLabel: \"\",\n      optionImg: \"\"\n    }]\n  }]);\n  const [resultdata, setResultData] = useState([{\n    maxScore: '',\n    minScore: \"\",\n    title: \"\",\n    phrase: \"\",\n    needle: \"\",\n    resultImage: \"\"\n  }]);\n  const [quiz, setQuiz] = useState([]);\n  const [load, setLoad] = useState(false);\n  const [image, setImage] = useState('');\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n    getQuizBySlug();\n  }, []);\n\n  const getQuizBySlug = async () => {\n    const data = {\n      quizSlug: id\n    };\n    const options = {\n      method: 'Post',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getQuizBySlug(data, options);\n    console.log(result.data.data);\n    setQuiz(result.data.data);\n    setQuestion(JSON.parse(result.data.data[0].questionData));\n    setResultData(JSON.parse(result.data.data[0].resultData));\n  };\n\n  const addQuestion = () => {\n    setQuestion([...question, {\n      questionTitle: '',\n      priority: 1,\n      answer: \"\",\n      optionsArray: [{\n        optionLabel: \"\",\n        optionImg: \"\"\n      }, {\n        optionLabel: \"\",\n        optionImg: \"\"\n      }]\n    }]);\n  };\n\n  const removeQuestion = index => {\n    const list = [...question];\n    list.splice(index, 1);\n    setQuestion(list);\n  };\n\n  const addresult = () => {\n    setResultData([...resultdata, {\n      maxScore: '',\n      minScore: \"\",\n      title: \"\",\n      phrase: \"\",\n      needle: \"\",\n      resultImage: \"\"\n    }]);\n  };\n\n  const removeresult = index => {\n    const listdata = [...resultdata];\n    listdata.splice(index, 1);\n    setResultData(listdata);\n  };\n\n  const addOption = questionIndex => {\n    const options = question[questionIndex];\n    options.optionsArray.push({\n      optionLabel: \"\",\n      optionImg: \"\"\n    });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options,\n      optionsArray: [...newArray]\n    }];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    const values = [...question];\n    values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n    setQuestion(values);\n  };\n\n  const handleQuestion = (index, event) => {\n    const values = [...question];\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n  };\n\n  const radioclick = (questionIndex, index, event) => {\n    const values = [...question];\n    var clicked = values[questionIndex].optionsArray[index].optionLabel;\n    values[questionIndex].answer = clicked;\n    setQuestion(values);\n  };\n\n  const handleImage = async event => {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n\n    output.onload = function () {\n      URL.revokeObjectURL(output.src); // free memory\n    };\n\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    console.log(data);\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    console.log(ext[0], ext[1]);\n    var file_path = ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"bannerImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.bannerImage(img, options);\n    setImage(result.data.message);\n  };\n\n  const optionImage = async (questionIndex, index, event) => {\n    // var imageOpt = document.getElementById('imageOpt');\n    // imageOpt.src = URL.createObjectURL(event.target.files[0]);\n    // imageOpt.onload = function () {\n    // URL.revokeObjectURL(imageOpt.src) // free memory\n    //  }\n    const values = [...question];\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  };\n\n  const handleMax = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Maxscore\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].maxScore = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handleMin = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Min score\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].minScore = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handleTitle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter title\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].title = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handlephrases = (index, event) => {\n    const resultValue = [...resultdata];\n    resultValue[index].phrase = event.target.value;\n    setResultData(resultValue);\n  };\n\n  const handleneedle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please Choose needle value\");\n      return true;\n    } else {\n      const resultValue = [...resultdata];\n      resultValue[index].needle = event.target.value;\n      setResultData(resultValue);\n    }\n  };\n\n  const handleResultImage = async (event, resindex) => {\n    const resultValue = [...resultdata];\n    var resultimg = event.target.files[0];\n    const data = resultimg.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var result_path = resindex + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, result_path);\n    var resultimage = new FormData();\n    resultimage.append(\"resultImage\", resultimg);\n    resultimage.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(resultimage, options);\n    console.log(result);\n    resultValue[resindex].resultImage = result_path;\n    setResultData(resultValue);\n  };\n\n  const updateList = async () => {\n    var quizId = document.getElementById(\"quizId\").value;\n    var title = document.getElementById(\"title\").value;\n    var slug = document.getElementById(\"slug\").value;\n    var language = document.getElementById(\"language\").value;\n    var fileUpload = {\n      quizId: quizId,\n      quizTitle: title,\n      quizSlug: slug,\n      language: language,\n      bannerImage: image,\n      questionsArray: question,\n      resultdata: resultdata\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.updateQuiz(fileUpload, options);\n\n    if (result.data.code === 200) {\n      setLoad(true);\n    }\n  };\n\n  if (load) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/quizlist\",\n      push: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 13\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 358,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(AdminLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 359,\n      columnNumber: 7\n    }\n  }), quiz === null || quiz === void 0 ? void 0 : quiz.map((list, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      className: \"detailView\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"hidden\",\n      id: \"quizId\",\n      defaultValue: list.adminQuizId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 368,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 21\n      }\n    }, \"Title\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 372,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      className: \"title-text\",\n      name: \"title\",\n      defaultValue: list.title,\n      placeholder: \"Title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 21\n      }\n    }, \"Slug\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"slug\",\n      className: \"title-text\",\n      name: \"slug\",\n      defaultValue: list.slug,\n      placeholder: \"Slug\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 23\n      }\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 407,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 21\n      }\n    }, \"language\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FormControl, {\n      className: classes.formControl,\n      fullWidth: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 418,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      label: \"Category\",\n      id: \"language\",\n      value: list.language,\n      className: \"title-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 419,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: list.language,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 421,\n        columnNumber: 27\n      }\n    }, list.language)))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 427,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 429,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 430,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 431,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 433,\n        columnNumber: 21\n      }\n    }, \"upload\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 435,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 436,\n        columnNumber: 21\n      }\n    }, list.bannerImage != \"\" ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"output\",\n      className: \"img\",\n      src: `${list.image_base_path}/${list.bannerImage}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 29\n      }\n    })) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"img-holder\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 446,\n        columnNumber: 27\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      id: \"output\",\n      className: \"img\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 447,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      id: \"input\",\n      name: \"input\",\n      onChange: event => handleImage(event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 450,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 451,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"create-img\",\n      htmlFor: \"input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 452,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 27\n      }\n    }, \"  Choose your Photo\")))))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 17\n      }\n    })), question.map((que, index) => /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 463,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 464,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      className: \"card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 466,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 25\n      }\n    }, \"Question\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"createnumber1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 23\n      }\n    }, question.length > 1 && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"delete\",\n      onClick: () => removeQuestion(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 470,\n        columnNumber: 49\n      }\n    }, \"X\")), /*#__PURE__*/React.createElement(Card, {\n      className: \"create-list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 472,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      justify: \"center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 473,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      id: \"question\",\n      defaultValue: que.questionTitle,\n      className: \"que-text\",\n      name: \"question\",\n      placeholder: \"Enter Question\",\n      onChange: event => handleQuestion(index, event),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 477,\n        columnNumber: 27\n      }\n    })), que.optionsArray.map((option, optIndex) => {\n      var _option$optionImg;\n\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"answerContainer\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 29\n        }\n      }, que.answer === option.optionLabel ? /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: `option_${index}`,\n        defaultChecked: que.answer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 69\n        }\n      }) : /*#__PURE__*/React.createElement(\"input\", {\n        type: \"radio\",\n        name: `option_${index}`,\n        onClick: event => radioclick(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 487,\n          columnNumber: 147\n        }\n      }), ((_option$optionImg = option.optionImg) === null || _option$optionImg === void 0 ? void 0 : _option$optionImg.length) ? /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"viewOption\",\n        key: optIndex,\n        id: \"cardbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        className: \"div-image\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 496,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"view-img\",\n        src: `${list.image_base_path}/${option.optionImg}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 497,\n          columnNumber: 37\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        sm: 8,\n        md: 8,\n        lg: 8,\n        className: \"viewbg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: \"view-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"create-option\",\n        placeholder: \"Answer\",\n        defaultValue: option.optionLabel,\n        onChange: event => handleOption(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 501,\n          columnNumber: 39\n        }\n      })))) : /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"viewOption\",\n        key: index,\n        id: \"cardbox\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 507,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        lg: 12,\n        className: \"viewbg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 512,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: \"view-card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 513,\n          columnNumber: 37\n        }\n      }, /*#__PURE__*/React.createElement(\"textarea\", {\n        className: \"create-option\",\n        placeholder: \"Answer\",\n        defaultValue: option.optionLabel,\n        onChange: event => handleOption(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 514,\n          columnNumber: 39\n        }\n      })))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quizwrapper\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 519,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"quizfile-upload2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 520,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        className: \"quizoption2\",\n        onChange: event => optionImage(index, optIndex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 521,\n          columnNumber: 35\n        }\n      }), /*#__PURE__*/React.createElement(\"img\", {\n        src: \"/assets/image/option.png\",\n        height: \"40px\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 524,\n          columnNumber: 35\n        }\n      }))), optIndex > 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: () => removeOption(index, optIndex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 527,\n          columnNumber: 48\n        }\n      }, \"X\")));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 531,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      onClick: () => addOption(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 533,\n        columnNumber: 29\n      }\n    }, \"Add Option\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 536,\n        columnNumber: 23\n      }\n    }, index === question.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      onClick: () => addQuestion(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 537,\n        columnNumber: 59\n      }\n    }, \"Add Question\"))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 540,\n        columnNumber: 21\n      }\n    }))), resultdata === null || resultdata === void 0 ? void 0 : resultdata.map((res, resindex) => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 547,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 548,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 11,\n        sm: 6,\n        md: 6,\n        lg: 4,\n        className: \"card\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 549,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"createnumber\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 551,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 552,\n          columnNumber: 29\n        }\n      }, \"Result\")), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"createnumber1\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 27\n        }\n      }, resultdata.length > 1 && /*#__PURE__*/React.createElement(\"button\", {\n        className: \"delete\",\n        onClick: () => removeresult(resindex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 555,\n          columnNumber: 55\n        }\n      }, \"X\"))), /*#__PURE__*/React.createElement(Card, {\n        className: \"create-list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        justify: \"center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 559,\n          columnNumber: 27\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"max\",\n        className: \"result-text\",\n        name: \"max\",\n        defaultValue: res.maxScore,\n        onBlur: event => handleMax(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 563,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"min\",\n        className: \"result-text\",\n        name: \"min\",\n        defaultValue: res.minScore,\n        onBlur: event => handleMin(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 568,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"resultTitle\",\n        className: \"result-text\",\n        name: \"resultTitle\",\n        defaultValue: res.title,\n        onBlur: event => handleTitle(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 573,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"text\",\n        id: \"phrase\",\n        className: \"result-text\",\n        name: \"phrase\",\n        defaultValue: res.phrase,\n        onBlur: event => handlephrases(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 578,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        id: `resultImage${resindex}`,\n        className: \"img-input\",\n        name: `resultImage${resindex}`,\n        onChange: event => handleResultImage(event, resindex),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 29\n        }\n      }), /*#__PURE__*/React.createElement(FormControl, {\n        className: classes.formControl,\n        fullWidth: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 585,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(Select, {\n        value: \"2\",\n        id: \"needle\",\n        className: \"result-text\",\n        inputProps: {\n          'aria-label': 'Without label'\n        },\n        onChange: event => handleneedle(resindex, event),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 586,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"2\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 588,\n          columnNumber: 33\n        }\n      }, \"2\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"8\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 33\n        }\n      }, \"8\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 590,\n          columnNumber: 33\n        }\n      }, \"12\"), /*#__PURE__*/React.createElement(MenuItem, {\n        value: \"18\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 591,\n          columnNumber: 33\n        }\n      }, \"18\"))), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"create-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 594,\n          columnNumber: 29\n        }\n      }, /*#__PURE__*/React.createElement(\"label\", {\n        className: \"create-img\",\n        htmlFor: `resultImage${resindex}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 595,\n          columnNumber: 31\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 33\n        }\n      }, \"  Choose your Photo\")))))), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: true,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 23\n        }\n      }));\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"create-label\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 609,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"addoption\",\n      onClick: updateList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 610,\n        columnNumber: 17\n      }\n    }, \"Update\")));\n  }));\n}\n\nexport default EditQuiz;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/EditQuiz.js"],"names":["Card","CardContent","FormControl","Grid","makeStyles","MenuItem","Select","React","useEffect","useState","AdminLink","Redirect","useParams","services","PhotoSizeSelectLargeOutlined","useStyles","theme","root","width","gridContainer","paddingTop","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","headPart","backgroundColor","icon","categorytitle","fontSize","fontWeight","heading","typography","pxToRem","fontWeightRegular","EditQuiz","classes","id","question","setQuestion","questionTitle","priority","answer","optionsArray","optionLabel","optionImg","resultdata","setResultData","maxScore","minScore","title","phrase","needle","resultImage","quiz","setQuiz","load","setLoad","image","setImage","data","JSON","parse","localStorage","getItem","jwt","getQuizBySlug","quizSlug","options","method","headers","result","console","log","questionData","resultData","addQuestion","removeQuestion","index","list","splice","addresult","removeresult","listdata","addOption","questionIndex","push","previous","slice","current","next","length","removeOption","answerIndex","newArray","filter","value","handleOption","event","values","target","handleQuestion","radioclick","clicked","handleImage","output","document","getElementById","src","URL","createObjectURL","files","onload","revokeObjectURL","imgpath","name","currentTime","Date","time","getTime","ext","split","file_path","myimg","replace","img","FormData","append","bannerImage","message","optionImage","getImage","handleMax","alert","resultValue","handleMin","handleTitle","handlephrases","handleneedle","handleResultImage","resindex","resultimg","result_path","resultimage","updateList","quizId","slug","language","fileUpload","quizTitle","questionsArray","updateQuiz","code","map","adminQuizId","formControl","image_base_path","que","option","optIndex","res"],"mappings":"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","sourcesContent":["import { Card, CardContent, FormControl, Grid, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport \"./createQuiz.css\"\nimport AdminLink from '../management/AdminLinks';\nimport { Redirect, useParams } from 'react-router-dom';\nimport services from '../../services/services';\nimport { PhotoSizeSelectLargeOutlined } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction EditQuiz() {\n  const classes = useStyles();\n  const { id } = useParams();\n  const [question, setQuestion] = useState(\n    [\n      {\n        questionTitle: '',\n        priority: 1,\n        answer: \"\",\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      },\n    ]\n  )\n  const [resultdata, setResultData] = useState(\n    [\n      {\n        maxScore: '',\n        minScore: \"\",\n        title: \"\",\n        phrase: \"\",\n        needle: \"\",\n        resultImage: \"\"\n      }\n    ]\n  )\n\n  const [quiz, setQuiz] = useState([])\n  const [load, setLoad] = useState(false)\n  const [image, setImage] = useState('')\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n    getQuizBySlug();\n  }, [])\n\n  const getQuizBySlug = async () => {\n    const data = {\n      quizSlug: id\n    }\n    const options = {\n      method: 'Post',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getQuizBySlug(data, options)\n    console.log(result.data.data)\n    setQuiz(result.data.data)\n    setQuestion(JSON.parse(result.data.data[0].questionData))\n    setResultData(JSON.parse(result.data.data[0].resultData))\n  };\n  const addQuestion = () => {\n    setQuestion([\n      ...question,\n      {\n        questionTitle: '',\n        priority: 1,\n        answer: \"\",\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      },\n    ])\n  }\n\n  const removeQuestion = (index) => {\n    const list = [...question]\n    list.splice(index, 1);\n    setQuestion(list);\n  }\n  const addresult = () => {\n    setResultData([\n      ...resultdata,\n      {\n        maxScore: '',\n        minScore: \"\",\n        title: \"\",\n        phrase: \"\",\n        needle: \"\",\n        resultImage: \"\"\n      }\n    ])\n  }\n\n  const removeresult = (index) => {\n    const listdata = [...resultdata]\n    listdata.splice(index, 1);\n    setResultData(listdata);\n  }\n  const addOption = (questionIndex) => {\n    const options = question[questionIndex];\n    options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options, optionsArray: [...newArray] }];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n  const handleOption = (questionIndex, index, event) => {\n    const values = [...question];\n\n    values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n    setQuestion(values);\n  }\n  const handleQuestion = (index, event) => {\n\n    const values = [...question];\n\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n\n  }\n  const radioclick = (questionIndex, index, event) => {\n    const values = [...question];\n    var clicked = values[questionIndex].optionsArray[index].optionLabel\n    values[questionIndex].answer = clicked\n    setQuestion(values);\n  }\n  const handleImage = async (event) => {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n    output.onload = function () {\n      URL.revokeObjectURL(output.src) // free memory\n    }\n    var imgpath = event.target.files[0]\n    const data = imgpath.name;\n    console.log(data)\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    console.log(ext[0], ext[1])\n    var file_path = ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path)\n    var img = new FormData()\n    img.append(\"bannerImg\", imgpath)\n    img.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.bannerImage(img, options);\n    setImage(result.data.message)\n  }\n\n  const optionImage = async (questionIndex, index, event) => {\n    // var imageOpt = document.getElementById('imageOpt');\n    // imageOpt.src = URL.createObjectURL(event.target.files[0]);\n    // imageOpt.onload = function () {\n    // URL.revokeObjectURL(imageOpt.src) // free memory\n    //  }\n    const values = [...question];\n    var imgpath = event.target.files[0]\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path)\n    var img = new FormData()\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  }\n  const handleMax = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Maxscore\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].maxScore = event.target.value;\n      setResultData(resultValue);\n\n    }\n  }\n  const handleMin = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Min score\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].minScore = event.target.value;\n      setResultData(resultValue);\n\n    }\n\n\n  }\n  const handleTitle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter title\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].title = event.target.value;\n      setResultData(resultValue);\n\n    }\n\n  }\n  const handlephrases = (index, event) => {\n    const resultValue = [...resultdata];\n    resultValue[index].phrase = event.target.value;\n    setResultData(resultValue);\n\n  }\n  const handleneedle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please Choose needle value\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].needle = event.target.value;\n      setResultData(resultValue);\n    }\n\n  }\n  const handleResultImage = async (event, resindex) => {\n    const resultValue = [...resultdata];\n    var resultimg = event.target.files[0]\n    const data = resultimg.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    var result_path = resindex + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, result_path)\n    var resultimage = new FormData()\n    resultimage.append(\"resultImage\", resultimg);\n    resultimage.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(resultimage, options);\n    console.log(result)\n    resultValue[resindex].resultImage = result_path;\n    setResultData(resultValue);\n  }\n  const updateList = async () => {\n    var quizId = document.getElementById(\"quizId\").value\n    var title = document.getElementById(\"title\").value\n    var slug = document.getElementById(\"slug\").value\n    var language = document.getElementById(\"language\").value\n\n    var fileUpload = {\n      quizId: quizId,\n      quizTitle: title,\n      quizSlug: slug,\n      language: language,\n      bannerImage: image,\n      questionsArray: question,\n      resultdata: resultdata\n\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.updateQuiz(fileUpload, options)\n    if (result.data.code === 200) {\n      setLoad(true)\n    }\n  }\n  if (load) {\n    return (<Redirect to=\"/quizlist\" push={true} />)\n  }\n  return (\n    <div className={classes.root}>\n      <AdminLink />\n      {\n        quiz?.map((list, index) => {\n          return (\n            <Grid container className=\"detailView\">\n              <Grid container>\n                <input type=\"hidden\" id=\"quizId\" defaultValue={list.adminQuizId} />\n                <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                  <div className=\"createnumber\">\n                    <h3>Title</h3>\n                  </div>\n                  <Card className=\"create-list\">\n                    <Grid\n                      container\n                      justify=\"center\"\n                    >\n                      <input type=\"text\" id=\"title\" className=\"title-text\"\n                        name=\"title\"\n                        defaultValue={list.title}\n                        placeholder=\"Title\"\n                      />\n                    </Grid>\n                  </Card>\n                </Grid>\n                <Grid item xs></Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                  <div className=\"createnumber\">\n                    <h3>Slug</h3>\n                  </div>\n                  <Card className=\"create-list\">\n                    <Grid\n                      container\n                      justify=\"center\"\n                    >\n                      <input type=\"text\" id=\"slug\" className=\"title-text\"\n                        name=\"slug\"\n                        defaultValue={list.slug}\n                        placeholder=\"Slug\"\n                      />\n                    </Grid>\n                  </Card>\n                </Grid>\n                <Grid item xs></Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                  <div className=\"createnumber\">\n                    <h3>language</h3>\n                  </div>\n                  <Card className=\"create-list\">\n                    <Grid\n                      container\n                      justify=\"center\"\n                    >\n                      <FormControl className={classes.formControl} fullWidth  >\n                        <select label=\"Category\" id=\"language\" value={list.language} className=\"title-text\" >\n                          {/* <MenuItem value=\"\">select Language</MenuItem>      */}\n                          <option value={list.language}>{list.language}</option>\n                        </select>\n                      </FormControl>\n                    </Grid>\n                  </Card>\n                </Grid>\n                <Grid item xs></Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                  <div className=\"createnumber\">\n                    <h3>upload</h3>\n                  </div>\n                  <Card className=\"create-list\">\n                    <Grid\n                      container\n                      justify=\"center\"\n                    >\n                      {\n                        list.bannerImage != \"\" ?\n                          <div className=\"img-holder\">\n                            <img id=\"output\" className=\"img\" src={`${list.image_base_path}/${list.bannerImage}`} />\n                          </div>\n                          :\n                          <div className=\"img-holder\">\n                            <img id=\"output\" className=\"img\" />\n                          </div>\n                      }\n                      <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\" onChange={event => handleImage(event)} />\n                      <div className=\"create-label\">\n                        <label className=\"create-img\" htmlFor=\"input\">\n                          <span>  Choose your Photo</span>\n                        </label>\n                      </div>\n                    </Grid>\n                  </Card>\n                </Grid>\n                <Grid item xs></Grid>\n              </Grid>\n              {\n                question.map((que, index) => (\n                  <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                      <div className=\"createnumber\">\n                        <h3>Question</h3>\n                      </div>\n                      <div className=\"createnumber1\">\n                        {question.length > 1 && <button className=\"delete\" onClick={() => removeQuestion(index)}>X</button>}\n                      </div>\n                      <Card className=\"create-list\">\n                        <Grid\n                          container\n                          justify=\"center\"\n                        >\n                          <input type=\"text\" id=\"question\" defaultValue={que.questionTitle} className=\"que-text\"\n                            name=\"question\"\n                            placeholder=\"Enter Question\"\n                            onChange={event => handleQuestion(index, event)}\n                          />\n                        </Grid>\n                        {que.optionsArray.map((option, optIndex) => (\n                          <>\n                            <div className=\"answerContainer\">\n                              {\n                                que.answer === option.optionLabel ? <input type=\"radio\" name={`option_${index}`} defaultChecked={que.answer} /> : <input type=\"radio\" name={`option_${index}`} onClick={event => radioclick(index, optIndex, event)} />\n                              }\n\n                              {option.optionImg?.length ?\n                                <Grid\n                                  container\n                                  className=\"viewOption\"\n                                  key={optIndex}\n                                  id=\"cardbox\">\n                                  <Grid item xs={4} sm={4} md={4} lg={4} className=\"div-image\" >\n                                    <img className=\"view-img\" src={`${list.image_base_path}/${option.optionImg}`} />\n                                  </Grid>\n                                  <Grid item xs={8} sm={8} md={8} lg={8} className=\"viewbg\" >\n                                    <CardContent className=\"view-card\">\n                                      <textarea className=\"create-option\" placeholder=\"Answer\" defaultValue={option.optionLabel} onChange={event => handleOption(index, optIndex, event)} />\n                                    </CardContent>\n                                  </Grid>\n                                </Grid>\n                                :\n\n                                <Grid\n                                  container\n                                  className=\"viewOption\"\n                                  key={index}\n                                  id=\"cardbox\">\n                                  <Grid item xs={12} sm={12} md={12} lg={12} className=\"viewbg\" >\n                                    <CardContent className=\"view-card\">\n                                      <textarea className=\"create-option\" placeholder=\"Answer\" defaultValue={option.optionLabel} onChange={event => handleOption(index, optIndex, event)} />\n                                    </CardContent>\n                                  </Grid>\n                                </Grid>\n                              }\n                              <div className=\"quizwrapper\">\n                                <div className=\"quizfile-upload2\">\n                                  <input type=\"file\" className=\"quizoption2\"\n                                    onChange={event => optionImage(index, optIndex, event)}\n                                  />\n                                  <img src=\"/assets/image/option.png\" height=\"40px\" />\n                                </div>\n                              </div>\n                              {optIndex > 1 && <button className=\"delete\" onClick={() => removeOption(index, optIndex)}>X</button>}\n                            </div>\n                          </>\n                        ))}\n                        <div className=\"create-label\">\n                          {\n                            <button className=\"addoption\" onClick={() => addOption(index)}>Add Option</button>}\n                        </div>\n                      </Card>\n                      <div className=\"create-label\">\n                        {index === question.length - 1 && <button className=\"addoption\" onClick={() => addQuestion()}>Add Question</button>}\n                      </div>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n\n                ))}\n              {\n                resultdata?.map((res, resindex) => {\n                  return (\n                    <Grid container>\n                      <Grid item xs></Grid>\n                      <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                        <div>\n                          <div className=\"createnumber\">\n                            <h3>Result</h3>\n                          </div>\n                          <div className=\"createnumber1\">\n                            {resultdata.length > 1 && <button className=\"delete\" onClick={() => removeresult(resindex)}>X</button>}\n                          </div>\n                        </div>\n                        <Card className=\"create-list\">\n                          <Grid\n                            container\n                            justify=\"center\"\n                          >\n                            <input type=\"text\" id=\"max\" className=\"result-text\"\n                              name=\"max\"\n                              defaultValue={res.maxScore}\n                              onBlur={event => handleMax(resindex, event)}\n                            />\n                            <input type=\"text\" id=\"min\" className=\"result-text\"\n                              name=\"min\"\n                              defaultValue={res.minScore}\n                              onBlur={event => handleMin(resindex, event)}\n                            />\n                            <input type=\"text\" id=\"resultTitle\" className=\"result-text\"\n                              name=\"resultTitle\"\n                              defaultValue={res.title}\n                              onBlur={event => handleTitle(resindex, event)}\n                            />\n                            <input type=\"text\" id=\"phrase\" className=\"result-text\"\n                              name=\"phrase\"\n                              defaultValue={res.phrase}\n                              onBlur={event => handlephrases(resindex, event)}\n                            />\n\n                            <input type=\"file\" accept=\"image/*\" id={`resultImage${resindex}`} className=\"img-input\" name={`resultImage${resindex}`} onChange={event => handleResultImage(event, resindex)} />\n                            <FormControl className={classes.formControl} fullWidth  >\n                              <Select value=\"2\" id=\"needle\" className=\"result-text\"\n                                inputProps={{ 'aria-label': 'Without label' }} onChange={event => handleneedle(resindex, event)} >\n                                <MenuItem value=\"2\">2</MenuItem>\n                                <MenuItem value=\"8\">8</MenuItem>\n                                <MenuItem value=\"12\">12</MenuItem>\n                                <MenuItem value=\"18\">18</MenuItem>\n                              </Select>\n                            </FormControl>\n                            <div className=\"create-label\">\n                              <label className=\"create-img\" htmlFor={`resultImage${resindex}`}>\n                                <span>  Choose your Photo</span>\n                              </label>\n                            </div>\n\n                          </Grid>\n                        </Card>\n\n                      </Grid>\n                      <Grid item xs></Grid>\n                    </Grid>\n                  )\n                })\n              }\n              <div className=\"create-label\">\n                <button className=\"addoption\" onClick={updateList}>Update</button>\n              </div>\n            </Grid>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default EditQuiz\n"]},"metadata":{},"sourceType":"module"}