{"ast":null,"code":"import _regeneratorRuntime from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{makeStyles}from'@material-ui/core/styles';import{useParams}from'react-router-dom';import{Grid,Divider,Card,CardContent,Button}from'@material-ui/core';import services from'../../services/services';import AdminLink from'../management/AdminLinks';var useStyles=makeStyles(function(theme){return{root:{width:'100%'},gridContainer:{paddingTop:\"20px\",minHeight:\"100vh\"},paper:{padding:theme.spacing(2),textAlign:'center',color:theme.palette.text.secondary},headPart:{backgroundColor:\"#133b5c\",color:\"#ffff\"},icon:{color:\"#fff\"},categorytitle:{marginTop:\"50px\",color:\"#133b5c\",fontSize:\"35px\",fontWeight:\"600\",textAlign:\"center\"},heading:{fontSize:theme.typography.pxToRem(20),fontWeight:theme.typography.fontWeightRegular},optionimg:{float:\"left\",padding:\"10px\",width:\"70%\"},buttonwrap:{textAlign:\"center\"},active:{margin:\"3px\",fontSize:\"10px\",background:\"#133b5c\",color:\"#fff\"},dlt:{margin:\"3px\",fontSize:\"10px\",background:\"#E70808\",color:\"#fff\"}};});export default function AllQuestionList(){var classes=useStyles();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var _useParams=useParams(),id=_useParams.id;var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),questionList=_useState4[0],setQuestionList=_useState4[1];useEffect(function(){getCategory();getQuestionlist();},[]);var getCategory=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var categoryData,options,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:categoryData={categoryId:id};options={method:'POST',headers:{\"Apiuserid\":\"49507884\",\"Scope\":\"In.QuizApp.READ\"}};_context.next=4;return services.getCategory(categoryData,options);case 4:result=_context.sent;setTitle(result.data.data);case 6:case\"end\":return _context.stop();}}},_callee);}));return function getCategory(){return _ref.apply(this,arguments);};}();var getQuestionlist=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var data,options,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:data={categoryId:id};options={method:'GET',headers:{\"Apiuserid\":\"49507884\",\"Scope\":\"In.QuizApp.READ\"}};_context2.next=4;return services.getQuestionlist(data,options);case 4:result=_context2.sent;console.log(result);setQuestionList(result.data.data);case 7:case\"end\":return _context2.stop();}}},_callee2);}));return function getQuestionlist(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/React.createElement(\"div\",{className:classes.root},/*#__PURE__*/React.createElement(AdminLink,null),/*#__PURE__*/React.createElement(\"h3\",{className:classes.categorytitle},title.title),/*#__PURE__*/React.createElement(Grid,{container:true,className:classes.gridContainer,justify:\"center\"},questionList.map(function(list,index){return/*#__PURE__*/React.createElement(Grid,{container:true,key:index},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:6,md:6,lg:4},/*#__PURE__*/React.createElement(Card,{className:\"questioncard\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"questionname\"},list.question),/*#__PURE__*/React.createElement(\"div\",{className:\"optioncard\"},list.optionsArray.map(function(option,index){return/*#__PURE__*/React.createElement(React.Fragment,null,option.optionImg.length?/*#__PURE__*/React.createElement(Grid,{container:true,className:\"nonclickoption\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:4,sm:4,md:4,lg:4,className:\"image-div\"},/*#__PURE__*/React.createElement(\"img\",{className:\"optionImg\",src:option.optionImg})),/*#__PURE__*/React.createElement(Grid,{item:true,xs:8,sm:8,md:8,lg:8,className:\"optionbg\"},/*#__PURE__*/React.createElement(CardContent,{className:\"cardcontent\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"optioncontent\",id:\"cardText\"},option.optionLabel)))):/*#__PURE__*/React.createElement(Grid,{justify:\"center\",container:true,className:\"new\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:8,sm:8,md:8,lg:8,className:\"newnonclickoption\"},/*#__PURE__*/React.createElement(CardContent,{className:\"newcontent\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"optioncontent\",id:\"cardText\"},option.optionLabel)))));})),/*#__PURE__*/React.createElement(\"div\",{className:classes.buttonwrap},/*#__PURE__*/React.createElement(Button,{className:classes.dlt,size:\"small\",variant:\"contained\"//  onClick={checkedStatus(category.categoryId)}\n},\"Deactive\")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true}));})));}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/question/AllQuestionList.js"],"names":["React","useEffect","useState","makeStyles","useParams","Grid","Divider","Card","CardContent","Button","services","AdminLink","useStyles","theme","root","width","gridContainer","paddingTop","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","headPart","backgroundColor","icon","categorytitle","marginTop","fontSize","fontWeight","heading","typography","pxToRem","fontWeightRegular","optionimg","float","buttonwrap","active","margin","background","dlt","AllQuestionList","classes","title","setTitle","id","questionList","setQuestionList","getCategory","getQuestionlist","categoryData","categoryId","options","method","headers","result","data","console","log","map","list","index","question","optionsArray","option","optionImg","length","optionLabel"],"mappings":"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","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Divider, Card, CardContent, Button } from '@material-ui/core';\nimport services from '../../services/services';\nimport AdminLink from '../management/AdminLinks';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    gridContainer: {\n      paddingTop:\"20px\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    headPart:{\n        backgroundColor:\"#133b5c\",\n      color:\"#ffff\"\n    },\n    icon:{\n        color:\"#fff\"\n    },\n    categorytitle:{\n        marginTop:\"50px\",\n        color:\"#133b5c\",\n        fontSize:\"35px\",\n        fontWeight:\"600\",\n        textAlign:\"center\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(20),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    optionimg:{\n      float:\"left\",\n      padding:\"10px\",\n      width:\"70%\"\n    },\n    buttonwrap:{\n      textAlign:\"center\"\n    },\n    active:{\n      margin: \"3px\",\n      fontSize:\"10px\",\n      background:\"#133b5c\",\n      color:\"#fff\",\n    },\n    dlt:{\n      margin: \"3px\",\n      fontSize:\"10px\",\n      background:\"#E70808\",\n      color:\"#fff\",\n    },\n  }));\n  \n  export default function AllQuestionList() {\n    const classes = useStyles();\n    const [title,setTitle]=useState({})\n    const {id} = useParams();\n    const [questionList, setQuestionList] = useState([]);\n    useEffect(() => {\n      getCategory();\n        getQuestionlist();\n    }, [])\n\n  \n  const  getCategory = async () => {\n   const categoryData={\n       categoryId:id\n   }\n  \n   const options = {\n       method: 'POST',\n       headers: {\n           \"Apiuserid\": \"49507884\",\n           \"Scope\": \"In.QuizApp.READ\",   \n       }\n   }\n   const result = await services. getCategory(categoryData,options)\n   setTitle(result.data.data)\n  };\n    const getQuestionlist = async () => {\n        const data={\n             categoryId:id\n        }\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",\n            }\n        }\n        const result = await services.getQuestionlist(data,options)\n        console.log(result)\n        setQuestionList(result.data.data)\n    };\n  \n    return (\n      <div className={classes.root}>\n        <AdminLink/>\n        <h3 className={classes.categorytitle}>{title.title}</h3>\n          <Grid\n                container\n                className={classes.gridContainer}\n                justify=\"center\"\n             >\n               {\n                 questionList.map((list,index)=>{\n                   return(\n                    <Grid container key={index}>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                      <Card className=\"questioncard\">\n                   <h3 className=\"questionname\">{list.question}</h3>\n                         <div className=\"optioncard\">\n                         {\n                           list.optionsArray.map((option,index)=>{\n                                return(\n                                   <>\n                                {option.optionImg.length ?\n                                  <Grid container className='nonclickoption'>\n                                    <Grid item xs={4} sm={4} md={4} lg={4} className=\"image-div\" >\n                                    <img className=\"optionImg\" src={option.optionImg} /> \n                                    </Grid>\n                                    <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                                      <CardContent className=\"cardcontent\">\n                                        <h3 className=\"optioncontent\" id=\"cardText\">\n                                          {option.optionLabel}\n                                        </h3>\n                                      </CardContent>\n                                    </Grid>\n                                 </Grid>\n                               : \n                               <Grid justify=\"center\" container className=\"new\">\n                                  <Grid item xs={8} sm={8} md={8} lg={8} className='newnonclickoption'>\n                                      <CardContent className=\"newcontent\">\n                                        <h3 className=\"optioncontent\" id=\"cardText\">\n                                          {option.optionLabel}\n                                        </h3>\n                                      </CardContent>\n                                  </Grid>\n                               </Grid>\n                               }\n                               </>\n                                )\n                           })\n                         }\n                               \n                    \n                        </div>\n                        <div className={classes.buttonwrap}>\n                         {/* {\n                     category.status === \"active\" ? */}\n                     <Button\n                     className={classes.dlt}\n                     size=\"small\"\n                     variant=\"contained\"\n                    //  onClick={checkedStatus(category.categoryId)}\n                     >\n                    Deactive\n                    </Button> \n                    {/* :\n                         <Button\n                         className={classes.active}\n                         size=\"small\"\n                         variant=\"contained\"\n                         onClick={checkedStatus(category.categoryId)}\n                         >\n                        Active\n                        </Button>\n                    } */}\n                        </div>\n                        \n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                   )\n                 })\n               }\n                \n         </Grid>\n        </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}