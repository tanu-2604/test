{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/question/AllQuestionList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Divider, Card, CardContent } from '@material-ui/core';\nimport services from '../../services/services';\nimport AdminLink from '../management/AdminLinks';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%'\n  },\n  gridContainer: {\n    paddingTop: \"50px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    marginTop: \"50px\",\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular\n  }\n}));\nexport default function AllQuestionList() {\n  const classes = useStyles();\n  const [title, setTitle] = useState({});\n  const {\n    id\n  } = useParams();\n  const [questionList, setQuestionList] = useState([]);\n  useEffect(() => {\n    getCategory();\n    getQuestionlist();\n  }, []);\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: id\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getCategory(categoryData, options);\n    setTitle(result.data.data);\n  };\n\n  const getQuestionlist = async () => {\n    const data = {\n      categoryId: id\n    };\n    const options = {\n      method: 'GET',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getQuestionlist(data, options);\n    console.log(result);\n    setQuestionList(result.data.data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(AdminLink, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: classes.categorytitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, title.title), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.gridContainer,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 11\n    }\n  }, questionList.map((list, index) => {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 11,\n      sm: 6,\n      md: 6,\n      lg: 4,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      className: \"questioncard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"questionname\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 20\n      }\n    }, list.question), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"optioncard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 26\n      }\n    }, list.optionsArray.map((option, index) => {\n      return /*#__PURE__*/React.createElement(Grid, {\n        container: true,\n        className: \"nonclickoption\",\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 35\n        }\n      }, /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 4,\n        sm: 4,\n        md: 4,\n        lg: 4,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(\"img\", {\n        className: \"optionImg\",\n        src: option.optionImg,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 38\n        }\n      })), /*#__PURE__*/React.createElement(Grid, {\n        item: true,\n        xs: 8,\n        sm: 8,\n        md: 8,\n        lg: 8,\n        className: \"optionbg\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 33\n        }\n      }, /*#__PURE__*/React.createElement(CardContent, {\n        className: \"cardcontent\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 34\n        }\n      }, /*#__PURE__*/React.createElement(\"h3\", {\n        className: \"optioncontent\",\n        id: \"cardText\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 36\n        }\n      }, option.optionLabel))));\n    })))), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 21\n      }\n    }));\n  })));\n}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/question/AllQuestionList.js"],"names":["React","useEffect","useState","makeStyles","useParams","Grid","Divider","Card","CardContent","services","AdminLink","useStyles","theme","root","width","gridContainer","paddingTop","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","headPart","backgroundColor","icon","categorytitle","marginTop","fontSize","fontWeight","heading","typography","pxToRem","fontWeightRegular","AllQuestionList","classes","title","setTitle","id","questionList","setQuestionList","getCategory","getQuestionlist","categoryData","categoryId","options","method","headers","result","data","console","log","map","list","index","question","optionsArray","option","optionImg","optionLabel"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,EAAwBC,QAAxB,QAAuC,OAAvC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,IAAT,EAAeC,OAAf,EAAwBC,IAAxB,EAA8BC,WAA9B,QAAiD,mBAAjD;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAGA,MAAMC,SAAS,GAAGR,UAAU,CAAES,KAAD,KAAY;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE;AADH,GAD+B;AAIrCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,UAAU,EAAC,MADE;AAEbC,IAAAA,SAAS,EAAC;AAFG,GAJsB;AAQrCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,KAAK,EAAEV,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmBC;AAHvB,GAR8B;AAarCC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,eAAe,EAAC,SADX;AAEPL,IAAAA,KAAK,EAAC;AAFC,GAb4B;AAiBrCM,EAAAA,IAAI,EAAC;AACDN,IAAAA,KAAK,EAAC;AADL,GAjBgC;AAoBrCO,EAAAA,aAAa,EAAC;AACVC,IAAAA,SAAS,EAAC,MADA;AAEVR,IAAAA,KAAK,EAAC,SAFI;AAGVS,IAAAA,QAAQ,EAAC,MAHC;AAIVC,IAAAA,UAAU,EAAC,KAJD;AAKVX,IAAAA,SAAS,EAAC;AALA,GApBuB;AA2BrCY,EAAAA,OAAO,EAAE;AACPF,IAAAA,QAAQ,EAAEnB,KAAK,CAACsB,UAAN,CAAiBC,OAAjB,CAAyB,EAAzB,CADH;AAEPH,IAAAA,UAAU,EAAEpB,KAAK,CAACsB,UAAN,CAAiBE;AAFtB;AA3B4B,CAAZ,CAAD,CAA5B;AAiCE,eAAe,SAASC,eAAT,GAA2B;AACxC,QAAMC,OAAO,GAAG3B,SAAS,EAAzB;AACA,QAAM,CAAC4B,KAAD,EAAOC,QAAP,IAAiBtC,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAM;AAACuC,IAAAA;AAAD,MAAOrC,SAAS,EAAtB;AACA,QAAM,CAACsC,YAAD,EAAeC,eAAf,IAAkCzC,QAAQ,CAAC,EAAD,CAAhD;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd2C,IAAAA,WAAW;AACTC,IAAAA,eAAe;AAClB,GAHQ,EAGN,EAHM,CAAT;;AAMF,QAAOD,WAAW,GAAG,YAAY;AAChC,UAAME,YAAY,GAAC;AACfC,MAAAA,UAAU,EAACN;AADI,KAAnB;AAIA,UAAMO,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,OAAO,EAAE;AACL,qBAAa,UADR;AAEL,iBAAS;AAFJ;AAFG,KAAhB;AAOA,UAAMC,MAAM,GAAG,MAAM1C,QAAQ,CAAEmC,WAAV,CAAsBE,YAAtB,EAAmCE,OAAnC,CAArB;AACAR,IAAAA,QAAQ,CAACW,MAAM,CAACC,IAAP,CAAYA,IAAb,CAAR;AACA,GAdD;;AAeE,QAAMP,eAAe,GAAG,YAAY;AAChC,UAAMO,IAAI,GAAC;AACNL,MAAAA,UAAU,EAACN;AADL,KAAX;AAGA,UAAMO,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,OAAO,EAAE;AACL,qBAAa,UADR;AAEL,iBAAS;AAFJ;AAFG,KAAhB;AAOA,UAAMC,MAAM,GAAG,MAAM1C,QAAQ,CAACoC,eAAT,CAAyBO,IAAzB,EAA8BJ,OAA9B,CAArB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACAR,IAAAA,eAAe,CAACQ,MAAM,CAACC,IAAP,CAAYA,IAAb,CAAf;AACH,GAdD;;AAgBA,sBACE;AAAK,IAAA,SAAS,EAAEd,OAAO,CAACzB,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAI,IAAA,SAAS,EAAEyB,OAAO,CAACT,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAuCU,KAAK,CAACA,KAA7C,CAFF,eAGI,oBAAC,IAAD;AACM,IAAA,SAAS,MADf;AAEM,IAAA,SAAS,EAAED,OAAO,CAACvB,aAFzB;AAGM,IAAA,OAAO,EAAC,QAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMO2B,YAAY,CAACa,GAAb,CAAiB,CAACC,IAAD,EAAMC,KAAN,KAAc;AAC7B,wBACC,oBAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,GAAG,EAAEA,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAmB,MAAA,EAAE,EAAE,CAAvB;AAA0B,MAAA,EAAE,EAAE,CAA9B;AAAiC,MAAA,EAAE,EAAE,CAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AAAM,MAAA,SAAS,EAAC,cAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACH;AAAI,MAAA,SAAS,EAAC,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8BD,IAAI,CAACE,QAAnC,CADG,eAEG;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEF,IAAI,CAACG,YAAL,CAAkBJ,GAAlB,CAAsB,CAACK,MAAD,EAAQH,KAAR,KAAgB;AACjC,0BACE,oBAAC,IAAD;AACA,QAAA,SAAS,MADT;AAEA,QAAA,SAAS,EAAC,gBAFV;AAGA,QAAA,GAAG,EAAEA,KAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAKF,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACK;AAAK,QAAA,SAAS,EAAC,WAAf;AAA2B,QAAA,GAAG,EAAEG,MAAM,CAACC,SAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADL,CALE,eAQF,oBAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,CAAf;AAAkB,QAAA,EAAE,EAAE,CAAtB;AAAyB,QAAA,EAAE,EAAE,CAA7B;AAAgC,QAAA,EAAE,EAAE,CAApC;AAAuC,QAAA,SAAS,EAAC,UAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAEC,oBAAC,WAAD;AAAa,QAAA,SAAS,EAAC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAI,QAAA,SAAS,EAAC,eAAd;AAA8B,QAAA,EAAE,EAAC,UAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACED,MAAM,CAACE,WADT,CADF,CAFD,CARE,CADF;AAoBJ,KArBD,CAFF,CAFH,CADF,CAFA,eAoCA,oBAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MApCA,CADD;AAwCD,GAzCD,CANP,CAHJ,CADF;AAyDH","sourcesContent":["import React,{useEffect,useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Divider, Card, CardContent } from '@material-ui/core';\nimport services from '../../services/services';\nimport AdminLink from '../management/AdminLinks';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    gridContainer: {\n      paddingTop:\"50px\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    headPart:{\n        backgroundColor:\"#133b5c\",\n      color:\"#ffff\"\n    },\n    icon:{\n        color:\"#fff\"\n    },\n    categorytitle:{\n        marginTop:\"50px\",\n        color:\"#133b5c\",\n        fontSize:\"35px\",\n        fontWeight:\"600\",\n        textAlign:\"center\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(20),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n  \n  export default function AllQuestionList() {\n    const classes = useStyles();\n    const [title,setTitle]=useState({})\n    const {id} = useParams();\n    const [questionList, setQuestionList] = useState([]);\n    useEffect(() => {\n      getCategory();\n        getQuestionlist();\n    }, [])\n\n  \n  const  getCategory = async () => {\n   const categoryData={\n       categoryId:id\n   }\n  \n   const options = {\n       method: 'POST',\n       headers: {\n           \"Apiuserid\": \"49507884\",\n           \"Scope\": \"In.QuizApp.READ\",   \n       }\n   }\n   const result = await services. getCategory(categoryData,options)\n   setTitle(result.data.data)\n  };\n    const getQuestionlist = async () => {\n        const data={\n             categoryId:id\n        }\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",\n            }\n        }\n        const result = await services.getQuestionlist(data,options)\n        console.log(result)\n        setQuestionList(result.data.data)\n    };\n  \n    return (\n      <div className={classes.root}>\n        <AdminLink/>\n        <h3 className={classes.categorytitle}>{title.title}</h3>\n          <Grid\n                container\n                className={classes.gridContainer}\n                justify=\"center\"\n             >\n               {\n                 questionList.map((list,index)=>{\n                   return(\n                    <Grid container key={index}>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                      <Card className=\"questioncard\">\n                   <h3 className=\"questionname\">{list.question}</h3>\n                         <div className=\"optioncard\">\n                         {\n                           list.optionsArray.map((option,index)=>{\n                                return(\n                                  <Grid\n                                  container\n                                  className=\"nonclickoption\"\n                                  key={index}\n                                 >\n                                <Grid item xs={4} sm={4} md={4} lg={4} >\n                                     <img className=\"optionImg\" src={option.optionImg} /> \n                                </Grid>\n                                <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                              \n                                 <CardContent className=\"cardcontent\">\n                                   <h3 className=\"optioncontent\" id=\"cardText\">\n                                    {option.optionLabel}\n                                   </h3>\n                                 </CardContent>\n                            \n                               </Grid>\n                               </Grid>\n                                )\n                           })\n                         }\n                               \n                    \n                        </div>\n                        \n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                   )\n                 })\n               }\n                \n         </Grid>\n        </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}