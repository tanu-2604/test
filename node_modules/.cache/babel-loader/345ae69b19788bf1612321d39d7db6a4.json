{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/management/UserTable.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Switch from '@material-ui/core/Switch';\nimport services from '../../../services';\nconst columns = [{\n  id: 'firstName',\n  label: 'First Name',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'lastName',\n  label: 'Last Name',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'username',\n  label: 'User Name',\n  minWidth: 100,\n  align: 'center'\n}];\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  }\n});\nexport default function UserTable({\n  list,\n  updateUsers\n}) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [checked, setChecked] = React.useState(false); // if(list.status==\"active\")\n  // {\n  //   setChecked(true)\n  // }\n\n  const data = JSON.parse(localStorage.getItem('userData'));\n  const jwt = data['jwt'];\n\n  const checkedStatus = id => async () => {\n    debugger;\n    console.log(id);\n    var userId = id;\n    console.log(userId);\n    var data = {\n      userId: userId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.createStatus(data, options);\n    updateUsers();\n    console.log(result);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table,\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 17\n    }\n  }, column.label)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 15\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: list.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n        key: value,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value));\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 19\n      }\n    }, row.status === \"active\" ? /*#__PURE__*/React.createElement(Switch, {\n      checked: true,\n      onChange: checkedStatus(row.userId),\n      name: \"checkedA\",\n      color: \"primary\",\n      id: row.userId,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(Switch, {\n      checked: false,\n      onChange: checkedStatus(row.userId),\n      name: \"checkedA\",\n      color: \"primary\",\n      id: row.userId,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 25\n      }\n    })));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: list.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/management/UserTable.js"],"names":["React","useState","useEffect","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","EditIcon","DeleteIcon","Switch","services","columns","id","label","minWidth","align","useStyles","root","width","marginTop","container","maxHeight","table","background","color","dltIcon","UserTable","list","updateUsers","classes","page","setPage","rowsPerPage","setRowsPerPage","checked","setChecked","data","JSON","parse","localStorage","getItem","jwt","checkedStatus","console","log","userId","options","method","headers","result","createStatus","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","slice","row","format","status","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport EditIcon from '@material-ui/icons/Edit';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Switch from '@material-ui/core/Switch';\nimport services from '../../../services';\n\nconst columns = [\n  { id: 'firstName', label: 'First Name', minWidth: 100, align: 'center' },\n  { id: 'lastName', label: 'Last Name', minWidth: 100, align: 'center' },\n  {\n    id: 'username',\n    label: 'User Name',\n    minWidth: 100,\n    align: 'center'\n\n  },\n];\n\n\n\n\nconst useStyles = makeStyles({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400,\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n});\n\nexport default function UserTable({ list, updateUsers }) {\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [checked, setChecked] = React.useState(false)\n\n  // if(list.status==\"active\")\n  // {\n  //   setChecked(true)\n  // }\n  const data = JSON.parse(localStorage.getItem('userData'));\n  const jwt = data['jwt'];\n\n  const checkedStatus = (id) => async () => {\n    debugger;\n    console.log(id)\n    var userId = id;\n    console.log(userId)\n\n\n    var data = {\n      userId: userId,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.createStatus(data, options)\n    updateUsers();\n    console.log(result)\n\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper className={classes.root}>\n      <TableContainer className={classes.container}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell className={classes.table}\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n              <TableCell className={classes.table}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow \n                hover \n                role=\"checkbox\"\n                 tabIndex={-1}\n                 key={list.userId}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <>\n                        <TableCell \n                        key={value}\n                        align={column.align}\n                         >\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\n                        </TableCell>\n                      </>\n                    );\n\n                  })}\n                  <TableCell>\n                    {\n                      row.status === \"active\" ?\n                        <Switch\n                          checked={true}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        /> :\n                        <Switch\n                          checked={false}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                    }\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={list.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}"]},"metadata":{},"sourceType":"module"}