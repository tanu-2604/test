{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/form/Score.js\";\nimport React, { useState, useEffect } from 'react';\nimport '../style/score.css';\nimport { Grid, Paper, Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactSpeedometer from \"react-d3-speedometer\";\nimport { Link } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nfunction Score(props) {\n  var _localStorage$getItem;\n\n  if (((_localStorage$getItem = localStorage.getItem('alldata')) === null || _localStorage$getItem === void 0 ? void 0 : _localStorage$getItem.length) != null) {\n    var datalist = JSON.parse(localStorage.getItem('alldata'));\n    const list = datalist['list'];\n    const score = datalist.score.score;\n    const createdBy = datalist['createdBy'];\n    const feedbackBy = JSON.parse(localStorage.getItem('feedbackby'));\n  }\n\n  debugger; //    var value=(score/list)*100;\n  //    console.log(value)\n  // if(value >= 81 && value <=100)\n  // {\n  //   var text=\"Best Friend\"  \n  // }\n  // else if(value >= 61 && value <=80)\n  // {\n  //   var text=\"Good Friend\"\n  // }\n  // else if(value >= 41 && value <=60)\n  // {\n  //   var text =\"Average Friend\"\n  // }\n  // else if(value >= 21 && value <=40)\n  // {\n  //   var text=\"Bad Friend\"\n  // }\n  // else{\n  //   var text =\"Very Bad Friend\"\n  // }\n\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default Score;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/form/Score.js"],"names":["React","useState","useEffect","Grid","Paper","Card","CardMedia","CardContent","Typography","makeStyles","ReactSpeedometer","Link","Footer","useStyles","theme","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","Score","props","localStorage","getItem","length","datalist","JSON","parse","list","score","createdBy","feedbackBy","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,oBAAP;AACA,SAAUC,IAAV,EAAgBC,KAAhB,EAAsBC,IAAtB,EAA4BC,SAA5B,EAAuCC,WAAvC,EAAoDC,UAApD,QAAsE,mBAAtE;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,gBAAP,MAA6B,sBAA7B;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AAIA,MAAMC,SAAS,GAAGJ,UAAU,CAAEK,KAAD,KAAU;AACnCC,EAAAA,aAAa,EAAE;AACbC,IAAAA,WAAW,EAAE,MADA;AAEbC,IAAAA,YAAY,EAAE,MAFD;AAGbC,IAAAA,UAAU,EAAC,SAHE;AAIbC,IAAAA,SAAS,EAAC;AAJG,GADoB;AAOnCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,OAAO,EAAEP,KAAK,CAACQ,OAAN,CAAc,CAAd,CADN;AAEHC,IAAAA,SAAS,EAAE,QAFR;AAGHC,IAAAA,KAAK,EAAEV,KAAK,CAACW,OAAN,CAAcC,IAAd,CAAmBC;AAHvB;AAP4B,CAAV,CAAD,CAA5B;;AAeA,SAASC,KAAT,CAAeC,KAAf,EAAsB;AAAA;;AACpB,MAAG,0BAAAC,YAAY,CAACC,OAAb,CAAqB,SAArB,iFAAiCC,MAAjC,KAA0C,IAA7C,EACA;AACE,QAAIC,QAAQ,GAACC,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CAAb;AACF,UAAMK,IAAI,GAACH,QAAQ,CAAC,MAAD,CAAnB;AACA,UAAMI,KAAK,GAACJ,QAAQ,CAACI,KAAT,CAAeA,KAA3B;AACA,UAAMC,SAAS,GAACL,QAAQ,CAAC,WAAD,CAAxB;AACA,UAAMM,UAAU,GAACL,IAAI,CAACC,KAAL,CAAWL,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAjB;AACC;;AACF,WATqB,CAUpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,OAAO,GAAG3B,SAAS,EAAzB;AACE,sBACA,uDACA;AAAK,IAAA,SAAS,EAAE2B,OAAO,CAACzB,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADA;AAkHH;;AAED,eAAea,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport '../style/score.css'\nimport {  Grid, Paper,Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactSpeedometer from \"react-d3-speedometer\"\nimport { Link } from 'react-router-dom';\nimport Footer from '../footer/Footer';\n\n\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    \n  }));\n  \nfunction Score(props) {\n  if(localStorage.getItem('alldata')?.length!= null)\n  {\n    var datalist=JSON.parse(localStorage.getItem('alldata'));\n  const list=datalist['list']\n  const score=datalist.score.score\n  const createdBy=datalist['createdBy']\n  const feedbackBy=JSON.parse(localStorage.getItem('feedbackby'))\n  }\n debugger\n  //    var value=(score/list)*100;\n  //    console.log(value)\n  // if(value >= 81 && value <=100)\n  // {\n  //   var text=\"Best Friend\"  \n  // }\n  // else if(value >= 61 && value <=80)\n  // {\n  //   var text=\"Good Friend\"\n  // }\n  // else if(value >= 41 && value <=60)\n  // {\n  //   var text =\"Average Friend\"\n  // }\n  // else if(value >= 21 && value <=40)\n  // {\n  //   var text=\"Bad Friend\"\n  // }\n  // else{\n  //   var text =\"Very Bad Friend\"\n  // }\n\n  const classes = useStyles();\n    return (\n    <>\n    <div className={classes.gridContainer}>\n    {/* <Grid container>\n       <Grid item xs></Grid>\n      <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\" className={classes.head}>\n              <h3 className=\"text1\">2021 Friendship</h3>\n              <h3 className=\"text2\">Dare</h3>\n          </div>\n          <Card className=\"score-card\">\n               <h3 className=\"how\">Your Score:   {score}/{list}</h3>\n            <Grid container justify=\"center\">  \n                <ReactSpeedometer\n                    maxValue={list}\n                    value={score}\n                    minValue={0}\n                    className=\"speedometer\"\n                    segments={5}\n                    ringWidth={60}\n                    needleTransition={\"easeBackInOut\"}\n                    segmentColors={[\"#7555D9\",\" #7555D9\",\" #7555D9\",\" #7555D9\"]}\n                    needleColor={\"#707070\"}\n                    customSegmentLabels={[\n                      {\n                        text: \"😡\",\n                        position: \"INSIDE\",\n                        color:\"#fff\",\n                        fontSize:\"35px\",\n                        \n                      \n                        \n                      },\n                      {\n                        text: \"😞\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                      \n                      },\n                      {\n                        text: \"😐\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                        \n                      },\n                      \n                      {\n                        text: \"😊\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                      \n                      },\n                      {\n                        text: \"😍\",\n                        position: \"INSIDE\",\n                        color:\"#fff\",\n                        fontSize:\"35px\",\n                      \n                        \n                      },\n                    ]}\n                /> \n             </Grid>\n             <Grid container justify=\"center\">\n             <h4 className=\"score-value\">{text}</h4>\n             </Grid>\n            <Link to=\"/\"><button className=\"copy\">Create Your Quiz</button></Link>  \n              <div className=\"sharelink\">\n                <h3 className=\"knows\">Who knows {createdBy} best:</h3>\n              </div>\n                              <Grid container justify=\"center\">                   \n                                    <table className=\"table-data\">\n                                        <thead>\n                                        <tr>\n                                            <th>Name</th>\n                                            <th>Score</th>\n                                        </tr>\n                                        </thead>\n                                       <tbody>\n                                       <tr>\n                  <td>{feedbackBy}</td>\n                  <td>{score}</td>\n                                        </tr>\n                                       </tbody>\n                                    </table>                   \n                              </Grid>              \n        </Card>\n\n    </Grid>\n    <Grid item xs>\n\n    </Grid>\n\n    </Grid>\n    <br/>\n    <Grid container>\n    <Grid item xs>\n\n    </Grid>\n    <Grid item xs={11} sm={6} md={6} lg={4}>\n\n    </Grid>\n    <Grid item xs>\n\n    </Grid>\n    </Grid>\n    <Footer/> */}\n    </div>\n    \n    </>\n);\n}\n\nexport default Score\n"]},"metadata":{},"sourceType":"module"}