{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/Quizlist.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport { ToggleButton } from 'react-bootstrap';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { VisibilityOutlined } from '@material-ui/icons';\nconst useStyles = makeStyles(() => ({\n  list: {\n    margin: \"80px\"\n  }\n}));\nexport default function Quizlist() {\n  const classes = useStyles();\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AdminLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table,\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 17\n    }\n  }, column.label)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"return (\", /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    role: \"checkbox\",\n    tabIndex: -1,\n    key: list.userId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }, \"return (\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n    key: value,\n    align: column.align,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, column.format && typeof value === 'number' ? column.format(value) : value)), \"//   ); // })}\", /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checked: true,\n    onChange: checkedStatus(row.userId),\n    name: \"checkedA\",\n    color: \"primary\",\n    id: row.userId,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }\n  }))), \"//   ); // })}\"))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: list.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/Quizlist.js"],"names":["React","MaterialTable","Grid","IconButton","makeStyles","AdminLinks","ToggleButton","VisibilityIcon","VisibilityOutlined","useStyles","list","margin","Quizlist","classes","container","columns","map","column","table","id","align","minWidth","label","userId","value","format","checkedStatus","row","length","rowsPerPage","page","handleChangePage","handleChangeRowsPerPage"],"mappings":"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","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table'\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport { ToggleButton } from 'react-bootstrap';\nimport VisibilityIcon from '@material-ui/icons/Visibility';\nimport { VisibilityOutlined } from '@material-ui/icons';\n\nconst useStyles=makeStyles(()=>({\n  list:{\n    margin:\"80px\"\n  }\n}))\nexport default function Quizlist() {\n  const classes= useStyles()\n  return (\n    <>\n    <AdminLinks/>\n     <Grid container justify=\"center\" className={classes.list}>\n       <Grid item xs={11} sm={6} md={6} lg={10}>\n\n       <TableContainer className={classes.container}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell className={classes.table}\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n              <TableCell className={classes.table}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => { */}\n              return (\n                <TableRow \n                hover \n                role=\"checkbox\"\n                 tabIndex={-1}\n                 key={list.userId}>\n                  {/* {columns.map((column) => {\n                    const value = row[column.id]; */}\n                    return (\n                      <>\n                        <TableCell \n                        key={value}\n                        align={column.align}\n                         >\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\n                        </TableCell>\n                      </>\n                  //   );\n\n                  // })}\n                  <TableCell>\n                    {/* {\n                      row.status === \"active\" ? */}\n                        <Switch\n                          checked={true}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        /> \n                        {/* :\n                        <Switch\n                          checked={false}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                    } */}\n                  </TableCell>\n                </TableRow>\n            //   );\n            // })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={list.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      /> \n       </Grid>\n    </Grid>\n    </>\n    \n  )\n}\n"]},"metadata":{},"sourceType":"module"}