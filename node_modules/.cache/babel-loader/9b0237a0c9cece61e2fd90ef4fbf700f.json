{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/form/ShareLink.js\";\nimport React, { useState, useRef, useEffect } from 'react';\nimport '../style/sharelink.css';\nimport { Grid, Card, Popover, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport services from '../../services/services';\nimport InstaModel from './InstaModel';\nimport Footer from '../footer/Footer';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Helmet } from 'react-helmet';\nconst useStyles = makeStyles(theme => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  grid: {\n    position: \"relative\"\n  },\n  typography: {\n    padding: \"10px\",\n    color: \"green\",\n    fontSize: \"15px\",\n    border: \"none\"\n  }\n}));\n\nfunction ShareLink(props) {\n  const id = props.location.state.quizId;\n  const classes = useStyles();\n  const [allResult, setAllResult] = useState([]);\n  const [open, setOpen] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const createId = JSON.parse(localStorage.getItem('createId'));\n  var dataId = createId.pop();\n  const [title, setTitle] = useState({});\n  var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n  useEffect(() => {\n    getCategory();\n    getCreaterResult();\n    console.log(document.title);\n  }, [1]);\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getCategory(categoryData, options);\n    setTitle(result.data.data);\n  };\n\n  const textAreaRef = useRef(null);\n\n  function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n    ToastsStore.success(\"Copied SuccessFully\");\n  }\n\n  ;\n\n  const getCreaterResult = async () => {\n    const dataid = {\n      quizId: dataId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.Read\"\n      }\n    };\n    const result = await services.getCreaterResult(dataid, options);\n    setAllResult(result.data.data);\n  };\n\n  const refresh = () => {\n    window.location.reload();\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"meta\", {\n    name: \"theme-color\",\n    property: \"og:title\",\n    content: `${document.title}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.gridContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    className: classes.grid,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    justify: \"center\",\n    className: classes.head,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }, title.title)), /*#__PURE__*/React.createElement(Card, {\n    className: \"form-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sharelink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"challenge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, \"Your Challenge is ready\"), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/friend.svg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"this-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  }, \"Share this link with your friends\"), /*#__PURE__*/React.createElement(\"input\", {\n    ref: textAreaRef,\n    className: \"quizInput\",\n    defaultValue: `http://localhost:3000/friendlink/${id}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: copyToClipboard,\n    className: \"copy\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, \" Copy Link\"), /*#__PURE__*/React.createElement(ToastsContainer, {\n    store: ToastsStore,\n    position: ToastsContainerPosition.TOP_LEFT,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: `whatsapp://send?text=https://webestfriends.com/friendlink/${createId}`,\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/whatsapp.png\",\n    className: \"whatsapp-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 86\n    }\n  }, \"WhatsApp Status\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"instagram\",\n    onClick: () => setOpen(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/instagram.png\",\n    className: \"instagram-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"instagram-status\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 86\n    }\n  }, \"Add to Instagram Bio\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"result-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"result\",\n    onClick: refresh,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }, \" View Results\")), (allResult === null || allResult === void 0 ? void 0 : allResult.length) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sharelink\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"challenge\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }, \"Who knows you the best:\")), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table-data sharetable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"shareth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 27\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"shareth\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 27\n    }\n  }, \"Score\"))), allResult === null || allResult === void 0 ? void 0 : allResult.map(tabledata => {\n    return /*#__PURE__*/React.createElement(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 31\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      className: \"sharetd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 33\n      }\n    }, tabledata.feedbackBy), /*#__PURE__*/React.createElement(\"td\", {\n      className: \"shareth\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }, tabledata.score)));\n  })))) : null, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 15\n    }\n  }, \" \"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(InstaModel, {\n    open: open,\n    setOpen: setOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default ShareLink;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/form/ShareLink.js"],"names":["React","useState","useRef","useEffect","Grid","Card","Popover","Typography","makeStyles","services","InstaModel","Footer","ToastsContainer","ToastsStore","ToastsContainerPosition","Alert","AlertTitle","Helmet","useStyles","theme","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","palette","text","secondary","grid","position","typography","fontSize","border","ShareLink","props","id","location","state","quizId","classes","allResult","setAllResult","open","setOpen","copied","setCopied","createId","JSON","parse","localStorage","getItem","dataId","pop","title","setTitle","categoryId","getCategory","getCreaterResult","console","log","document","categoryData","options","method","headers","result","data","textAreaRef","copyToClipboard","e","current","select","execCommand","target","focus","success","dataid","refresh","window","reload","head","TOP_LEFT","length","map","tabledata","feedbackBy","score"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useEffect } from 'react'\nimport '../style/sharelink.css'\nimport { Grid, Card, Popover, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport services from '../../services/services';\nimport InstaModel from './InstaModel';\nimport Footer from '../footer/Footer';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { Helmet } from 'react-helmet';\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  grid: {\n    position: \"relative\"\n  },\n  typography: {\n    padding: \"10px\",\n    color: \"green\",\n    fontSize: \"15px\",\n    border: \"none\"\n  },\n\n}));\n\nfunction ShareLink(props) {\n\n  const id = props.location.state.quizId\n  const classes = useStyles();\n  const [allResult, setAllResult] = useState([])\n  const [open, setOpen] = useState(false);\n  const [copied, setCopied] = useState(false);\n  const createId = JSON.parse(localStorage.getItem('createId'));\n  var dataId = createId.pop();\n  const [title, setTitle] = useState({})\n  var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n\n  useEffect(() => {\n    getCategory();\n    getCreaterResult();\n    console.log(document.title);\n  }, [1])\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n      }\n    }\n    const result = await services.getCategory(categoryData, options)\n    setTitle(result.data.data)\n  };\n\n  const textAreaRef = useRef(null);\n  function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n    ToastsStore.success(\"Copied SuccessFully\")\n  };\n\n  const getCreaterResult = async () => {\n    const dataid = {\n      quizId: dataId,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.Read\",\n      }\n    }\n    const result = await services.getCreaterResult(dataid, options)\n    setAllResult(result.data.data)\n  }\n  const refresh = () => {\n    window.location.reload();\n  }\n\n  return (\n    <>\n      {/* <Helmet\n        title={title.title}\n         meta={[ \n          { name: 'twitter:site', content: \"WeBestFriends\" },\n          { name: 'twitter:creator', content: \"WeBestFriends\" },\n          { name: 'twitter:title', content: title.title },\n          { name: 'twitter:image', content: title.image },\n          { property: 'og:title', content: title.title },\n          { property: 'og:description', content: title.title },\n          { property: 'og:image', content: title.image },\n          ]}\n        /> */}\n      {<Helmet>\n        <meta name=\"theme-color\" property=\"og:title\" content={`${document.title}`} />\n      </Helmet>}\n      <div className={classes.gridContainer}>\n        <Grid container className={classes.grid}>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div justify=\"center\" className={classes.head}>\n              <h3 className=\"title\">{title.title}</h3>\n            </div>\n            <Card className=\"form-card\">\n              <div className=\"sharelink\">\n                <h3 className=\"challenge\">Your Challenge is ready</h3>\n                <img src=\"/assets/image/friend.svg\" />\n                <h3 className=\"this-link\">Share this link with your friends</h3>\n                <input ref={textAreaRef} className=\"quizInput\" defaultValue={`http://localhost:3000/friendlink/${id}`} />\n                <br />\n              </div>\n              <div className=\"btn-wrapper\">\n                <button onClick={copyToClipboard} className=\"copy\"> Copy Link</button>\n                <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_LEFT} />\n              </div>\n              <div className=\"btn-list\">\n                <button className=\"whatsapp\">\n                  <a href={`whatsapp://send?text=https://webestfriends.com/friendlink/${createId}`} className=\"status\">\n                    <img src=\"/assets/image/whatsapp.png\" className=\"whatsapp-img\" /><span className=\"status\">WhatsApp Status</span>\n                  </a>\n                </button>\n                <button className=\"instagram\" onClick={() => setOpen(true)}>\n                  <img src=\"/assets/image/instagram.png\" className=\"instagram-img\" /><span className=\"instagram-status\">Add to Instagram Bio</span>\n                </button>\n                {/* <button className=\"sharing\">\n                                <a href=\"#\">\n                                  <img src=\"/assets/image/sharing.svg\"className=\"sharing-img\" /><span className=\"status\">Share</span>\n                                </a>\n                          </button>        */}\n              </div>\n              <div className=\"result-wrapper\">\n                <button className=\"result\" onClick={refresh}> View Results</button>\n              </div>\n              {allResult?.length ?\n                <>\n                  <div className=\"sharelink\">\n                    <h3 className=\"challenge\">Who knows you the best:</h3>\n                  </div>\n                  <Grid container justify=\"center\">\n                    <table className=\"table-data sharetable\">\n                      <thead>\n                        <tr>\n                          <th className=\"shareth\">Name</th>\n                          <th className=\"shareth\">Score</th>\n                        </tr>\n                      </thead>\n                      {\n                        allResult?.map((tabledata) => {\n                          return (\n                            <tbody>\n                              <tr>\n                                <td className=\"sharetd\">{tabledata.feedbackBy}</td>\n                                <td className=\"shareth\">{tabledata.score}</td>\n                              </tr>\n                            </tbody>\n                          )\n                        })\n                      }\n                    </table>\n                  </Grid>\n                </> : null\n              }\n              <Grid item xs> </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs>\n\n          </Grid>\n        </Grid>\n        <InstaModel open={open}\n          setOpen={setOpen}\n        />\n        <Footer />\n      </div>\n\n    </>\n  );\n}\n\nexport default ShareLink\n"]},"metadata":{},"sourceType":"module"}