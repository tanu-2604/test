{"ast":null,"code":"import _regeneratorRuntime from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useRef,useState}from'react';import{Grid,IconButton,makeStyles}from'@material-ui/core';import AdminLinks from'../management/AdminLinks';import Table from'@material-ui/core/Table';import TableBody from'@material-ui/core/TableBody';import TableCell from'@material-ui/core/TableCell';import TableContainer from'@material-ui/core/TableContainer';import TableHead from'@material-ui/core/TableHead';import TablePagination from'@material-ui/core/TablePagination';import TableRow from'@material-ui/core/TableRow';import Switch from'@material-ui/core/Switch';import{EditOutlined,FileCopyOutlined,VisibilityOutlined}from'@material-ui/icons';import{Link}from'react-router-dom';import{ToastsContainer,ToastsStore,ToastsContainerPosition}from'react-toasts';import\"../management/User.css\";import services from'../../services/services';import MetaTags from'react-meta-tags';var useStyles=makeStyles(function(theme){return{root:{width:'100%',marginTop:\"90px\"},container:{maxHeight:400},table:{background:\"#133b5c\",color:\"#fff\"},dltIcon:{color:\"#F31118\"},heading:{float:\"left\",fontSize:\"20px\",marginTop:\"15px\",marginLeft:\"10px\",fontWeight:\"700\",color:\"#133b5c\"},list:{marginTop:\"80px\"},cell:{padding:\"6px\"},icon:{padding:\"0px\"},copytext:{height:\"0rem\",overflow:\"hidden\",color:\"transparent\",background:\"transparent\",border:\"none\"}};});var columns=[{id:'adminQuizId',label:'Id',minWidth:100,align:'center'},{id:'title',label:'Title',minWidth:100,align:'center'},{id:'slug',label:'Slug',minWidth:100,align:'center'},{id:'language',label:'Language',minWidth:100,align:'center'}];export default function Quizlist(){var classes=useStyles();var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),page=_React$useState2[0],setPage=_React$useState2[1];var _React$useState3=React.useState(10),_React$useState4=_slicedToArray(_React$useState3,2),rowsPerPage=_React$useState4[0],setRowsPerPage=_React$useState4[1];var _useState=useState([]),_useState2=_slicedToArray(_useState,2),quizlist=_useState2[0],setQuizList=_useState2[1];var data=JSON.parse(localStorage.getItem('friend'));var jwt=data['jwt'];var handleChangePage=function handleChangePage(event,newPage){setPage(newPage);};var handleChangeRowsPerPage=function handleChangeRowsPerPage(event){setRowsPerPage(+event.target.value);setPage(0);};useEffect(function(){getAllAdminQuiz();},[]);var getAllAdminQuiz=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var options,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:options={method:'Get',headers:{\"Apiuserid\":\"49507884\",\"Scope\":\"In.QuizApp.READ\",\"Authorization\":\"quizApp-oauthtoken \".concat(jwt)}};_context.next=3;return services.getAllAdminQuiz(options);case 3:result=_context.sent;setQuizList(result.data.data);case 5:case\"end\":return _context.stop();}}},_callee);}));return function getAllAdminQuiz(){return _ref.apply(this,arguments);};}();var checkedStatus=function checkedStatus(id){return/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var quizId,data,options,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:quizId=id;data={quizId:quizId};options={method:'POST',headers:{\"Apiuserid\":\"49507884\",\"Scope\":\"In.QuizApp.UPDATE\",\"Authorization\":\"quizApp-oauthtoken \".concat(jwt)}};_context2.next=5;return services.updateQuizStatus(data,options);case 5:result=_context2.sent;getAllAdminQuiz();case 7:case\"end\":return _context2.stop();}}},_callee2);}));};function copyToClipboard(text){var dummy=document.createElement(\"textarea\");document.body.appendChild(dummy);dummy.value=text;dummy.select();document.execCommand(\"copy\");document.body.removeChild(dummy);ToastsStore.success(\"Copied SuccessFully\");};return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(AdminLinks,null),/*#__PURE__*/React.createElement(Grid,{container:true,justify:\"center\",className:classes.list},/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:6,md:6,lg:10},/*#__PURE__*/React.createElement(TableContainer,{className:classes.container},/*#__PURE__*/React.createElement(Table,{stickyHeader:true},/*#__PURE__*/React.createElement(TableHead,null,/*#__PURE__*/React.createElement(TableRow,null,columns.map(function(column){return/*#__PURE__*/React.createElement(TableCell,{className:classes.table,key:column.id,align:column.align,style:{minWidth:column.minWidth}},column.label);}),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.table},\"Active\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.table},\"View\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.table},\"Result\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.table},\"Edit\"),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.table},\"Url\"))),/*#__PURE__*/React.createElement(TableBody,null,quizlist.slice(page*rowsPerPage,page*rowsPerPage+rowsPerPage).map(function(row){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableRow,{hover:true,role:\"checkbox\",tabIndex:-1,key:quizlist.adminQuizId},columns.map(function(column){var value=row[column.id];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(TableCell,{key:value,align:column.align},column.format&&typeof value==='number'?column.format(value):value));}),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.cell},row.status===\"active\"?/*#__PURE__*/React.createElement(Switch,{checked:true,onChange:checkedStatus(row.adminQuizId),name:\"checkedA\",color:\"primary\",id:row.adminQuizId,inputProps:{'aria-label':'primary checkbox'}}):/*#__PURE__*/React.createElement(Switch,{checked:false,onChange:checkedStatus(row.adminQuizId),name:\"checkedA\",color:\"primary\",id:row.adminQuizId,inputProps:{'aria-label':'primary checkbox'}})),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.cell},/*#__PURE__*/React.createElement(Link,{to:\"/view/\".concat(row.slug)},/*#__PURE__*/React.createElement(IconButton,{className:classes.icon},/*#__PURE__*/React.createElement(VisibilityOutlined,null)))),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.cell},/*#__PURE__*/React.createElement(Link,{to:\"/result/\".concat(row.adminQuizId)},/*#__PURE__*/React.createElement(\"img\",{src:\"/assets/image/trofy.jpg\",width:\"30\"}))),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.cell},/*#__PURE__*/React.createElement(IconButton,{className:classes.icon},/*#__PURE__*/React.createElement(Link,{to:\"/editQuiz/\".concat(row.slug)},/*#__PURE__*/React.createElement(EditOutlined,null)))),/*#__PURE__*/React.createElement(TableCell,{align:\"center\",className:classes.cell},/*#__PURE__*/React.createElement(IconButton,{className:classes.icon},/*#__PURE__*/React.createElement(FileCopyOutlined,{onClick:function onClick(){return copyToClipboard(\"https://webestfriends.com/quizform/\".concat(row.slug));}}),/*#__PURE__*/React.createElement(ToastsContainer,{store:ToastsStore,position:ToastsContainerPosition.TOP_CENTER})))));})))),/*#__PURE__*/React.createElement(TablePagination,{rowsPerPageOptions:[10,25,100],component:\"div\",count:quizlist.length,rowsPerPage:rowsPerPage,page:page,onChangePage:handleChangePage,onChangeRowsPerPage:handleChangeRowsPerPage}))));}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/Quizlist.js"],"names":["React","useEffect","useRef","useState","Grid","IconButton","makeStyles","AdminLinks","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Switch","EditOutlined","FileCopyOutlined","VisibilityOutlined","Link","ToastsContainer","ToastsStore","ToastsContainerPosition","services","MetaTags","useStyles","theme","root","width","marginTop","container","maxHeight","table","background","color","dltIcon","heading","float","fontSize","marginLeft","fontWeight","list","cell","padding","icon","copytext","height","overflow","border","columns","id","label","minWidth","align","Quizlist","classes","page","setPage","rowsPerPage","setRowsPerPage","quizlist","setQuizList","data","JSON","parse","localStorage","getItem","jwt","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","getAllAdminQuiz","options","method","headers","result","checkedStatus","quizId","updateQuizStatus","copyToClipboard","text","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","success","map","column","slice","row","adminQuizId","format","status","slug","TOP_CENTER","length"],"mappings":"mbAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,MAA3B,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,OAASC,IAAT,CAAeC,UAAf,CAA2BC,UAA3B,KAA6C,mBAA7C,CACA,MAAOC,CAAAA,UAAP,KAAuB,0BAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,yBAAlB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kCAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,6BAAtB,CACA,MAAOC,CAAAA,eAAP,KAA4B,mCAA5B,CACA,MAAOC,CAAAA,QAAP,KAAqB,4BAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,0BAAnB,CACA,OAAQC,YAAR,CAAsBC,gBAAtB,CAAwCC,kBAAxC,KAAkE,oBAAlE,CACA,OAASC,IAAT,KAAqB,kBAArB,CACA,OAASC,eAAT,CAA0BC,WAA1B,CAAuCC,uBAAvC,KAAsE,cAAtE,CACA,MAAO,wBAAP,CACA,MAAOC,CAAAA,QAAP,KAAqB,yBAArB,CACA,MAAOC,CAAAA,QAAP,KAAqB,iBAArB,CAEA,GAAMC,CAAAA,SAAS,CAAGnB,UAAU,CAAC,SAACoB,KAAD,QAAY,CACvCC,IAAI,CAAE,CACJC,KAAK,CAAE,MADH,CAEJC,SAAS,CAAE,MAFP,CADiC,CAKvCC,SAAS,CAAE,CACTC,SAAS,CAAE,GADF,CAL4B,CAQvCC,KAAK,CAAE,CACLC,UAAU,CAAE,SADP,CAELC,KAAK,CAAE,MAFF,CARgC,CAYvCC,OAAO,CAAE,CACPD,KAAK,CAAE,SADA,CAZ8B,CAevCE,OAAO,CAAE,CACPC,KAAK,CAAE,MADA,CAEPC,QAAQ,CAAE,MAFH,CAGPT,SAAS,CAAE,MAHJ,CAIPU,UAAU,CAAE,MAJL,CAKPC,UAAU,CAAE,KALL,CAMPN,KAAK,CAAE,SANA,CAf8B,CAuBvCO,IAAI,CAAE,CACJZ,SAAS,CAAE,MADP,CAvBiC,CA0BvCa,IAAI,CAAE,CACJC,OAAO,CAAE,KADL,CA1BiC,CA6BvCC,IAAI,CAAE,CACJD,OAAO,CAAE,KADL,CA7BiC,CAgCvCE,QAAQ,CAAE,CACRC,MAAM,CAAE,MADA,CAERC,QAAQ,CAAE,QAFF,CAGRb,KAAK,CAAE,aAHC,CAIRD,UAAU,CAAE,aAJJ,CAKRe,MAAM,CAAE,MALA,CAhC6B,CAAZ,EAAD,CAA5B,CAwCA,GAAMC,CAAAA,OAAO,CAAG,CACd,CAAEC,EAAE,CAAE,aAAN,CAAqBC,KAAK,CAAE,IAA5B,CAAkCC,QAAQ,CAAE,GAA5C,CAAiDC,KAAK,CAAE,QAAxD,CADc,CAEd,CAAEH,EAAE,CAAE,OAAN,CAAeC,KAAK,CAAE,OAAtB,CAA+BC,QAAQ,CAAE,GAAzC,CAA8CC,KAAK,CAAE,QAArD,CAFc,CAGd,CACEH,EAAE,CAAE,MADN,CAEEC,KAAK,CAAE,MAFT,CAGEC,QAAQ,CAAE,GAHZ,CAIEC,KAAK,CAAE,QAJT,CAHc,CAUd,CAAEH,EAAE,CAAE,UAAN,CAAkBC,KAAK,CAAE,UAAzB,CAAqCC,QAAQ,CAAE,GAA/C,CAAoDC,KAAK,CAAE,QAA3D,CAVc,CAAhB,CAcA,cAAe,SAASC,CAAAA,QAAT,EAAoB,CACjC,GAAMC,CAAAA,OAAO,CAAG9B,SAAS,EAAzB,CADiC,oBAGTzB,KAAK,CAACG,QAAN,CAAe,CAAf,CAHS,oDAG1BqD,IAH0B,qBAGpBC,OAHoB,0CAIKzD,KAAK,CAACG,QAAN,CAAe,EAAf,CAJL,qDAI1BuD,WAJ0B,qBAIbC,cAJa,mCAKDxD,QAAQ,CAAC,EAAD,CALP,wCAK1ByD,QAL0B,eAKhBC,WALgB,eAMjC,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,CAAb,CACA,GAAMC,CAAAA,GAAG,CAAGL,IAAI,CAAC,KAAD,CAAhB,CACA,GAAMM,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAQC,OAAR,CAAoB,CAC3Cb,OAAO,CAACa,OAAD,CAAP,CACD,CAFD,CAIA,GAAMC,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,CAACF,KAAD,CAAW,CACzCV,cAAc,CAAC,CAACU,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd,CACAhB,OAAO,CAAC,CAAD,CAAP,CACD,CAHD,CAKAxD,SAAS,CAAC,UAAM,CACdyE,eAAe,GAChB,CAFQ,CAEN,EAFM,CAAT,CAGA,GAAMA,CAAAA,eAAe,0FAAG,sJAChBC,OADgB,CACN,CACdC,MAAM,CAAE,KADM,CAEdC,OAAO,CAAE,CACP,YAAa,UADN,CAEP,QAAS,iBAFF,CAGP,6CAAuCV,GAAvC,CAHO,CAFK,CADM,uBASD5C,CAAAA,QAAQ,CAACmD,eAAT,CAAyBC,OAAzB,CATC,QAShBG,MATgB,eAUtBjB,WAAW,CAACiB,MAAM,CAAChB,IAAP,CAAYA,IAAb,CAAX,CAVsB,sDAAH,kBAAfY,CAAAA,eAAe,0CAArB,CAaA,GAAMK,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAAC7B,EAAD,6EAAQ,uKACxB8B,MADwB,CACf9B,EADe,CAGxBY,IAHwB,CAGjB,CACTkB,MAAM,CAAEA,MADC,CAHiB,CAMtBL,OANsB,CAMZ,CACdC,MAAM,CAAE,MADM,CAEdC,OAAO,CAAE,CACP,YAAa,UADN,CAEP,QAAS,mBAFF,CAGP,6CAAuCV,GAAvC,CAHO,CAFK,CANY,wBAcP5C,CAAAA,QAAQ,CAAC0D,gBAAT,CAA0BnB,IAA1B,CAAgCa,OAAhC,CAdO,QActBG,MAdsB,gBAe5BJ,eAAe,GAfa,wDAAR,IAAtB,CAiBA,QAASQ,CAAAA,eAAT,CAAyBC,IAAzB,CAA+B,CAC7B,GAAIC,CAAAA,KAAK,CAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAZ,CACAD,QAAQ,CAACE,IAAT,CAAcC,WAAd,CAA0BJ,KAA1B,EACAA,KAAK,CAACX,KAAN,CAAcU,IAAd,CACAC,KAAK,CAACK,MAAN,GACAJ,QAAQ,CAACK,WAAT,CAAqB,MAArB,EACAL,QAAQ,CAACE,IAAT,CAAcI,WAAd,CAA0BP,KAA1B,EACA/D,WAAW,CAACuE,OAAZ,CAAoB,qBAApB,EACD,EACD,mBACE,qDACE,oBAAC,UAAD,MADF,cAEE,oBAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,CAAC,QAAxB,CAAiC,SAAS,CAAErC,OAAO,CAACd,IAApD,eACE,oBAAC,IAAD,EAAM,IAAI,KAAV,CAAW,EAAE,CAAE,EAAf,CAAmB,EAAE,CAAE,CAAvB,CAA0B,EAAE,CAAE,CAA9B,CAAiC,EAAE,CAAE,EAArC,eAEE,oBAAC,cAAD,EAAgB,SAAS,CAAEc,OAAO,CAACzB,SAAnC,eACE,oBAAC,KAAD,EAAO,YAAY,KAAnB,eACE,oBAAC,SAAD,mBACE,oBAAC,QAAD,MACGmB,OAAO,CAAC4C,GAAR,CAAY,SAACC,MAAD,qBACX,oBAAC,SAAD,EAAW,SAAS,CAAEvC,OAAO,CAACvB,KAA9B,CACE,GAAG,CAAE8D,MAAM,CAAC5C,EADd,CAEE,KAAK,CAAE4C,MAAM,CAACzC,KAFhB,CAGE,KAAK,CAAE,CAAED,QAAQ,CAAE0C,MAAM,CAAC1C,QAAnB,CAHT,EAKG0C,MAAM,CAAC3C,KALV,CADW,EAAZ,CADH,cAUE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAEI,OAAO,CAACvB,KAA7C,WAVF,cAWE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAEuB,OAAO,CAACvB,KAA7C,SAXF,cAYE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAEuB,OAAO,CAACvB,KAA7C,WAZF,cAaE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAEuB,OAAO,CAACvB,KAA7C,SAbF,cAcE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAEuB,OAAO,CAACvB,KAA7C,QAdF,CADF,CADF,cAmBE,oBAAC,SAAD,MAEG4B,QAAQ,CAACmC,KAAT,CAAevC,IAAI,CAAGE,WAAtB,CAAmCF,IAAI,CAAGE,WAAP,CAAqBA,WAAxD,EAAqEmC,GAArE,CAAyE,SAACG,GAAD,CAAS,CACjF,mBACE,qDACE,oBAAC,QAAD,EACE,KAAK,KADP,CAEE,IAAI,CAAC,UAFP,CAGE,QAAQ,CAAE,CAAC,CAHb,CAIE,GAAG,CAAEpC,QAAQ,CAACqC,WAJhB,EAKGhD,OAAO,CAAC4C,GAAR,CAAY,SAACC,MAAD,CAAY,CACvB,GAAMrB,CAAAA,KAAK,CAAGuB,GAAG,CAACF,MAAM,CAAC5C,EAAR,CAAjB,CACA,mBACE,qDACE,oBAAC,SAAD,EACE,GAAG,CAAEuB,KADP,CAEE,KAAK,CAAEqB,MAAM,CAACzC,KAFhB,EAIGyC,MAAM,CAACI,MAAP,EAAiB,MAAOzB,CAAAA,KAAP,GAAiB,QAAlC,CAA6CqB,MAAM,CAACI,MAAP,CAAczB,KAAd,CAA7C,CAAoEA,KAJvE,CADF,CADF,CAWD,CAbA,CALH,cAmBE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAElB,OAAO,CAACb,IAA7C,EAEIsD,GAAG,CAACG,MAAJ,GAAe,QAAf,cACE,oBAAC,MAAD,EACE,OAAO,CAAE,IADX,CAEE,QAAQ,CAAEpB,aAAa,CAACiB,GAAG,CAACC,WAAL,CAFzB,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAC,SAJR,CAKE,EAAE,CAAED,GAAG,CAACC,WALV,CAME,UAAU,CAAE,CAAE,aAAc,kBAAhB,CANd,EADF,cASE,oBAAC,MAAD,EACE,OAAO,CAAE,KADX,CAEE,QAAQ,CAAElB,aAAa,CAACiB,GAAG,CAACC,WAAL,CAFzB,CAGE,IAAI,CAAC,UAHP,CAIE,KAAK,CAAC,SAJR,CAKE,EAAE,CAAED,GAAG,CAACC,WALV,CAME,UAAU,CAAE,CAAE,aAAc,kBAAhB,CANd,EAXN,CAnBF,cAwCE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAE1C,OAAO,CAACb,IAA7C,eACE,oBAAC,IAAD,EAAM,EAAE,iBAAWsD,GAAG,CAACI,IAAf,CAAR,eACE,oBAAC,UAAD,EAAY,SAAS,CAAE7C,OAAO,CAACX,IAA/B,eACE,oBAAC,kBAAD,MADF,CADF,CADF,CAxCF,cA+CE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAEW,OAAO,CAACb,IAA7C,eACE,oBAAC,IAAD,EAAM,EAAE,mBAAasD,GAAG,CAACC,WAAjB,CAAR,eACE,2BAAK,GAAG,CAAC,yBAAT,CAAmC,KAAK,CAAC,IAAzC,EADF,CADF,CA/CF,cAoDE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAE1C,OAAO,CAACb,IAA7C,eACE,oBAAC,UAAD,EAAY,SAAS,CAAEa,OAAO,CAACX,IAA/B,eACE,oBAAC,IAAD,EAAM,EAAE,qBAAeoD,GAAG,CAACI,IAAnB,CAAR,eACE,oBAAC,YAAD,MADF,CADF,CADF,CApDF,cA4DE,oBAAC,SAAD,EAAW,KAAK,CAAC,QAAjB,CAA0B,SAAS,CAAE7C,OAAO,CAACb,IAA7C,eACE,oBAAC,UAAD,EAAY,SAAS,CAAEa,OAAO,CAACX,IAA/B,eACE,oBAAC,gBAAD,EAAkB,OAAO,CAAE,yBAAMsC,CAAAA,eAAe,8CAAuCc,GAAG,CAACI,IAA3C,EAArB,EAA3B,EADF,cAEE,oBAAC,eAAD,EAAiB,KAAK,CAAE/E,WAAxB,CAAqC,QAAQ,CAAEC,uBAAuB,CAAC+E,UAAvE,EAFF,CADF,CA5DF,CADF,CADF,CA0ED,CA3EA,CAFH,CAnBF,CADF,CAFF,cAwGE,oBAAC,eAAD,EACE,kBAAkB,CAAE,CAAC,EAAD,CAAK,EAAL,CAAS,GAAT,CADtB,CAEE,SAAS,CAAC,KAFZ,CAGE,KAAK,CAAEzC,QAAQ,CAAC0C,MAHlB,CAIE,WAAW,CAAE5C,WAJf,CAKE,IAAI,CAAEF,IALR,CAME,YAAY,CAAEY,gBANhB,CAOE,mBAAmB,CAAEG,uBAPvB,EAxGF,CADF,CAFF,CADF,CA0HD","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport {EditOutlined, FileCopyOutlined, VisibilityOutlined } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport \"../management/User.css\"\nimport services from '../../services/services';\nimport MetaTags from 'react-meta-tags';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400,\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n  heading: {\n    float: \"left\",\n    fontSize: \"20px\",\n    marginTop: \"15px\",\n    marginLeft: \"10px\",\n    fontWeight: \"700\",\n    color: \"#133b5c\"\n  },\n  list: {\n    marginTop: \"80px\"\n  },\n  cell: {\n    padding: \"6px\"\n  },\n  icon: {\n    padding: \"0px\"\n  },\n  copytext: {\n    height: \"0rem\",\n    overflow: \"hidden\",\n    color: \"transparent\",\n    background: \"transparent\",\n    border: \"none\"\n  }\n}));\nconst columns = [\n  { id: 'adminQuizId', label: 'Id', minWidth: 100, align: 'center' },\n  { id: 'title', label: 'Title', minWidth: 100, align: 'center' },\n  {\n    id: 'slug',\n    label: 'Slug',\n    minWidth: 100,\n    align: 'center'\n\n  },\n  { id: 'language', label: 'Language', minWidth: 100, align: 'center' }\n\n];\n\nexport default function Quizlist() {\n  const classes = useStyles()\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [quizlist, setQuizList] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    getAllAdminQuiz();\n  }, [])\n  const getAllAdminQuiz = async () => {\n    const options = {\n      method: 'Get',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getAllAdminQuiz(options)\n    setQuizList(result.data.data)\n  };\n\n  const checkedStatus = (id) => async () => {\n    var quizId = id;\n\n    var data = {\n      quizId: quizId,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.UPDATE\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.updateQuizStatus(data, options)\n    getAllAdminQuiz();\n  }\n  function copyToClipboard(text) {\n    var dummy = document.createElement(\"textarea\");\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n    ToastsStore.success(\"Copied SuccessFully\")\n  };\n  return (\n    <>\n      <AdminLinks />\n      <Grid container justify=\"center\" className={classes.list}>\n        <Grid item xs={11} sm={6} md={6} lg={10}>\n\n          <TableContainer className={classes.container}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell className={classes.table}\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                  <TableCell align=\"center\" className={classes.table}>Active</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>View</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>Result</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>Edit</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>Url</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n\n                {quizlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  return (\n                    <>\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={quizlist.adminQuizId}>\n                        {columns.map((column) => {\n                          const value = row[column.id];\n                          return (\n                            <>\n                              <TableCell\n                                key={value}\n                                align={column.align}\n                              >\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                              </TableCell>\n                            </>\n                          );\n\n                        })}\n                        <TableCell align=\"center\" className={classes.cell}>\n                          {\n                            row.status === \"active\" ?\n                              <Switch\n                                checked={true}\n                                onChange={checkedStatus(row.adminQuizId)}\n                                name=\"checkedA\"\n                                color=\"primary\"\n                                id={row.adminQuizId}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                              /> :\n                              <Switch\n                                checked={false}\n                                onChange={checkedStatus(row.adminQuizId)}\n                                name=\"checkedA\"\n                                color=\"primary\"\n                                id={row.adminQuizId}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                              />\n                          }\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <Link to={`/view/${row.slug}`}>\n                            <IconButton className={classes.icon} >\n                              <VisibilityOutlined />\n                            </IconButton>\n                          </Link>\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <Link to={`/result/${row.adminQuizId}`}>\n                            <img src=\"/assets/image/trofy.jpg\" width=\"30\" />\n                          </Link>\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <IconButton className={classes.icon} >\n                            <Link to={`/editQuiz/${row.slug}`}>\n                              <EditOutlined />\n                            </Link>\n                          </IconButton>\n                        </TableCell>\n\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <IconButton className={classes.icon} >\n                            <FileCopyOutlined onClick={() => copyToClipboard(`https://webestfriends.com/quizform/${row.slug}`)} />\n                            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} />\n                          </IconButton>\n                        </TableCell>\n\n                      </TableRow>\n\n                    </>\n\n                  );\n                })}\n\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={quizlist.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Grid>\n      </Grid>\n    </>\n\n  )\n}\n"]},"metadata":{},"sourceType":"module"}