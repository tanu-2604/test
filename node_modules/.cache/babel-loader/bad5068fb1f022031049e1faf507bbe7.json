{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/management/UserTable.js\";\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport services from '../../services/services';\nimport AdminForm from './AdminForm';\nimport PopUp from '../../control/PopUp';\nimport { Grid, Typography } from '@material-ui/core';\nconst columns = [{\n  id: 'firstName',\n  label: 'First Name',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'lastName',\n  label: 'Last Name',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'username',\n  label: 'User Name',\n  minWidth: 100,\n  align: 'center'\n}];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n  heading: {\n    float: \"left\",\n    fontSize: \"20px\",\n    marginTop: \"15px\",\n    marginLeft: \"10px\",\n    fontWeight: \"700\",\n    color: \"#133b5c\"\n  }\n}));\nexport default function UserTable({\n  list,\n  updateUsers\n}) {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [openPopup, setOpenPopup] = useState(false);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n\n  const checkedStatus = id => async () => {\n    var userId = id;\n    var data = {\n      userId: userId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.createStatus(data, options);\n    updateUsers();\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"h4\",\n    className: classes.heading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 25\n    }\n  }, \"User Details\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"wrapper-inner-tab-backgrounds-second\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sim-button button13\",\n    onClick: () => setOpenPopup(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 98\n    }\n  }, \"Add User\")))), /*#__PURE__*/React.createElement(PopUp, {\n    openPopup: openPopup,\n    setOpenPopup: setOpenPopup,\n    maxWidth: \"sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(AdminForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table,\n    key: column.id.toString(),\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, column.label)), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 15\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: list.userId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n        key: value.toString(),\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value));\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, row.status === \"active\" ? /*#__PURE__*/React.createElement(Switch, {\n      checked: true,\n      onChange: checkedStatus(row.userId),\n      name: \"checkedA\",\n      color: \"primary\",\n      id: row.userId.toString(),\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(Switch, {\n      checked: false,\n      onChange: checkedStatus(row.userId),\n      name: \"checkedA\",\n      color: \"primary\",\n      id: row.userId.toString(),\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    })));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: list.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/management/UserTable.js"],"names":["React","useState","makeStyles","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Switch","services","AdminForm","PopUp","Grid","Typography","columns","id","label","minWidth","align","useStyles","theme","root","width","marginTop","container","maxHeight","table","background","color","dltIcon","heading","float","fontSize","marginLeft","fontWeight","UserTable","list","updateUsers","classes","page","setPage","rowsPerPage","setRowsPerPage","openPopup","setOpenPopup","data","JSON","parse","localStorage","getItem","jwt","checkedStatus","userId","options","method","headers","result","createStatus","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","map","column","toString","slice","row","format","status","length"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport services from '../../services/services';\nimport AdminForm from './AdminForm';\nimport PopUp from '../../control/PopUp'\nimport { Grid, Typography } from '@material-ui/core';\n\nconst columns = [\n  { id: 'firstName', label: 'First Name', minWidth: 100, align: 'center' },\n  { id: 'lastName', label: 'Last Name', minWidth: 100, align: 'center' },\n  {\n    id: 'username',\n    label: 'User Name',\n    minWidth: 100,\n    align: 'center'\n\n  },\n];\n\n\nconst useStyles = makeStyles((theme)=>({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400,\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n  heading:{\n    float:\"left\",\n    fontSize:\"20px\",\n    marginTop:\"15px\",\n    marginLeft:\"10px\",\n    fontWeight:\"700\",\n    color:\"#133b5c\"\n}, \n}));\n\nexport default function UserTable({ list, updateUsers }) {\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [openPopup,setOpenPopup] = useState(false);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n\n  const checkedStatus = (id) => async () => {\n    var userId = id;\n    var data = {\n      userId: userId,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.createStatus(data, options)\n    updateUsers();\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Grid container justify=\"center\" className={classes.list}>\n        <Grid item xs={11} sm={6} md={6} lg={10}>\n    <Paper className={classes.root}>\n      <div className={classes.root}>\n                        <Typography variant=\"h4\" className={classes.heading}>User Details</Typography> \n                    <div className=\"wrapper-inner-tab-backgrounds-second\">\n                        <div className=\"sim-button button13\" onClick={ ()=> setOpenPopup(true)} ><span>Add User</span></div>\n                    </div>    \n                </div>  \n                <PopUp\n                    openPopup={openPopup}\n                    setOpenPopup={setOpenPopup}\n                    maxWidth=\"sm\"\n                    >\n                        <AdminForm/>\n                </PopUp>\n     \n      <TableContainer className={classes.container}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell className={classes.table}\n                  key={column.id.toString()}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n              <TableCell className={classes.table}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow \n                hover \n                role=\"checkbox\"\n                 tabIndex={-1}\n                 key={list.userId}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <>\n                        <TableCell \n                        key={value.toString()}\n                        align={column.align}\n                         >\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\n                        </TableCell>\n                      </>\n                    );\n\n                  })}\n                  <TableCell>\n                    {\n                      row.status === \"active\" ?\n                        <Switch\n                          checked={true}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId.toString()}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        /> :\n                        <Switch\n                          checked={false}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId.toString()}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                    }\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={list.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n       \n           \n    </Paper>\n    </Grid>\n    </Grid>\n    \n  );\n}"]},"metadata":{},"sourceType":"module"}