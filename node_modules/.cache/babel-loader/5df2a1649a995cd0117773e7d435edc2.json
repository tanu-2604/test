{"ast":null,"code":"import _toArray from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";import _toConsumableArray from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/home/tanu/Workspace/quiz12/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Grid,Card,CardContent}from'@material-ui/core';import{makeStyles,withStyles}from'@material-ui/core/styles';import'../style/questionlist.css';import LinearProgress from'@material-ui/core/LinearProgress';import services from'../../services/services';import{Redirect}from'react-router-dom';import Footer from'../footer/Footer';var BorderLinearProgress=withStyles(function(theme){return{root:{height:10,borderRadius:5,width:\"100%\"},colorPrimary:{backgroundColor:theme.palette.grey[theme.palette.type==='light'?200:700]},bar:{borderRadius:5,backgroundColor:'#FFDD52'}};})(LinearProgress);var useStyles=makeStyles(function(theme){return{gridContainer:{paddingLeft:\"20px\",paddingRight:\"20px\",background:\"#7555D9\",minHeight:\"100vh\"},paper:{padding:theme.spacing(2),textAlign:'center',color:theme.palette.text.secondary},pro:{textAlign:\"center\"}};});function QuestionList(_ref){var _tutorialSteps$active2,_tutorialSteps$active3,_tutorialSteps$active4;var questionlist=_ref.questionlist;var classes=useStyles();var _useState=useState({}),_useState2=_slicedToArray(_useState,2),title=_useState2[0],setTitle=_useState2[1];var categoryId=JSON.parse(localStorage.getItem(\"categoryId\"));useEffect(function(){getCategory();},[1]);var getCategory=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var categoryData,options,result;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:categoryData={categoryId:categoryId};options={method:'POST',headers:{\"Apiuserid\":\"49507884\",\"Scope\":\"In.QuizApp.READ\"}};_context.next=4;return services.getCategory(categoryData,options);case 4:result=_context.sent;console.log(result);setTitle(result.data.data);case 7:case\"end\":return _context.stop();}}},_callee);}));return function getCategory(){return _ref2.apply(this,arguments);};}();var tutorialSteps=[{label:questionlist===null||questionlist===void 0?void 0:questionlist.question,options:questionlist===null||questionlist===void 0?void 0:questionlist.optionsArray}];if(questionlist===null||questionlist===void 0?void 0:questionlist.length){tutorialSteps=questionlist;}var data=JSON.parse(localStorage.getItem('userInfo'));var createdBy=data['name'];var _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),activeStep=_React$useState2[0],setActiveStep=_React$useState2[1];var _React$useState3=React.useState([]),_React$useState4=_slicedToArray(_React$useState3,2),answerList=_React$useState4[0],setAnswerList=_React$useState4[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),createQuiz=_useState4[0],setCreateQuiz=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),result=_useState6[0],setResult=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),progress=_useState8[0],setProgress=_useState8[1];var _useState9=useState(1),_useState10=_slicedToArray(_useState9,2),count=_useState10[0],setCount=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),clickedAns=_useState12[0],setClickedAns=_useState12[1];var maxSteps=tutorialSteps.length;function showProgress(index){var increment=Math.ceil(activeStep/maxSteps*100);setProgress(increment);}var handleNext=function handleNext(id,label){var _tutorialSteps$active;var qusId=(_tutorialSteps$active=tutorialSteps[activeStep])===null||_tutorialSteps$active===void 0?void 0:_tutorialSteps$active.qusId;var answer=label;var answerId=id;setClickedAns(id);if(14===activeStep){setAnswerList([].concat(_toConsumableArray(answerList),[{qusId:qusId,answer:answer,answerId:answerId}]));setTimeout(function(){handleSubmit([].concat(_toConsumableArray(answerList),[{qusId:qusId,answer:answer,answerId:answerId}]));},500);}else{setAnswerList([].concat(_toConsumableArray(answerList),[{qusId:qusId,answer:answer,answerId:answerId}]));setTimeout(function(){setActiveStep(function(prevActiveStep){return prevActiveStep+1;});setCount(count+1);},500);// debugger\n}showProgress(tutorialSteps[activeStep].qusId);};var handleSkip=function handleSkip(){setCount(count+1);setActiveStep(function(prevActiveStep){return prevActiveStep+1;});};var handleSubmit=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref3){var _ref5,answerList,list,options,result;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_ref5=_toArray(_ref3),answerList=_ref5.slice(0);list={categoryId:categoryId,createdBy:createdBy,quizQuestions:answerList};options={method:'POST',headers:{\"Apiuserid\":\"49507884\",\"Scope\":\"In.QuizApp.INSERT\"}};_context2.next=5;return services.createQuiz(list,options);case 5:result=_context2.sent;setCreateQuiz(result.data.data);setResult(true);if(result.data.code===200){setResult(true);}case 9:case\"end\":return _context2.stop();}}},_callee2);}));return function handleSubmit(_x){return _ref4.apply(this,arguments);};}();if(result){localStorage.setItem(\"createId\",JSON.stringify(createQuiz));return/*#__PURE__*/React.createElement(Redirect,{to:{pathname:\"/sharelink\",state:{quizId:createQuiz}},push:true});}return/*#__PURE__*/React.createElement(\"div\",{className:classes.gridContainer},/*#__PURE__*/React.createElement(Grid,{container:true},/*#__PURE__*/React.createElement(Grid,{item:true,xs:true}),/*#__PURE__*/React.createElement(Grid,{item:true,xs:11,sm:6,md:6,lg:4},/*#__PURE__*/React.createElement(\"div\",{justify:\"center\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"text1\"},title.title)),/*#__PURE__*/React.createElement(\"div\",{justify:\"center\"},/*#__PURE__*/React.createElement(\"h4\",{className:\"question\"},\"Question \",/*#__PURE__*/React.createElement(\"span\",null,count,\"/15\"))),/*#__PURE__*/React.createElement(\"div\",{justify:\"center\"},/*#__PURE__*/React.createElement(BorderLinearProgress,{variant:\"determinate\",value:progress})),/*#__PURE__*/React.createElement(Card,{className:\"questioncard\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"questionname\"},count,\": \",(_tutorialSteps$active2=tutorialSteps[activeStep])===null||_tutorialSteps$active2===void 0?void 0:_tutorialSteps$active2.question),/*#__PURE__*/React.createElement(\"div\",{className:\"optioncard\"},(_tutorialSteps$active3=tutorialSteps[activeStep])===null||_tutorialSteps$active3===void 0?void 0:(_tutorialSteps$active4=_tutorialSteps$active3.optionsArray)===null||_tutorialSteps$active4===void 0?void 0:_tutorialSteps$active4.map(function(options,index){return/*#__PURE__*/React.createElement(Grid,{container:true,className:clickedAns===options.optionId?'clickoption':'nonclickoption',onClick:function onClick(){handleNext(options.optionId,options.optionLabel);},key:index,id:\"cardbox\"},/*#__PURE__*/React.createElement(Grid,{item:true,xs:4,sm:4,md:4,lg:4},options.optionImg.length?/*#__PURE__*/React.createElement(\"img\",{className:\"optionImg\",src:options.optionImg}):/*#__PURE__*/React.createElement(\"span\",null)),/*#__PURE__*/React.createElement(Grid,{item:true,xs:8,sm:8,md:8,lg:8,className:\"optionbg\"},/*#__PURE__*/React.createElement(CardContent,{className:\"cardcontent\"},/*#__PURE__*/React.createElement(\"h3\",{className:\"optioncontent\",id:\"cardText\"},options.optionLabel))));})),/*#__PURE__*/React.createElement(\"div\",{className:\"start-wrapper\"},/*#__PURE__*/React.createElement(\"button\",{className:\"skip\",onClick:function onClick(){maxSteps-1!=tutorialSteps[activeStep].question.length?handleSkip():handleSubmit();}},\"Skip the Question\")))),/*#__PURE__*/React.createElement(Grid,{item:true,xs:true})),/*#__PURE__*/React.createElement(Footer,null));}export default QuestionList;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/question/QuestionList.js"],"names":["React","useState","useEffect","Grid","Card","CardContent","makeStyles","withStyles","LinearProgress","services","Redirect","Footer","BorderLinearProgress","theme","root","height","borderRadius","width","colorPrimary","backgroundColor","palette","grey","type","bar","useStyles","gridContainer","paddingLeft","paddingRight","background","minHeight","paper","padding","spacing","textAlign","color","text","secondary","pro","QuestionList","questionlist","classes","title","setTitle","categoryId","JSON","parse","localStorage","getItem","getCategory","categoryData","options","method","headers","result","console","log","data","tutorialSteps","label","question","optionsArray","length","createdBy","activeStep","setActiveStep","answerList","setAnswerList","createQuiz","setCreateQuiz","setResult","progress","setProgress","count","setCount","clickedAns","setClickedAns","maxSteps","showProgress","index","increment","Math","ceil","handleNext","id","qusId","answer","answerId","setTimeout","handleSubmit","prevActiveStep","handleSkip","list","quizQuestions","code","setItem","stringify","pathname","state","quizId","map","optionId","optionLabel","optionImg"],"mappings":"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","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\n\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\",\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52',\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n\n}));\nfunction QuestionList({ questionlist }) {\n\n  const classes = useStyles();\n  const [title,setTitle]=useState({})\n  var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n\n  useEffect(() => {\n    getCategory();\n}, [1])\n\nconst  getCategory = async () => {\n const categoryData={\n     categoryId:categoryId\n }\n\n const options = {\n     method: 'POST',\n     headers: {\n         \"Apiuserid\": \"49507884\",\n         \"Scope\": \"In.QuizApp.READ\",   \n     }\n }\n const result = await services. getCategory(categoryData,options)\n console.log(result)\n setTitle(result.data.data)\n};\n  let tutorialSteps = [\n    {\n      label: questionlist?.question,\n      options: questionlist?.optionsArray,\n    },\n  ];\n\n\n  if (questionlist?.length) {\n    tutorialSteps = questionlist;\n  }\n  const data = JSON.parse(localStorage.getItem('userInfo'));\n  const createdBy = data['name'];\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [answerList, setAnswerList] = React.useState([]);\n  const [createQuiz, setCreateQuiz] = useState();\n  const [result, setResult] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  const [clickedAns, setClickedAns] = useState(0);\n  const maxSteps = tutorialSteps.length;\n\n  function showProgress(index) {\n\n    var increment = Math.ceil((activeStep) / (maxSteps) * 100);\n\n    setProgress(increment)\n\n  }\n\n\n  const handleNext = (id, label) => {\n    const qusId = tutorialSteps[activeStep]?.qusId;\n    const answer = label;\n    const answerId = id;\n    setClickedAns(id)\n    if (14 === activeStep) {\n      setAnswerList(\n        [...answerList, { qusId: qusId, answer: answer, answerId: answerId }]\n      )\n      setTimeout(() => { \n        handleSubmit([...answerList, { qusId: qusId, answer: answer, answerId: answerId }]) }, 500)\n    }\n    else {\n      setAnswerList(\n        [...answerList, { qusId: qusId, answer: answer, answerId: answerId }]\n      )\n      setTimeout(() => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1)\n        setCount(count + 1)\n      }, 500)\n     \n\n      // debugger\n    }\n    showProgress(tutorialSteps[activeStep].qusId);\n\n\n\n\n  }\n\n\n  const handleSkip = () => { \n    setCount(count + 1)\n    setActiveStep(prevActiveStep => prevActiveStep + 1);\n   };\n\n  const handleSubmit = async ([...answerList]) => {\n    \n\n    const list = {\n      categoryId:categoryId,\n      createdBy: createdBy,\n      quizQuestions: answerList\n    }\n \n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n      }\n    }\n    const result = await services.createQuiz(list, options)\n    setCreateQuiz(result.data.data)\n    setResult(true)\n    if (result.data.code === 200) {\n      setResult(true)\n    }\n\n  };\n\n  if (result) {\n    localStorage.setItem(\"createId\", JSON.stringify(createQuiz))\n    return (<Redirect to={{ pathname: \"/sharelink\", state: { quizId: createQuiz } }} push={true} />)\n  }\n\n  return (\n    <div className={classes.gridContainer}>\n      <Grid container>\n        <Grid item xs></Grid>\n        <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\">\n             <h3 className=\"text1\">{title.title}</h3>\n          </div>\n          <div justify=\"center\">\n            <h4 className=\"question\">Question <span>{count}/15</span></h4>\n          </div>\n          <div justify=\"center\">\n            <BorderLinearProgress variant=\"determinate\" value={progress} />\n          </div>\n          <Card className=\"questioncard\">\n            <h3 className=\"questionname\">{count}: {tutorialSteps[activeStep]?.question}</h3>\n            <div className=\"optioncard\">\n              {\n                tutorialSteps[activeStep]?.optionsArray?.map((options, index) => {\n                  return (\n                    <Grid\n                      container\n                      className={\n                        clickedAns === options.optionId ?\n                          'clickoption' : 'nonclickoption'}\n                      onClick={() => { handleNext(options.optionId, options.optionLabel) }}\n                      key={index}\n                      id=\"cardbox\">\n                      <Grid item xs={4} sm={4} md={4} lg={4} >\n                        {options.optionImg.length ?\n                          <img className=\"optionImg\" src={options.optionImg} /> : <span></span>\n                        }\n                      </Grid>\n                      <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                        <CardContent className=\"cardcontent\">\n                          <h3 className=\"optioncontent\" id=\"cardText\">\n                            {options.optionLabel}\n                          </h3>\n                        </CardContent>\n                      </Grid>\n                    </Grid>\n                  )\n                })\n              }\n            </div>\n            <div className=\"start-wrapper\">\n              <button className=\"skip\" onClick={() => { maxSteps - 1 != tutorialSteps[activeStep].question.length ? handleSkip() : handleSubmit() }}>Skip the Question</button>\n            </div>\n          </Card>\n        </Grid>\n        <Grid item xs></Grid>\n      </Grid>\n      <Footer />\n    </div>\n  )\n}\n\nexport default QuestionList\n"]},"metadata":{},"sourceType":"module"}