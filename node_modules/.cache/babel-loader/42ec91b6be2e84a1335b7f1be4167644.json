{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/question/QuestionForm.js\";\nimport React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Grid, Card } from '@material-ui/core';\nimport './Question.css';\nimport services from '../../services/services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1)\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch'\n    }\n  },\n  formControl: {\n    margin: theme.spacing(1)\n  },\n  option: {\n    display: \"block\"\n  },\n  option1: {\n    float: \"left\"\n  },\n  img: {\n    float: \"right\",\n    width: \"50px\"\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  dropdown: {\n    zIndex: 1,\n    transform: \"translate(14px, 13px) scale(1)\",\n    padding: \"10.5px 14px\"\n  }\n}));\n\nfunction QuestionForm() {\n  const classes = useStyles();\n  const [question, setQuestion] = useState([{\n    questionTitle: '',\n    optionsArray: [{\n      optionLabel: \"\",\n      optionImg: \"\"\n    }, {\n      optionLabel: \"\",\n      optionImg: \"\"\n    }]\n  }]);\n  const [category, setCategory] = useState([]);\n  const [categoryOption, setCategoryOption] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  var userId = data['userId'];\n  useEffect(() => {\n    getAllCategory();\n  }, []);\n\n  const getAllCategory = async () => {\n    const options = {\n      method: 'Get',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getAllCategory(options);\n    console.log(result);\n    setCategory(result.data.data);\n  };\n\n  const addQuestion = () => {\n    setQuestion([...question, {\n      questionTitle: '',\n      optionsArray: [{\n        optionLabel: \"\",\n        optionImg: \"\"\n      }, {\n        optionLabel: \"\",\n        optionImg: \"\"\n      }]\n    }]);\n  };\n\n  const removeQuestion = index => {\n    const list = [...question];\n    list.splice(index, 1);\n    setQuestion(list);\n  };\n\n  const addOption = questionIndex => {\n    const options = question[questionIndex];\n    options.optionsArray.push({\n      optionLabel: \"\",\n      optionImg: \"\"\n    });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options,\n      optionsArray: [...newArray]\n    }];\n    const next = question.slice(questionIndex + 1, question === null || question === void 0 ? void 0 : question.length);\n    setQuestion([...previous, ...current, ...next]);\n  };\n\n  const handleChange = event => {\n    if (event.target.value != \"\" && event.target.value != null) {\n      setCategoryOption(event.target.value);\n    } else {\n      alert(\"please take category\");\n    }\n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    if (event.target.value === \"\" && event.target.value === null) {\n      debugger;\n      alert(\"please fill option\");\n    } else if (event.target.value.length >= 2) {\n      debugger;\n      alert(\"please enter right option\");\n    } else {\n      debugger;\n      const values = [...question];\n      values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n      setQuestion(values);\n    }\n  };\n\n  const handleImage = async (questionIndex, index, event) => {\n    const values = [...question];\n    var imgpath = event.target.files[0];\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.');\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path);\n    var img = new FormData();\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  };\n\n  const handleQuestion = (index, event) => {\n    if (event.target.value === \"\" && event.target.value === null) {\n      alert(\"please fill question\");\n      return false;\n    } else if (event.target.value.length <= 3) {\n      debugger;\n      alert(\"please enter right question\");\n    } else {\n      debugger;\n      const values = [...question];\n      values[index].questionTitle = event.target.value;\n      setQuestion(values);\n    }\n  };\n\n  const addTask = async () => {\n    const fileUpload = {\n      category: categoryOption,\n      userId: userId,\n      questionsArray: question\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.addQuestion(fileUpload, options);\n    console.log(result);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 9\n    }\n  }, \"Create Question\"), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, \"Category\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 24\n    }\n  }, /*#__PURE__*/React.createElement(FormControl, {\n    className: classes.formControl,\n    fullWidth: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 30\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    label: \"Category\",\n    id: \"category\",\n    value: categoryOption,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 31\n    }\n  }, category.map((option, index) => {\n    return /*#__PURE__*/React.createElement(MenuItem, {\n      key: index,\n      value: option.categoryId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 33\n      }\n    }, option.title);\n  })))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 21\n    }\n  })), question.map((que, index) => /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 4,\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, \"Question\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createnumber1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, question.length > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    onClick: () => removeQuestion(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 44\n    }\n  }, \"X\")), /*#__PURE__*/React.createElement(Card, {\n    className: \"create-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 35\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"question\",\n    className: \"que-text\",\n    name: \"question\",\n    placeholder: \"Enter Question\",\n    onChange: event => handleQuestion(index, event),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 32\n    }\n  })), que.optionsArray.map((option, optIndex) => /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"answerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"create-answer\",\n    placeholder: \"Answer\",\n    onChange: event => handleOption(index, optIndex, event),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 32\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizwrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"quizfile-upload2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"quizoption2\",\n    defaultValue: option.optionImg,\n    onChange: event => handleImage(index, optIndex, event),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 35\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/image/option.png\",\n    height: \"40px\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 35\n    }\n  }))), optIndex > 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"delete\",\n    onClick: () => removeOption(index, optIndex),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 48\n    }\n  }, \"X\")))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 31\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    onClick: () => addOption(index),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 31\n    }\n  }, \"Add Option\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"create-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 23\n    }\n  }, index === question.length - 1 && /*#__PURE__*/React.createElement(\"button\", {\n    className: \"addoption\",\n    onClick: () => addQuestion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 58\n    }\n  }, \"Add Question\"))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 21\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addWrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"addTAsk\",\n    variant: \"contained\",\n    onClick: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  }, \"Create\"))));\n}\n\nexport default QuestionForm;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/question/QuestionForm.js"],"names":["React","useState","useEffect","makeStyles","Container","Button","MenuItem","FormControl","Select","Grid","Card","services","useStyles","theme","root","margin","spacing","textField","marginLeft","marginRight","width","formControl","option","display","option1","float","img","button","dropdown","zIndex","transform","padding","QuestionForm","classes","question","setQuestion","questionTitle","optionsArray","optionLabel","optionImg","category","setCategory","categoryOption","setCategoryOption","data","JSON","parse","localStorage","getItem","jwt","userId","getAllCategory","options","method","headers","result","console","log","addQuestion","removeQuestion","index","list","splice","addOption","questionIndex","push","previous","slice","current","next","length","removeOption","answerIndex","newArray","filter","value","handleChange","event","target","alert","handleOption","values","handleImage","imgpath","files","name","currentTime","Date","time","getTime","ext","split","file_path","myimg","replace","FormData","append","getImage","handleQuestion","addTask","fileUpload","questionsArray","map","categoryId","title","que","optIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Grid,Card } from '@material-ui/core';\nimport './Question.css'\nimport services from '../../services/services';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n\n  },\n  formControl: {\n    margin: theme.spacing(1),\n\n  },\n  option: {\n    display: \"block\"\n  },\n  option1: {\n    float: \"left\"\n  },\n  img: {\n    float: \"right\",\n    width: \"50px\"\n  },\n\n  button: {\n    margin: theme.spacing(1),\n  },\n  dropdown: {\n    zIndex: 1,\n    transform: \"translate(14px, 13px) scale(1)\",\n    padding: \"10.5px 14px\"\n  }\n}))\n\nfunction QuestionForm() {\n  const classes = useStyles()\n  const [question, setQuestion] = useState(\n    [\n      {\n        questionTitle: '',\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      },\n    ]\n  )\n\n  const [category, setCategory] = useState([])\n  const [categoryOption, setCategoryOption] = useState([])\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  var userId = data['userId'];\n  useEffect(() => {\n       getAllCategory();\n  }, [])\n\n  const  getAllCategory = async () => {\n      const options = {\n          method: 'Get',\n          headers: {\n              \"Apiuserid\": \"49507884\",\n              \"Scope\": \"In.QuizApp.READ\",\n              \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n      }\n      const result = await services.getAllCategory(options)\n      console.log(result)\n      setCategory(result.data.data)\n  };\n\n  const addQuestion = () => {\n    setQuestion([\n      ...question,\n      {\n        questionTitle: '',\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      }\n    ])\n  }\n\n  const removeQuestion = (index) => {\n    const list = [...question]\n    list.splice(index, 1);\n    setQuestion(list);\n  }\n  const addOption = (questionIndex) => {\n    const options = question[questionIndex];\n    options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options, optionsArray: [...newArray] }];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n\n  const handleChange = (event) => {\n    if(event.target.value != \"\" && event.target.value !=null)\n    {\n      setCategoryOption(event.target.value);\n    }\n    else{\n      alert(\"please take category\")\n    }\n    \n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    if(event.target.value === \"\" && event.target.value ===null)\n    {\n      debugger\n      alert(\"please fill option\")\n    }\n    else if(event.target.value.length >=2 ){\n      debugger\n      alert(\"please enter right option\")\n    }\n    else{\n      debugger\n      const values = [...question];\n     values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n     setQuestion(values);\n    }\n  }\n\n  const handleImage = async(questionIndex, index, event) => {\n    const values = [...question];\n     var imgpath=event.target.files[0]\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext= data.split('.')\n    var file_path= questionIndex+'_' + index+'_' +ext[0]+time+'.'+ext[1];\n    var myimg=data.replace(data,file_path)\n    var img=new FormData()\n    img.append(\"optionImg\",imgpath);\n    img.append(\"newName\",myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg=file_path;\n    setQuestion(values);\n  }\n  const handleQuestion = (index, event) => {\n    if(event.target.value === \"\" && event.target.value ===null)\n    {\n      alert(\"please fill question\")\n      return false\n    }\n    else if(event.target.value.length <=3 ){\n      debugger\n      alert(\"please enter right question\")\n    }\n    else{\n      debugger\n      const values = [...question];\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n    }\n\n    \n\n  }\n\n  const addTask = async () => { \n    const fileUpload={\n      category:categoryOption,\n      userId:userId,\n      questionsArray:question\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.addQuestion(fileUpload, options)\n    console.log(result)\n  }\n\n  return (\n    <div>\n      <Container>\n        <h1>Create Question</h1>\n              <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                    <div className=\"createnumber\">\n                        <h3>Category</h3>\n                    </div>\n                      <Card className=\"create-list\">\n                       <Grid container justify=\"center\">\n                             <FormControl className={classes.formControl} fullWidth>\n                              <Select\n                                label=\"Category\"\n                                id=\"category\"\n                                value={categoryOption}\n                                onChange={handleChange}\n                                 >\n                               {\n                                category.map((option, index) => {\n                                  return (\n                                <MenuItem key={index} value={option.categoryId}>{option.title}</MenuItem>\n                                )})}\n                              </Select>\n                              </FormControl>\n                              </Grid>\n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n              {\n                question.map((que, index) => (\n                  <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                    <div className=\"createnumber\">\n                        <h3>Question</h3>\n                    </div>\n                    <div className=\"createnumber1\">\n                    {question.length > 1 &&<button className=\"delete\" onClick={() => removeQuestion(index)}>X</button>}\n                   </div>\n                      <Card className=\"create-list\">\n                                  <Grid\n                                  container\n                                  justify=\"center\"\n                                 >\n                               <input  type=\"text\" id=\"question\" className=\"que-text\"\n                            name=\"question\"\n                            placeholder=\"Enter Question\"\n                            onChange={event => handleQuestion(index, event)}\n                            required/>\n                               </Grid>\n                               {que.optionsArray.map((option, optIndex) => (\n                               <>\n                              <div className=\"answerContainer\">\n                               {/* <input type=\"radio\"  name={`option_${index}`}onClick={event => radioclick(index, optIndex, event)}/> */}\n                               <input className=\"create-answer\" placeholder=\"Answer\"  onChange={event => handleOption(index, optIndex, event)}/>\n                               <div className=\"quizwrapper\">\n                                <div className=\"quizfile-upload2\">\n                                  <input type=\"file\" className=\"quizoption2\"\n                                    defaultValue={option.optionImg}\n                                    onChange={event =>handleImage(index, optIndex, event)}\n                                    required/>\n                                  <img src=\"/assets/image/option.png\" height=\"40px\" />\n                                </div>\n                                </div>\n                               {optIndex > 1 &&<button className=\"delete\"  onClick={() => removeOption(index, optIndex)}>X</button>}\n                              </div>\n                              </>\n                               ))}\n                              <div className=\"create-label\">\n                              {\n                              <button className=\"addoption\"   onClick={() => addOption(index)}>Add Option</button>}\n                              </div>\n                      </Card>\n                      <div className=\"create-label\">\n                      {index === question.length - 1 &&  <button className=\"addoption\"   onClick={() => addQuestion()}>Add Question</button>}\n                     </div>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                  \n                ))}\n              <div className=\"addWrapper\">\n                <Button\n                  className=\"addTAsk\"\n                  variant=\"contained\"\n                  onClick={addTask}\n                >\n                  Create\n                 </Button>\n\n              </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default QuestionForm\n"]},"metadata":{},"sourceType":"module"}