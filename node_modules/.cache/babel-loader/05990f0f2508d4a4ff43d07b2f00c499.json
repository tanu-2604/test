{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/Quizlist.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport { DeleteOutlineOutlined, EditOutlined, FileCopyOutlined, VisibilityOutlined } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport \"../management/User.css\";\nimport services from '../../services/services';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n  heading: {\n    float: \"left\",\n    fontSize: \"20px\",\n    marginTop: \"15px\",\n    marginLeft: \"10px\",\n    fontWeight: \"700\",\n    color: \"#133b5c\"\n  },\n  list: {\n    marginTop: \"80px\"\n  },\n  cell: {\n    padding: \"6px\"\n  },\n  icon: {\n    padding: \"0px\"\n  }\n}));\nconst columns = [{\n  id: 'adminQuizId',\n  label: 'Id',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'title',\n  label: 'Title',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'slug',\n  label: 'Slug',\n  minWidth: 100,\n  align: 'center'\n}, {\n  id: 'language',\n  label: 'Language',\n  minWidth: 100,\n  align: 'center'\n}];\nexport default function Quizlist() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [quizlist, setQuizList] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    getAllAdminQuiz();\n  }, []);\n\n  const getAllAdminQuiz = async () => {\n    const options = {\n      method: 'Get',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.getAllAdminQuiz(options);\n    setQuizList(result.data.data);\n  };\n\n  const checkedStatus = id => async () => {\n    var userId = id;\n    var data = {\n      userId: userId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`\n      }\n    };\n    const result = await services.createStatus(data, options);\n    updateUsers();\n    console.log(result);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AdminLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, columns.map(column => /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table,\n    key: column.id,\n    align: column.align,\n    style: {\n      minWidth: column.minWidth\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, column.label)), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 15\n    }\n  }, \"Active\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 15\n    }\n  }, \"View\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }, \"Result\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, \"Edit\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }, \"Delete\"), /*#__PURE__*/React.createElement(TableCell, {\n    align: \"center\",\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, \"Url\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, quizlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n    return /*#__PURE__*/React.createElement(TableRow, {\n      hover: true,\n      role: \"checkbox\",\n      tabIndex: -1,\n      key: quizlist.adminQuizId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    }, columns.map(column => {\n      const value = row[column.id];\n      return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n        key: value,\n        align: column.align,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, column.format && typeof value === 'number' ? column.format(value) : value));\n    }), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 19\n      }\n    }, row.status === \"active\" ? /*#__PURE__*/React.createElement(Switch, {\n      checked: true,\n      onChange: checkedStatus(row.adminQuizId),\n      name: \"checkedA\",\n      color: \"primary\",\n      id: row.adminQuizId,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }\n    }) : /*#__PURE__*/React.createElement(Switch, {\n      checked: false,\n      onChange: checkedStatus(row.adminQuizId),\n      name: \"checkedA\",\n      color: \"primary\",\n      id: row.adminQuizId,\n      inputProps: {\n        'aria-label': 'primary checkbox'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 5\n      }\n    })), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/view/${row.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(VisibilityOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 3\n      }\n    })))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      src: \"/assets/image/trofy.jpg\",\n      width: \"30\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 1\n      }\n    }))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: `/editQuiz/${row.slug}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(EditOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 3\n      }\n    })))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(DeleteOutlineOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 3\n      }\n    }))), /*#__PURE__*/React.createElement(TableCell, {\n      align: \"center\",\n      className: classes.cell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(IconButton, {\n      className: classes.icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(FileCopyOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 3\n      }\n    }))));\n  })))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: quizlist.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/Quizlist.js"],"names":["React","useEffect","useState","Grid","IconButton","makeStyles","AdminLinks","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Switch","DeleteOutlineOutlined","EditOutlined","FileCopyOutlined","VisibilityOutlined","Link","services","useStyles","theme","root","width","marginTop","container","maxHeight","table","background","color","dltIcon","heading","float","fontSize","marginLeft","fontWeight","list","cell","padding","icon","columns","id","label","minWidth","align","Quizlist","classes","page","setPage","rowsPerPage","setRowsPerPage","quizlist","setQuizList","data","JSON","parse","localStorage","getItem","jwt","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","getAllAdminQuiz","options","method","headers","result","checkedStatus","userId","createStatus","updateUsers","console","log","map","column","slice","row","adminQuizId","format","status","slug","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport { DeleteOutlineOutlined, EditOutlined, FileCopyOutlined, VisibilityOutlined } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport \"../management/User.css\"\nimport services from '../../services/services';\n\nconst useStyles = makeStyles((theme)=>({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400,\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n  heading:{\n    float:\"left\",\n    fontSize:\"20px\",\n    marginTop:\"15px\",\n    marginLeft:\"10px\",\n    fontWeight:\"700\",\n    color:\"#133b5c\"\n}, \nlist:{\n  marginTop:\"80px\"\n},\ncell:{\n  padding:\"6px\"\n},\nicon:{\n  padding:\"0px\"\n}\n}));\nconst columns = [\n  { id: 'adminQuizId', label: 'Id', minWidth: 100, align: 'center' },\n  { id: 'title', label: 'Title', minWidth: 100, align: 'center' },\n  {\n    id: 'slug',\n    label: 'Slug',\n    minWidth: 100,\n    align: 'center'\n\n  },\n  { id: 'language', label: 'Language', minWidth: 100, align: 'center' }\n\n];\n\nexport default function Quizlist() {\n  const classes= useStyles()\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [quizlist,setQuizList]=useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(()=>{\n     getAllAdminQuiz();\n  },[])\n  const getAllAdminQuiz = async () => {\n    const options = {\n      method: 'Get',\n      headers: {\n          \"Apiuserid\": \"49507884\",\n          \"Scope\": \"In.QuizApp.READ\",\n          \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n  }\n    const result = await services.getAllAdminQuiz(options)\n    setQuizList(result.data.data)\n  };\n  const checkedStatus = (id) => async () => {\n    var userId = id;\n    var data = {\n      userId: userId,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.createStatus(data, options)\n    updateUsers();\n    console.log(result)\n\n  }\n  return (\n    <>\n    <AdminLinks/>\n     <Grid container justify=\"center\" className={classes.list}>\n       <Grid item xs={11} sm={6} md={6} lg={10}>\n\n       <TableContainer className={classes.container}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell className={classes.table}\n                  key={column.id}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))} \n              <TableCell align=\"center\" className={classes.table}>Active</TableCell>\n              <TableCell align=\"center\" className={classes.table}>View</TableCell>\n              <TableCell align=\"center\" className={classes.table}>Result</TableCell>\n              <TableCell align=\"center\" className={classes.table}>Edit</TableCell>\n              <TableCell align=\"center\" className={classes.table}>Delete</TableCell>\n              <TableCell align=\"center\" className={classes.table}>Url</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n           \n            {quizlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow \n                hover \n                role=\"checkbox\"\n                 tabIndex={-1}\n                 key={quizlist.adminQuizId}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <>\n                        <TableCell \n                        key={value}\n                        align={column.align}\n                         >\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\n                        </TableCell>\n                      </>\n                    );\n\n                  })}\n                  <TableCell align=\"center\"className={classes.cell}>\n{\n  row.status === \"active\" ?\n    <Switch\n      checked={true}\n      onChange={checkedStatus(row.adminQuizId)}\n      name=\"checkedA\"\n      color=\"primary\"\n      id={row.adminQuizId}\n      inputProps={{ 'aria-label': 'primary checkbox' }}\n    /> \n    :\n    <Switch\n      checked={false}\n      onChange={checkedStatus(row.adminQuizId)}\n      name=\"checkedA\"\n      color=\"primary\"\n      id={row.adminQuizId}\n      inputProps={{ 'aria-label': 'primary checkbox' }}\n    />\n}\n</TableCell>\n<TableCell align=\"center\"className={classes.cell}>\n<Link to={`/view/${row.slug}`}>\n<IconButton className={classes.icon} >\n  <VisibilityOutlined/>\n</IconButton>\n</Link>\n</TableCell>\n<TableCell align=\"center\"className={classes.cell}>\n<Link to=\"/result\">\n<img src=\"/assets/image/trofy.jpg\" width=\"30\"/>\n</Link>\n</TableCell>\n<TableCell align=\"center\" className={classes.cell}>\n<IconButton className={classes.icon} >\n<Link to={`/editQuiz/${row.slug}`}>\n  <EditOutlined/>\n  </Link>\n</IconButton>\n</TableCell>\n<TableCell align=\"center\"className={classes.cell}>\n<IconButton className={classes.icon} >\n  <DeleteOutlineOutlined/>\n</IconButton>\n</TableCell>\n<TableCell align=\"center\"className={classes.cell}>\n<IconButton className={classes.icon} >\n  <FileCopyOutlined/>\n</IconButton>\n</TableCell>\n                </TableRow>\n              );\n            })}\n          \n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={quizlist.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      /> \n       </Grid>\n    </Grid>\n    </>\n    \n  )\n}\n"]},"metadata":{},"sourceType":"module"}