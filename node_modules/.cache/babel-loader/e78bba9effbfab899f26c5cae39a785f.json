{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/user/question/QuestionApi.js\";\nimport React, { useState, useEffect } from 'react';\nimport services from '../../services/services';\nimport QuestionList from './QuestionList';\nimport { withCookies, Cookies } from 'react-cookie';\n\nfunction QuestionApi() {\n  const [question, setQuestion] = useState([]);\n  const [limit, setLimit] = useState([]);\n  const cookies = new Cookies();\n  var categoryId;\n\n  if (localStorage.getItem(\"categoryId\")) {\n    categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n  } else {\n    categoryId = JSON.parse(cookies.get('categoryId'));\n  }\n\n  useEffect(() => {\n    getQuestionlist();\n  }, []);\n\n  const getQuestionlist = async () => {\n    const data = {\n      categoryId: categoryId\n    };\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\"\n      }\n    };\n    const result = await services.getQuestionlist(data, options);\n    setLimit(result.data.limit);\n    setQuestion(result.data.data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, (question === null || question === void 0 ? void 0 : question.length) && /*#__PURE__*/React.createElement(QuestionList, {\n    questionlist: question,\n    limit: limit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }));\n}\n\nexport default QuestionApi;","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/user/question/QuestionApi.js"],"names":["React","useState","useEffect","services","QuestionList","withCookies","Cookies","QuestionApi","question","setQuestion","limit","setLimit","cookies","categoryId","localStorage","getItem","JSON","parse","get","getQuestionlist","data","options","method","headers","result","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAyBC,SAAzB,QAA0C,OAA1C;AACA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,WAAT,EAAsBC,OAAtB,QAAqC,cAArC;;AAEA,SAASC,WAAT,GAAuB;AACpB,QAAM,CAACC,QAAD,EAAUC,WAAV,IAAuBR,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACS,KAAD,EAAOC,QAAP,IAAiBV,QAAQ,CAAC,EAAD,CAA/B;AACA,QAAMW,OAAO,GAAG,IAAIN,OAAJ,EAAhB;AACA,MAAIO,UAAJ;;AACC,MAAGC,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAH,EACA;AACCF,IAAAA,UAAU,GAAGG,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,YAArB,CAAX,CAAb;AACA,GAHD,MAII;AACAF,IAAAA,UAAU,GAACG,IAAI,CAACC,KAAL,CAAWL,OAAO,CAACM,GAAR,CAAY,YAAZ,CAAX,CAAX;AACH;;AACDhB,EAAAA,SAAS,CAAC,MAAM;AACZiB,IAAAA,eAAe;AAClB,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,eAAe,GAAG,YAAY;AAChC,UAAMC,IAAI,GAAC;AACPP,MAAAA,UAAU,EAACA;AADJ,KAAX;AAIA,UAAMQ,OAAO,GAAG;AACZC,MAAAA,MAAM,EAAE,MADI;AAEZC,MAAAA,OAAO,EAAE;AACL,qBAAa,UADR;AAEL,iBAAS;AAFJ;AAFG,KAAhB;AAQA,UAAMC,MAAM,GAAG,MAAMrB,QAAQ,CAACgB,eAAT,CAAyBC,IAAzB,EAA8BC,OAA9B,CAArB;AACAV,IAAAA,QAAQ,CAACa,MAAM,CAACJ,IAAP,CAAYV,KAAb,CAAR;AACAD,IAAAA,WAAW,CAACe,MAAM,CAACJ,IAAP,CAAYA,IAAb,CAAX;AACH,GAhBD;;AAkBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEK,CAAAZ,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEiB,MAAV,kBACG,oBAAC,YAAD;AAAc,IAAA,YAAY,EAAEjB,QAA5B;AAAsC,IAAA,KAAK,EAAEE,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CADJ;AASH;;AAED,eAAeH,WAAf","sourcesContent":["import React, { useState,useEffect } from 'react'\nimport services from '../../services/services';\nimport QuestionList from './QuestionList';\nimport { withCookies, Cookies } from 'react-cookie';\n\nfunction QuestionApi() {\n   const [question,setQuestion]=useState([])\n   const [limit,setLimit]=useState([])\n   const cookies = new Cookies();\n   var categoryId\n    if(localStorage.getItem(\"categoryId\"))\n    {\n     categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n    }\n    else{\n        categoryId=JSON.parse(cookies.get('categoryId'));\n    }\n    useEffect(() => {\n        getQuestionlist();\n    }, [])\n\n    const getQuestionlist = async () => {\n        const data={\n            categoryId:categoryId\n        }\n   \n        const options = {\n            method: 'POST',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",   \n\n            }\n        }\n        const result = await services.getQuestionlist(data,options)\n        setLimit(result.data.limit)\n        setQuestion(result.data.data)\n    };\n\n    return (\n        <div>\n            {\n             question?.length &&\n                <QuestionList questionlist={question} limit={limit} /> \n            }\n                    \n        </div>\n    )\n}\n\nexport default QuestionApi;\n"]},"metadata":{},"sourceType":"module"}