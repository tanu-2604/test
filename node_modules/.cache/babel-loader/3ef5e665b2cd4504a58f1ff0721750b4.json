{"ast":null,"code":"var _jsxFileName = \"/home/tanu/Workspace/quiz12/src/admin/create/Quizlist.js\";\nimport React from 'react';\nimport MaterialTable from 'material-table';\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nconst useStyles = makeStyles(() => ({\n  list: {\n    margin: \"80px\"\n  }\n}));\nexport default function Quizlist() {\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AdminLinks, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    justify: \"center\",\n    className: classes.list,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 11,\n    sm: 6,\n    md: 6,\n    lg: 10,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(TableContainer, {\n    className: classes.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(Table, {\n    stickyHeader: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table // key={column.id}\n    // align={column.align}\n    // style={{ minWidth: column.minWidth }}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }, column.label), /*#__PURE__*/React.createElement(TableCell, {\n    className: classes.table,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 15\n    }\n  }, \"Action\"))), /*#__PURE__*/React.createElement(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \"return (\", /*#__PURE__*/React.createElement(TableRow, {\n    hover: true,\n    role: \"checkbox\",\n    tabIndex: -1 //  key={list.userId}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, \"return (\", /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(TableCell, {\n    key: value // align={column.align}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  })), \"//   ); // })}\", /*#__PURE__*/React.createElement(TableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    checked: true,\n    onChange: checkedStatus(row.userId),\n    name: \"checkedA\",\n    color: \"primary\",\n    id: row.userId,\n    inputProps: {\n      'aria-label': 'primary checkbox'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 25\n    }\n  }))), \"//   ); // })}\"))), /*#__PURE__*/React.createElement(TablePagination, {\n    rowsPerPageOptions: [10, 25, 100],\n    component: \"div\",\n    count: list.length,\n    rowsPerPage: rowsPerPage,\n    page: page,\n    onChangePage: handleChangePage,\n    onChangeRowsPerPage: handleChangeRowsPerPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }\n  }))));\n}","map":{"version":3,"sources":["/home/tanu/Workspace/quiz12/src/admin/create/Quizlist.js"],"names":["React","MaterialTable","Grid","IconButton","makeStyles","AdminLinks","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","Switch","useStyles","list","margin","Quizlist","classes","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","container","table","column","label","checkedStatus","row","userId","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,UAA3B,QAA6C,mBAA7C;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,eAAP,MAA4B,mCAA5B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,MAAMC,SAAS,GAACV,UAAU,CAAC,OAAK;AAC9BW,EAAAA,IAAI,EAAC;AACHC,IAAAA,MAAM,EAAC;AADJ;AADyB,CAAL,CAAD,CAA1B;AAKA,eAAe,SAASC,QAAT,GAAoB;AACjC,QAAMC,OAAO,GAAEJ,SAAS,EAAxB;AAEA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBpB,KAAK,CAACqB,QAAN,CAAe,CAAf,CAAxB;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCvB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAAtC;;AACA,QAAMG,gBAAgB,GAAG,CAACC,KAAD,EAAQC,OAAR,KAAoB;AAC3CN,IAAAA,OAAO,CAACM,OAAD,CAAP;AACD,GAFD;;AAIA,QAAMC,uBAAuB,GAAIF,KAAD,IAAW;AACzCF,IAAAA,cAAc,CAAC,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAf,CAAd;AACAT,IAAAA,OAAO,CAAC,CAAD,CAAP;AACD,GAHD;;AAIA,sBACE,uDACA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEC,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAC,QAAxB;AAAiC,IAAA,SAAS,EAAEF,OAAO,CAACH,IAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,IAAI,MAAV;AAAW,IAAA,EAAE,EAAE,EAAf;AAAmB,IAAA,EAAE,EAAE,CAAvB;AAA0B,IAAA,EAAE,EAAE,CAA9B;AAAiC,IAAA,EAAE,EAAE,EAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,cAAD;AAAgB,IAAA,SAAS,EAAEG,OAAO,CAACY,SAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,KAAD;AAAO,IAAA,YAAY,MAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEZ,OAAO,CAACa,KAA9B,CACE;AACA;AACA;AAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGC,MAAM,CAACC,KALV,CAFJ,eAUE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAEf,OAAO,CAACa,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,CADF,CADF,eAeE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAGM,oBAAC,QAAD;AACA,IAAA,KAAK,MADL;AAEA,IAAA,IAAI,EAAC,UAFL;AAGC,IAAA,QAAQ,EAAE,CAAC,CAHZ,CAIA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BASM,uDACE,oBAAC,SAAD;AACA,IAAA,GAAG,EAAEF,KADL,CAEA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CATN,iCAoBE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGM,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,IADX;AAEE,IAAA,QAAQ,EAAEK,aAAa,CAACC,GAAG,CAACC,MAAL,CAFzB;AAGE,IAAA,IAAI,EAAC,UAHP;AAIE,IAAA,KAAK,EAAC,SAJR;AAKE,IAAA,EAAE,EAAED,GAAG,CAACC,MALV;AAME,IAAA,UAAU,EAAE;AAAE,oBAAc;AAAhB,KANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHN,CApBF,CAHN,mBAfF,CADD,CAFA,eAqED,oBAAC,eAAD;AACE,IAAA,kBAAkB,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,GAAT,CADtB;AAEE,IAAA,SAAS,EAAC,KAFZ;AAGE,IAAA,KAAK,EAAErB,IAAI,CAACsB,MAHd;AAIE,IAAA,WAAW,EAAEf,WAJf;AAKE,IAAA,IAAI,EAAEH,IALR;AAME,IAAA,YAAY,EAAEK,gBANhB;AAOE,IAAA,mBAAmB,EAAEG,uBAPvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArEC,CADF,CAFD,CADF;AAuFD","sourcesContent":["import React from 'react';\nimport MaterialTable from 'material-table'\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nconst useStyles=makeStyles(()=>({\n  list:{\n    margin:\"80px\"\n  }\n}))\nexport default function Quizlist() {\n  const classes= useStyles()\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n  return (\n    <>\n    <AdminLinks/>\n     <Grid container justify=\"center\" className={classes.list}>\n       <Grid item xs={11} sm={6} md={6} lg={10}>\n\n       <TableContainer className={classes.container}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {/* {columns.map((column) => ( */}\n                <TableCell className={classes.table}\n                  // key={column.id}\n                  // align={column.align}\n                  // style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              {/* ))} */}\n              <TableCell className={classes.table}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {/* {list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => { */}\n              return (\n                <TableRow \n                hover \n                role=\"checkbox\"\n                 tabIndex={-1}\n                //  key={list.userId}\n                 >\n                  {/* {columns.map((column) => {\n                    const value = row[column.id]; */}\n                    return (\n                      <>\n                        <TableCell \n                        key={value}\n                        // align={column.align}\n                         >\n                          {/* {column.format && typeof value === 'number' ? column.format(value) : value} */}\n                        </TableCell>\n                      </>\n                  //   );\n\n                  // })}\n                  <TableCell>\n                    {/* {\n                      row.status === \"active\" ? */}\n                        <Switch\n                          checked={true}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        /> \n                        {/* :\n                        <Switch\n                          checked={false}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                    } */}\n                  </TableCell>\n                </TableRow>\n            //   );\n            // })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={list.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      /> \n       </Grid>\n    </Grid>\n    </>\n    \n  )\n}\n"]},"metadata":{},"sourceType":"module"}