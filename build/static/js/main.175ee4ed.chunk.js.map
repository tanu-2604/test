{"version":3,"sources":["services/services.js","admin/login/Login.js","admin/sideDrawer/DrawerToggleButton.js","admin/navbar/Navbar.js","admin/sideDrawer/SideDrawer.js","admin/backdrop/BackDrop.js","admin/management/AdminLinks.js","admin/management/AdminForm.js","control/PopUp.js","admin/management/UserTable.js","admin/management/UserList.js","admin/management/User.js","admin/category/CategoryForm.js","control/Cards.js","admin/category/CardGroup.js","admin/category/Category.js","services/Protected.js","admin/question/QuestionForm.js","admin/question/Question.js","user/footer/Footer.js","user/category/UserCategory.js","user/form/Form.js","user/form/InstaModel.js","user/form/ShareLink.js","user/form/FriendLink.js","user/form/Score.js","user/form/Gmail.js","user/form/PlayQuiz.js","user/form/PlayQuizApi.js","user/form/Privacy.js","user/form/Discliamer.js","user/question/QuestionList.js","user/question/QuestionApi.js","admin/question/AllQuestionList.js","admin/create/CreateQuiz.js","admin/create/Quizlist.js","admin/create/View.js","admin/create/Result.js","admin/create/ViewAns.js","admin/create/EditQuiz.js","user/category/QuizCategory.js","user/QuilPlayPart/PersonForm.js","user/QuilPlayPart/PlayQuizPart.js","user/QuilPlayPart/PlayQuizPartApi.js","user/QuilPlayPart/QuizScore.js","App.js","index.js"],"names":["baseUrl","login","data","options","Axios","post","createAdmin","getUser","get","createStatus","questionStatus","createCategory","categoryStatus","getAllCategory","getImage","addQuestion","getQuestions","getUserCategory","getCategory","Login","useState","loggedIn","setLoggedIn","page","setPage","a","username","document","getElementById","value","password","method","headers","services","result","codedata","code","ToastsStore","error","localStorage","setItem","JSON","stringify","to","push","Container","fluid","className","Row","Col","sm","md","lg","src","id","alt","height","type","name","placeholder","onClick","store","position","ToastsContainerPosition","TOP_CENTER","useStyle","makeStyles","btn","background","border","flexDirection","color","cursor","outline","menubtn","DrawerToggleButton","click","classes","Navbar","props","drawer","sidedrawer","boxShadow","top","left","width","maxWidth","zIndex","paddingTop","sideul","listStyle","display","padding","margin","logo","textAlign","justifyContent","sideimg","alignItems","sideli","sidea","textDecoration","fontWeight","icon","SideDrawer","Divider","List","ListItem","ListItemIcon","ListItemText","primary","useStyles","backdrop","BackDrop","AdminLink","sideDrawer","drawerOpen","setDrawerOpen","theme","root","spacing","heading","float","AdminForm","jwt","parse","getItem","firstName","lastName","passw","match","alert","console","log","window","location","reload","Typography","variant","TextField","label","Button","size","dialogWrapper","closeButton","right","palette","grey","text","fontSize","PopUp","title","children","openPopup","setOpenPopup","onClose","Dialog","open","DialogTitle","IconButton","aria-label","DialogContent","columns","minWidth","align","marginTop","container","maxHeight","table","dltIcon","marginLeft","UserTable","list","updateUsers","React","rowsPerPage","setRowsPerPage","checkedStatus","userId","Grid","justify","item","xs","Paper","TableContainer","Table","stickyHeader","TableHead","TableRow","map","column","TableCell","key","toString","style","TableBody","slice","row","hover","role","tabIndex","format","status","Switch","checked","onChange","inputProps","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","UserList","user","setUser","useEffect","User","form","createwrap","CategoryForm","FormData","categoryTitle","questionlength","userfile","files","append","accept","e","output","URL","createObjectURL","onload","revokeObjectURL","loadFile","htmlFor","paper","card","media","edit","active","dlt","col","Cards","category","setStatus","categoryId","Card","image","CardContent","gridContainer","paddingLeft","paddingRight","CardGroup","setCategory","Category","Protected","Cmp","rest","render","textField","marginRight","formControl","option","option1","img","button","dropdown","transform","create","QuestionForm","useHistory","questionTitle","optionsArray","optionLabel","optionImg","question","setQuestion","categoryOption","setCategoryOption","handleImage","questionIndex","index","values","imgpath","currentTime","Date","time","getTime","ext","split","file_path","myimg","replace","addTask","item1","fileUpload","questionsArray","FormControl","fullWidth","Select","MenuItem","que","splice","removeQuestion","onBlur","handleQuestion","required","optIndex","handleOption","defaultValue","answerIndex","newArray","filter","previous","current","next","removeOption","addOption","Question","Footer","minHeight","UserCategory","setId","useCookies","setCookie","pathname","state","grid","path","handleClick","secondary","add","Form","setData","setTitle","cookie","Cookies","getQuestionlist","categoryData","head","selectLanguage","href","Transition","forwardRef","ref","Slide","direction","modelhead","close","InstaModel","setOpen","TransitionComponent","keepMounted","aria-labelledby","aria-describedby","DialogActions","typography","ShareLink","quizId","allResult","setAllResult","dataId","pop","getCreaterResult","textAreaRef","useRef","dataid","Helmet","meta","content","property","select","execCommand","focus","success","tabledata","feedbackBy","score","FriendLink","history","quiz","setQuiz","setList","setRight","useParams","getAdminQuiz","quizQuestions","createdBy","Score","datalist","maxValue","minValue","segments","ringWidth","needleHeightRatio","needleTransition","segmentColors","needleColor","customSegmentLabels","link","gmail","borderRadius","fontFamily","Gmail","BorderLinearProgress","withStyles","colorPrimary","backgroundColor","bar","LinearProgress","pro","PlayQuiz","quizlist","setScore","activeStep","setActiveStep","meter","setMeter","correctAns","setCorrectAns","clickedAns","setClickedAns","progress","setProgress","setCount","json","maxSteps","handleNext","optId","setTimeout","prevActiveStep","handleSubmit","answerId","increaseScore","handleSelect","increment","Math","ceil","showProgress","qusId","getResult","optionId","correct","answer","PlayQuizApi","playQuizlist","quizQuestion","Privacy","Discliamer","QuestionList","questionlist","limit","stateCount","setStateCount","answerList","setAnswerList","createQuiz","setCreateQuiz","setResult","dummyArr","tutorialSteps","shift","createQuestionQuiz","steps","QuestionApi","setLimit","cookies","headPart","categorytitle","pxToRem","fontWeightRegular","optionimg","buttonwrap","AllQuestionList","questionList","setQuestionList","CreateQuiz","setImage","language","setLanguage","priority","maxScore","minScore","phrase","needle","resultImage","resultdata","setResultData","bannerImage","message","optionImage","handleResultImage","resindex","resultValue","resultimg","result_path","resultimage","slug","res","quizTitle","quizSlug","Fragment","defaultChecked","clicked","radioclick","listdata","removeresult","handleMax","handleMin","handleTitle","handlephrases","handleneedle","cell","copytext","overflow","Quizlist","setQuizList","getAllAdminQuiz","updateQuizStatus","AdminLinks","adminQuizId","VisibilityOutlined","EditOutlined","FileCopyOutlined","dummy","createElement","body","appendChild","removeChild","copyToClipboard","imgsize","View","setQue","setResultdata","getQuizBySlug","questionData","resultData","image_base_path","disabled","Result","tableData","setTableData","getAllResults","tdata","resultId","playerName","createDate","VisibilitySharp","ViewAns","playerResult","setPlayerResult","resultAns","setResultAns","getPlayerResult","answers","player","answerd","EditQuiz","load","setLoad","updateList","updateQuiz","marginBottom","QuizCategory","getAllQuiz","banner","PersonForm","getQuiz","getElementsByTagName","PlayQuizPart","quizdata","saveAnswer","quizLength","PlayQuizPartApi","tagimage","buttongrid","QuizScore","mylevel","allresult","imageBg","App","browserHistory","exact","ReactDOM","CookiesProvider"],"mappings":"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","file":"static/js/main.175ee4ed.chunk.js","sourcesContent":["import Axios from 'axios';\n  \n\nconst baseUrl = \"https://app-admin.webestfriends.com\";\n \n\nexport default{\n    login: (data,options) =>\n    Axios.post(`${baseUrl}/Login/`,data,options),\n    createAdmin: (data,options) =>\n    Axios.post(`${baseUrl}/Admin_API/createAdminUser`,data,options),\n    getUser: (options) =>\n    Axios.get(`${baseUrl}/Admin_API/getAdminUser`,options),\n   createStatus: (data,options) =>\n    Axios.post(`${baseUrl}/Admin_API/updateStatus`,data,options),\n   questionStatus: (data,options) =>\n    Axios.post(`${baseUrl}/Category_API/updateQusStatus`,data,options),\n    createCategory: (data,options) =>\n    Axios.post(`${baseUrl}/Category_API/createCategory`,data,options),\n    categoryStatus: (data,options) =>\n    Axios.post(`${baseUrl}/Category_API/updateStatus`,data,options),\n    getAllCategory: (options) =>\n    Axios.get(`${baseUrl}/Category_API/getAllCategory`,options),\n    getImage: (data,options) =>\n    Axios.post(`${baseUrl}/AdminQuestion_API/optionImageUpload`,data,options),\n    addQuestion: (data,options) =>\n    Axios.post(`${baseUrl}/AdminQuestion_API/addQuestion`,data,options),\n    getQuestions: (data,options) =>\n    Axios.post(`${baseUrl}/AdminQuestion_API/addQuestion`,data,options),\n    getUserCategory: (options) =>\n    Axios.get(`${baseUrl}/Category/getAllCategory`,options),\n    getCategory: (options) =>\n    Axios.get(`${baseUrl}/Category_API/getAllCategory`,options),\n    getCategory: (data,options) =>\n    Axios.post(`${baseUrl}/Category/getCategoryById`,data,options),\n    getQuestionlist: (data,options) =>\n    Axios.post(`${baseUrl}/Questions`,data,options),\n    createQuestionQuiz: (data,options) =>\n    Axios.post(`${baseUrl}/Quiz/create`,data,options),\n    getAdminQuiz: (data,options) =>\n    Axios.post(`${baseUrl}/Quiz/playQuiz`,data,options),\n    getResult: (data,options) =>\n    Axios.post(`${baseUrl}/Quiz/submitScore`,data,options),\n    getCreaterResult: (data,options) =>\n    Axios.post(`${baseUrl}/Quiz/getAllResult`,data,options),\n    bannerImage:(data,options) =>\n    Axios.post(`${baseUrl}/Admin_Quiz/quizImageUpload`,data,options),\n    createQuiz:(data,options) =>\n    Axios.post(`${baseUrl}/Admin_Quiz/createQuiz`,data,options),\n    getAllAdminQuiz:(options) =>\n    Axios.get(`${baseUrl}/Admin_Quiz/getAllAdminQuiz`,options),\n    getQuizBySlug:(data,options) =>\n    Axios.post(`${baseUrl}/Admin_Quiz/getQuizBySlug`,data,options),\n    updateQuiz:(data,options) =>\n    Axios.post(`${baseUrl}/Admin_Quiz/updateQuiz`,data,options),\n    updateQuizStatus:(data,options) =>\n    Axios.post(`${baseUrl}/Admin_Quiz/updateQuizStatus`,data,options),\n    getAllResults:(data,options) =>\n    Axios.post(`${baseUrl}/Admin_Quiz/getAllResults`,data,options),\n    getPlayerResult:(data,options) =>\n    Axios.post(`${baseUrl}/Admin_Quiz/getPlayerResult`,data,options),\n    getAllQuiz:(options) =>\n    Axios.get(`${baseUrl}/Preset_Quiz/getAllAdminQuiz`,options),\n    getQuiz:(data,options) =>\n    Axios.post(`${baseUrl}/Preset_Quiz/getQuizBySlug`,data,options),\n    saveAnswer:(data,options) =>\n    Axios.post(`${baseUrl}/Preset_Quiz/saveAnswer`,data,options),\n        // getTaskData: () =>\n        // Axios.get(`${baseUrl}/task/getTaskData`),\n        // getWorkFunction: (data,options) =>\n        // Axios.post(`${baseUrl}/WorkFunction/getWorkFunction`,data,options),\n        // addFunctionData: (data,options) =>\n        // Axios.post(`${baseUrl}/WorkFunction/workFunctionData`,data,options),\n        // getTaskData: () =>\n        // Axios.get(`${baseUrl}/task/getTaskData`),\n        // getAllFunction: () =>\n        // Axios.get(`${baseUrl}/WorkFunction/getAllFunction`),\n        // getWorkArea: () =>\n        // Axios.get(`${baseUrl}/WorkArea/getWorkArea`),\n        \n    // addChannel: (body,options) =>\n    //     Axios.post(`${baseUrl}/?c=API&m=createChannel`,body,options)\n        \n}\n\n","import React, { useState } from 'react';\nimport { Container, Row, Col, Form } from 'react-bootstrap';\nimport \"./Login.css\"\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\n\nconst Login = () => {\nconst[loggedIn,setLoggedIn]=useState(false)\nconst[page,setPage]=useState([])\n\nconst login = async() => {\n    var username = document.getElementById(\"username\").value;\n    var password = document.getElementById(\"password\").value;\n   \n    var data = {\n     username: username,\n      password: password,\n    }\n    const options = {\n      method: 'POST',\n     headers:{\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\"\n     }\n    }\n      const result= await services.login(data,options)\n       var codedata = result.data.code\n     if(codedata != 400 && codedata != 401)\n     {\n        setPage(result.data)\n        setLoggedIn(true)\n     }\n     else{\n        ToastsStore.error(\"Please enter right username and password\")\n     }\n  }  \n\n  localStorage.setItem('friend', JSON.stringify(page)); \n  if(loggedIn)\n  {\n      return(<Redirect to=\"/quizlist\" push={true}/>)\n  }\n//   else{\n//       return(<Redirect to=\"/login\" push={true}/>)\n//   }\n    return (\n        <>\n          <Container fluid className=\"loginwrapper fadeInDown\">\n                <Row>\n                    <Col className=\"formContent mt-5\" sm={12} md={6} lg={4}>\n                        <div className=\"fadeIn first\">\n                            <img src=\"/assets/image/download.png\" id=\"icon\" alt=\"user icon\" height=\"90\" className=\"mb-3\" />\n                        </div>\n                            <input  type=\"text\" id=\"username\" className=\"fadeIn input-text Second mb-4\"\n                            name=\"username\"\n                            placeholder=\"User Name\"\n                            />\n\n                            <input  type=\"password\" id=\"password\" className=\"fadeIn input-text third\n                            mb-4\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                            />\n\n                            <input  type=\"submit\"  className=\"btn btn-primary btn-block fadeIn submit fourth mb-3\"\n                            onClick={login}\n                            />\n                            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} />\n                    </Col> \n                </Row>     \n          </Container>  \n        </>\n    )\n}\n\nexport default Login;","import React from 'react'\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { makeStyles } from '@material-ui/core';\n\n const useStyle = makeStyles({\n     btn:{\n         background:\"transparent\",\n         border:\"none\",\n         flexDirection:\"column\",\n         color:\"#fcdab7\",\n         cursor:\"pointer\",\n         '&:focus':{\n            outline:\"none\" \n         }\n     },\n     menubtn:{\n         '&:hover':{\n             color:\"#fcdab7\"\n         }\n     }\n     \n })\n\nfunction DrawerToggleButton({click}) {\n    const classes = useStyle();\n    return (\n        <button className={classes.btn} onClick={click} >\n            <MenuIcon  className={classes.menubtn} />\n        </button>\n    )\n}\n\nexport default DrawerToggleButton\n\n\n","import React from 'react'\nimport './Navbar.css'\nimport DrawerToggleButton from '../sideDrawer/DrawerToggleButton'\nimport { Link, NavLink, Router } from 'react-router-dom'\nconst Navbar = props => {\n    return (\n            <header className=\"toolbar\" >\n           <nav className=\"toolbar-navigation\">\n               <div className=\"toggle-button\">\n                   <DrawerToggleButton click={props.drawer}/>\n               </div>\n                <div className=\"toolbar-logo\">\n                    <NavLink to=\"/usermanagement\" >Admin Panel</NavLink>\n                </div>\n                <div className=\"spacer\"/>\n                <div className=\"toolbar-navigation-item\">\n                   \n                    <ul>\n                        <li><NavLink to=\"/usermanagement\" >User Mangement</NavLink></li>\n                        <li><NavLink to=\"/category\" >Category</NavLink></li>\n                        <li><NavLink to=\"/question\" >Question</NavLink></li>\n                        <li><NavLink to=\"/createQuiz\" >Create Quiz</NavLink></li>\n                        <li><NavLink to=\"/quizlist\" >Quiz</NavLink></li>\n                    </ul>\n                    \n                </div>\n            </nav>  \n        </header>\n       \n    )\n}\n\nexport default Navbar;\n","import React from 'react'\nimport { makeStyles, Divider, List, ListItem, ListItemIcon, ListItemText } from '@material-ui/core'\nimport GroupIcon from '@material-ui/icons/Group';\nimport  CategoryIcon  from  '@material-ui/icons/Category'\nimport { Link } from 'react-router-dom';\nconst useStyle = makeStyles({\n    sidedrawer: {\n        height: \"100%\",\n        background: \"#fff\",\n        boxShadow: \"2px 0px 5px rgba(209,207,207,0.1)\",\n        position: \"fixed\",\n        top: \"0\",\n        left: \"0\",\n        width: \"70%\",\n        maxWidth: \"250px\",\n        zIndex: \"200\",\n        paddingTop:\"20px\",\n    },\n    sideul: {\n        listStyle: \"none\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        padding:\"0\",\n        margin:\"0\",\n        paddingTop:\"20px\"\n\n    },\n    logo: {\n        textAlign: \"center\",\n        justifyContent: \"center\",\n        position: \"relative\",\n        left: \"95px\",\n    },\n    sideimg: {\n        alignItems: \"center\",\n       \n    },\n    \n    sideli: {\n        margin: \"0.5rem 0\",\n        background: \"#fff\"\n    },\n    sidea: {\n        color: \"#012156\",\n        textDecoration: \"none\",\n        fontWeight: \"800\",\n        '&:hover,&:active': {\n            color: \"#f45f45\"\n        }\n    },\n    icon:{\n         color:\"#012156\"\n    }\n})\nfunction SideDrawer() {\n    const classes = useStyle()\n    return (\n        <nav className={classes.sidedrawer} >\n            <span className={classes.logo}>\n                <img src=\"/assets/image/img.png\" height=\"45px\" className={classes.sideimg} />\n            </span>\n            <ul className={classes.sideul} >\n            <Divider />\n                <List>\n                    <Link to=\"/usermanagement\">\n                    <ListItem className={classes.sidea} >\n                        <ListItemIcon><GroupIcon className={classes.icon}/></ListItemIcon>\n                        <ListItemText primary=\"User Management\" />\n                    </ListItem>\n                    </Link>\n                </List>\n                <Divider/>\n                <List>\n                    <Link to=\"/category\">\n                    <ListItem className={classes.sidea} >\n                        <ListItemIcon><CategoryIcon className={classes.icon}/></ListItemIcon>\n                        <ListItemText primary=\"Category\" />\n                    </ListItem>\n                    </Link>\n                </List>\n                <Divider/>\n                <List>\n                    <Link to=\"/question\">\n                    <ListItem className={classes.sidea} >\n                        <ListItemIcon><CategoryIcon className={classes.icon}/></ListItemIcon>\n                        <ListItemText primary=\"Question\" />\n                    </ListItem>\n                    </Link>\n                </List>\n                <Divider/>\n                <List>\n                    <Link to=\"/createQuiz\">\n                    <ListItem className={classes.sidea} >\n                        <ListItemIcon><CategoryIcon className={classes.icon}/></ListItemIcon>\n                        <ListItemText primary=\"Create Quiz\" />\n                    </ListItem>\n                    </Link>\n                </List>\n                <Divider/>\n                <List>\n                    <Link to=\"/quizlist\">\n                    <ListItem className={classes.sidea} >\n                        <ListItemIcon><CategoryIcon className={classes.icon}/></ListItemIcon>\n                        <ListItemText primary=\"Quiz\" />\n                    </ListItem>\n                    </Link>\n                </List>\n            </ul>\n        </nav>\n    )\n}\n\nexport default SideDrawer\n","import React from 'react'\nimport { makeStyles } from '@material-ui/styles'\n\nconst useStyles= makeStyles({\n    backdrop:{\n        position:\"fixed\",\n        top:\"0\",\n        left:\"0\",\n        width:\"100%\",\n        height:\"100%\",\n        background:\"rgba(0,0,0,0.3)\",\n        zIndex:\"100\"\n\n    }\n})\n\nfunction BackDrop({click}) {\n    const classes = useStyles();\n    return (\n        <div className={classes.backdrop} onClick={click}>\n            \n        </div>\n    )\n}\n\nexport default BackDrop\n","import React, { useState } from 'react';\nimport Navbar from '../navbar/Navbar';\nimport SideDrawer from '../sideDrawer/SideDrawer';\nimport BackDrop from '../backdrop/BackDrop';\n\n\nfunction AdminLink() {\n\n  const[drawerOpen,setDrawerOpen]= useState(false);\n\n  const handleDrawer =()=>{\n         setDrawerOpen(true);  \n  }\n  \n  const backdropClick = ()=>{\n    setDrawerOpen(false)\n  }\n\n  let sideDrawer;\n  let backdrop;\n  if(drawerOpen)\n  {\n    sideDrawer= <SideDrawer/>\n    backdrop= <BackDrop click={backdropClick}/>\n  }\n  return (\n    <div className=\"container\">\n          <Navbar drawer={handleDrawer} />\n          {sideDrawer}\n          {backdrop}\n    </div>\n  );\n}\n\nexport default AdminLink;\n","import React,{useState} from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography } from '@material-ui/core';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport User from './User';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      '& .MuiTextField-root': {\n        margin: theme.spacing(1),\n        width: '25ch',\n      },\n    },\n    heading:{\n          textAlign:\"center\",\n          fontWeight:\"500\",\n          color:\"#133b5c\"   \n         },\n    btn:{\n        float:\"left\",\n        margin:\"10px\",\n        background:\"#133b5c\",\n        color:\"#fff\",\n        '&: hover':{\n        color: \"#133b5c !important\",\n        }\n\n    }\n  }));\nfunction AdminForm() {\n    const classes = useStyles();\n    const[loggedIn,setLoggedIn]=useState(false)\n\n   const  data= JSON.parse(localStorage.getItem('friend'));\n   const jwt= data['jwt'];\n\n    const createAdmin = async() => {\n      var firstName = document.getElementById(\"firstName\").value;\n      var lastName = document.getElementById(\"lastName\").value;\n      var username = document.getElementById(\"username\").value;\n      var password = document.getElementById(\"password\").value;\n      var passw=  /^[A-Za-z]\\w{6,20}$/;\n\n     if(firstName===\"\"&&lastName===\"\" && username===\"\")\n     {\n\n     }\n     else if(password.value.match(passw))\n     {\n      alert('Correct, try another...');\n      return true;\n     }\n     else{\n\n     }\n      var data = {\n        firstName:firstName,\n        lastName: lastName,\n        username: username,\n        password: password,\n      }\n      const options = {\n        method: 'POST',\n       headers:{\n          \"Apiuserid\": \"49507884\",\n          \"Scope\": \"In.QuizApp.INSERT\",\n          \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n       }\n      }\n        const result= await services.createAdmin(data,options)\n        console.log(result)\n       if(result.data.code==200)\n       {\n        setLoggedIn(true)\n       }\n    }  \n  if(loggedIn)\n  {\n    window.location.reload(true);\n   \n  }\n\n\n    return (\n        <form className={classes.root}>\n            <Typography variant=\"h5\" className={classes.heading}>Create User</Typography>\n            <div>\n                <TextField\n                id=\"firstName\"\n                label=\"First Name\"\n                type=\"firstName\"\n                />\n            </div>\n            <div>\n                <TextField\n                id=\"lastName\"\n                label=\"Last Name\"\n                type=\"lastName\"\n                />\n            </div>\n            <div>\n                <TextField\n                id=\"username\"\n                label=\"User Name\"\n                type=\"userName\"\n                />\n            </div>\n            <div>\n              <TextField\n              id=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              />\n            </div> \n    \n            <Button\n            className={classes.btn}\n            size=\"normal\"\n            variant=\"contained\"\n            onClick={createAdmin}\n              >\n                Create\n            </Button>\n            <Button\n            className={classes.btn}\n            size=\"normal\"\n            variant=\"contained\"\n            // onClick={addTask}\n            >\n                Reset\n              </Button>\n        </form>\n    )\n}\n\nexport default AdminForm\n","import React from 'react'\nimport { Dialog, DialogTitle, DialogContent} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\n\nconst useStyle = makeStyles(theme =>({\n    dialogWrapper:{\n         padding:theme.spacing(2),\n         position:\"absolute\",\n         top:theme.spacing(5)\n    },\n  closeButton: {\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  text:{\n    fontSize:\"15px\",\n    color:\"#000\",\n\n  }\n   \n}))\n\nexport default function PopUp(props) {\n    const classes = useStyle();\n\n    const {title,maxWidth,children,openPopup,setOpenPopup,onClose,text} = props\n    return (\n         <Dialog open={openPopup} maxWidth={maxWidth} >\n               <DialogTitle>\n                    <div>\n                       \n                      <IconButton aria-label=\"close\" className={classes.closeButton} onClick={()=>{setOpenPopup(false)}}>\n                        <CloseIcon />\n                      </IconButton> \n                    </div>\n               </DialogTitle>\n               <DialogContent>\n                  {children}  \n               </DialogContent>\n         </Dialog>\n    )\n}\n","import React,{useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport services from '../../services/services';\nimport AdminForm from './AdminForm';\nimport PopUp from '../../control/PopUp'\nimport { Grid, Typography } from '@material-ui/core';\n\nconst columns = [\n  { id: 'firstName', label: 'First Name', minWidth: 100, align: 'center' },\n  { id: 'lastName', label: 'Last Name', minWidth: 100, align: 'center' },\n  {\n    id: 'username',\n    label: 'User Name',\n    minWidth: 100,\n    align: 'center'\n\n  },\n];\n\n\nconst useStyles = makeStyles((theme)=>({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400,\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n  heading:{\n    float:\"left\",\n    fontSize:\"20px\",\n    marginTop:\"15px\",\n    marginLeft:\"10px\",\n    fontWeight:\"700\",\n    color:\"#133b5c\"\n}, \n}));\n\nexport default function UserTable({ list, updateUsers }) {\n\n  const classes = useStyles();\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [openPopup,setOpenPopup] = useState(false);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n\n  const checkedStatus = (id) => async () => {\n    var userId = id;\n    var data = {\n      userId: userId,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.createStatus(data, options)\n    updateUsers();\n  }\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Grid container justify=\"center\" className={classes.list}>\n        <Grid item xs={11} sm={6} md={6} lg={10}>\n    <Paper className={classes.root}>\n      <div className={classes.root}>\n                        <Typography variant=\"h4\" className={classes.heading}>User Details</Typography> \n                    <div className=\"wrapper-inner-tab-backgrounds-second\">\n                        <div className=\"sim-button button13\" onClick={ ()=> setOpenPopup(true)} ><span>Add User</span></div>\n                    </div>    \n                </div>  \n                <PopUp\n                    openPopup={openPopup}\n                    setOpenPopup={setOpenPopup}\n                    maxWidth=\"sm\"\n                    >\n                        <AdminForm/>\n                </PopUp>\n     \n      <TableContainer className={classes.container}>\n        <Table stickyHeader>\n          <TableHead>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell className={classes.table}\n                  key={column.id.toString()}\n                  align={column.align}\n                  style={{ minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n              <TableCell className={classes.table}>Action</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n              return (\n                <TableRow \n                hover \n                role=\"checkbox\"\n                 tabIndex={-1}\n                 key={row.userId}>\n                  {columns.map((column) => {\n                    const value = row[column.id];\n                    return (\n                      <>\n                        <TableCell \n                        key={value.toString()}\n                        align={column.align}\n                         >\n                          {column.format && typeof value === 'number' ? column.format(value) : value}\n                        </TableCell>\n                      </>\n                    );\n\n                  })}\n                  <TableCell>\n                    {\n                      row.status === \"active\" ?\n                        <Switch\n                          checked={true}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId.toString()}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        /> :\n                        <Switch\n                          checked={false}\n                          onChange={checkedStatus(row.userId)}\n                          name=\"checkedA\"\n                          color=\"primary\"\n                          id={row.userId.toString()}\n                          inputProps={{ 'aria-label': 'primary checkbox' }}\n                        />\n                    }\n                  </TableCell>\n                </TableRow>\n              );\n            })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={list.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n       \n           \n    </Paper>\n    </Grid>\n    </Grid>\n    \n  );\n}","import React, { useState, useEffect } from 'react'\nimport services from '../../services/services';\nimport UserTable from './UserTable';\n\nfunction UserList() {\n    const [user, setUser] = useState([]);\n    const data = JSON.parse(localStorage.getItem('friend'));\n    const jwt = data['jwt'];\n    useEffect(() => {\n        getUser();\n    }, [])\n\n    const getUser = async () => {\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",\n                \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n            }\n        }\n        const result = await services.getUser(options)\n        setUser(result.data.data)\n    };\n\n    return (\n        <>\n\n            {\n                user?.length &&\n                <UserTable list={user} updateUsers={getUser} />\n            }\n\n        </>\n    )\n}\n\nexport default UserList\n","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport './User.css'\nimport AdminLink from './AdminLinks';\nimport UserList from './UserList';\n\nconst useStyles= makeStyles((theme)=>({\n    root:{\n        marginTop:\"80px\"\n    },\n    \n}))\n\nfunction User() {\n    const classes = useStyles();\n   \n    return (\n            <>      \n                <AdminLink/>\n                 <UserList/>\n            </>\n    )\n}\n\nexport default User;\n","import React, { useState } from 'react'\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button, Typography, Grid, Divider, Paper } from '@material-ui/core';\nimport './CategoryForm.css'\nimport services from '../../services/services';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n      width: '25ch',\n    },\n  },\n  heading: {\n    textAlign: \"center\",\n    fontWeight: \"500\",\n    color: \"#133b5c\"\n  },\n  btn: {\n    margin: \"10px\",\n    background: \"#133b5c\",\n    color: \"#fff\",\n    '&: hover': {\n      color: \"#133b5c !important\",\n    }\n\n  },\n  form: {\n    textAlign: \"center\"\n  },\n  createwrap:{\n    textAlign:\"center\"\n  }\n}));\n\n\nfunction CategoryForm() {\n  const classes = useStyles();\n  const[loggedIn,setLoggedIn]=useState(false)\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  var userId = data['userId'];\n\n\n  var loadFile = function (e) {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(e.target.files[0]);\n    output.onload = function () {\n      URL.revokeObjectURL(output.src) // free memory\n    }\n  };\n\n  const createCategory = async () => {\n    const data = new FormData();\n    var categoryTitle = document.getElementById(\"categoryTitle\").value;\n    var questionlength = document.getElementById(\"questionlength\").value;\n    var userfile = document.getElementById('input').files?.[0];\n    if ((categoryTitle == \"\") || (categoryTitle == null) || (categoryTitle.length <= 2)) {\n      alert(\"please enter required Category\");\n    } \n    data.append(\"categoryTitle\", categoryTitle);\n    data.append(\"userId\", userId);\n    data.append(\"limit\", questionlength);\n    data.append(\"userfile\", userfile);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.createCategory(data, options)\n    if(result.data.code==200)\n    {\n     setLoggedIn(true)\n    }\n  }\n  \n \nif(loggedIn)\n{\nwindow.location.reload();\n\n}\n\n\n  return (\n    <>\n      <Typography variant=\"h5\" className={classes.heading}>Create Category</Typography>\n      <form className={classes.root}>\n\n        <div className={classes.form}>\n          <TextField\n            id=\"categoryTitle\"\n            label=\"Category Name\"\n            type=\"text\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </div>\n        <div className={classes.form}>\n          <TextField\n            id=\"questionlength\"\n            label=\"Max length\"\n            type=\"number\"\n            variant=\"outlined\"\n            size=\"small\"\n          />\n        </div>\n        <div className=\"img-holder\">\n          <img id=\"output\" className=\"img\" />\n        </div>\n        <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\" onChange={(e) => loadFile(e)} />\n        <div className=\"label\">\n          <label className=\"image-upload\" htmlFor=\"input\">\n            <span>  Choose your Photo</span>\n          </label>\n        </div>\n        <div className={classes.createwrap}>\n        <Button\n          className={classes.btn}\n          size=\"normal\"\n          variant=\"contained\"\n          onClick={createCategory}\n          >\n          Create\n            </Button>\n        </div>\n      </form>\n\n\n    </>\n\n\n  )\n}\n\nexport default CategoryForm\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport  './Card.css'\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\n\nimport Button from '@material-ui/core/Button';\n\nimport {Link} from  \"react-router-dom\"\nimport { Grid } from '@material-ui/core';\nimport services from '../services/services';\n\nconst useStyles = makeStyles((theme)=>({\n   \n      paper: {\n        padding: theme.spacing(1),\n   \n      },\n  card: {\n    maxWidth: 350,\n    margin:\"50px\",\n    marginTop:\"120px\"\n\n  },\n  media: {\n    height:50\n  },\n  edit:{\n    float:\"left\",\n    margin: \"3px\",\n    fontSize:\"10px\",\n    background:\"#133b5c\",\n    color:\"#fff\",\n  },\n  active:{\n    margin: \"3px\",\n    float:\"left\",\n    fontSize:\"10px\",\n    background:\"#133b5c\",\n    color:\"#fff\",\n  },\n  dlt:{\n    margin: \"3px\",\n    float:\"left\",\n    fontSize:\"10px\",\n    background:\"#E70808\",\n    color:\"#fff\",\n  },\n  \n  col:{\n    display:\"flex\",\n  }\n\n}));\n\nexport default function Cards({category}) {\n  const classes = useStyles();\n  const[status,setStatus]=useState()\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const checkedStatus = (id) => async () => {\n    \n    var data = {\n     categoryId: id,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.LOGIN\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.categoryStatus(data, options)\n    if(result.data.status===200){\n      setStatus(true)\n    }\n\n  }\nif(status){\n  window.location.reload();\n}\n  return (\n    <>\n      <Card className={classes.root}     variant=\"outlined\" key={category.categoryId} >\n         <Grid container className=\"carddata\">\n              <Grid item xs={4} sm={4} md={4} lg={4} className=\"imgpart\" >\n                <img className=\"categoryImg\" src={category.image} /> \n              </Grid>\n              <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                <CardContent className=\"cardcontent\">\n                  <h3 className=\"optioncontent\" id=\"cardText\">\n                      {category.title}\n                  </h3>\n                   </CardContent>\n              </Grid>\n        </Grid>\n            \n            <div>\n            {\n                     category.status === \"active\" ?\n                     <Button\n                     className={classes.dlt}\n                     size=\"small\"\n                     variant=\"contained\"\n                     onClick={checkedStatus(category.categoryId)}\n                     >\n                    Deactive\n                    </Button> :\n                         <Button\n                         className={classes.active}\n                         size=\"small\"\n                         variant=\"contained\"\n                         onClick={checkedStatus(category.categoryId)}\n                         >\n                        Active\n                        </Button>\n                    }\n                   \n                  <Link to={`/allquestionlist/${category.categoryId}`} >\n                  <Button\n                    className={classes.edit}\n                    size=\"small\"\n                    variant=\"contained\"\n                   \n                    >\n                   Questions\n                   </Button>\n                  </Link>\n                  <Link to={`/allquestionlist/${category.categoryId}`} >\n                  <Button\n                    className={classes.edit}\n                    size=\"small\"\n                    variant=\"contained\"\n                    >Edit\n                   </Button>\n                  </Link>\n          </div>\n        \n    </Card>\n        \n    </>\n  );\n}","import React,{useEffect,useState} from \"react\";\nimport Cards from \"../../control/Cards\";\nimport { Grid } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport services from \"../../services/services\";\n\nconst useStyles = makeStyles({\n  gridContainer: {\n    paddingLeft: \"40px\",\n    paddingRight: \"40px\"\n  }\n});\n\nexport default function CardGroup() {\n  const classes = useStyles();\n  const[category,setCategory] = useState([])\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n       getAllCategory();\n  }, [])\n\n  const  getAllCategory = async () => {\n      const options = {\n          method: 'Get',\n          headers: {\n              \"Apiuserid\": \"49507884\",\n              \"Scope\": \"In.QuizApp.READ\",\n              \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n      }\n      const result = await services.getAllCategory(options)\n      console.log(result)\n      setCategory(result.data.data)\n  };\n  return (\n    <Grid\n      container\n      spacing={4}\n      className={classes.gridContainer}\n      justify=\"center\"\n    >\n      {\n        category.map((list) =>{\n\n         return(\n          <Grid item xs={12} sm={6} md={4}>\n          <Cards category={list} />\n            </Grid>\n         ) \n         })\n      }\n    </Grid>\n  );\n}\n","import React,{useState} from 'react';\nimport { Typography} from '@material-ui/core'\nimport {makeStyles} from '@material-ui/core/styles'\nimport '../management/User.css'\nimport PopUp from '../../control/PopUp'\nimport CategoryForm from './CategoryForm'\nimport CardGroup from './CardGroup'\nimport AdminLink from '../management/AdminLinks';\n\nconst useStyles= makeStyles((theme)=>({\n    root:{\n      marginTop:\"70px\",\n      width:\"100%\"\n    },\n    heading:{\n           float:\"left\",\n           fontSize:\"20px\",\n           marginTop:\"15px\",\n           marginLeft:\"10px\",\n           fontWeight:\"700\",\n           color:\"#133b5c\"\n   }, \n}))\nfunction Category() {\n    const classes = useStyles();\n    const [openPopup,setOpenPopup] = useState(false);\n    return (\n        <> \n             <AdminLink/>\n            <div className={classes.root}>\n              <Typography variant=\"h4\" className={classes.heading}>Category List</Typography> \n                <div className=\"wrapper-inner-tab-backgrounds-second\">\n                  <div className=\"sim-button button13\" onClick={ ()=> setOpenPopup(true)} ><span>Create Category</span></div>\n                </div>    \n            </div> \n            <CardGroup/>\n              <PopUp\n                openPopup={openPopup}\n                setOpenPopup={setOpenPopup}\n                maxWidth=\"md\"\n                >\n                <CategoryForm/>\n            </PopUp>\n        </>\n    )\n}\n\nexport default Category\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\n\nconst Protected = ({ component: Cmp, ...rest }) => (\n    <Route\n        {...rest}\n        render={(props) =>\n            localStorage.getItem('friend')\n                ? (<Cmp {...props} />)\n                : <Redirect to=\"/login\" />\n        }\n    />\n)\n\n\nexport default Protected;\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles} from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Button from '@material-ui/core/Button';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Grid,Card } from '@material-ui/core';\nimport './Question.css'\nimport services from '../../services/services';\nimport { Redirect, useHistory } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& .MuiTextField-root': {\n      margin: theme.spacing(1),\n\n    },\n    textField: {\n      marginLeft: theme.spacing(1),\n      marginRight: theme.spacing(1),\n      width: '25ch',\n    },\n\n  },\n  formControl: {\n    margin: theme.spacing(1),\n\n  },\n  option: {\n    display: \"block\"\n  },\n  option1: {\n    float: \"left\"\n  },\n  img: {\n    float: \"right\",\n    width: \"50px\"\n  },\n\n  button: {\n    margin: theme.spacing(1),\n  },\n  dropdown: {\n    zIndex: 1,\n    transform: \"translate(14px, 13px) scale(1)\",\n    padding: \"10.5px 14px\"\n  },\n  create:{\n    marginTop:\"55px\",\n    textAlign:\"center\",\n    color:\"#133b5c\"\n  }\n}))\n\nfunction QuestionForm() {\n  const classes = useStyles()\n  const history = useHistory()\n  const [question, setQuestion] = useState(\n    [\n      {\n        questionTitle: '',\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      },\n    ]\n  )\n\n  const [category, setCategory] = useState([])\n  const [categoryOption, setCategoryOption] = useState([])\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  var userId = data['userId'];\n  useEffect(() => {\n       getAllCategory();\n  }, [])\n\n  const  getAllCategory = async () => {\n      const options = {\n          method: 'Get',\n          headers: {\n              \"Apiuserid\": \"49507884\",\n              \"Scope\": \"In.QuizApp.READ\",\n              \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n      }\n      const result = await services.getAllCategory(options)\n      setCategory(result.data.data)\n  };\n\n  const addQuestion = (event,index) => {\n    \n      setQuestion([\n        ...question,\n        {\n          questionTitle: '',\n          optionsArray: [\n            { optionLabel: \"\", optionImg: \"\" },\n            { optionLabel: \"\", optionImg: \"\" }\n          ]\n        }\n      ])\n   \n    }\n\n  const removeQuestion = (index) => {\n    const list = [...question]\n    list.splice(index, 1);\n    setQuestion(list);\n  }\n  const addOption = (questionIndex) => {\n    const options = question[questionIndex];\n    options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options, optionsArray: [...newArray] }];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n\n  const handleChange = (event) => {\n    if(event.target.value != \"\" && event.target.value !=null)\n    {\n      setCategoryOption(event.target.value);\n    }\n    else{\n      alert(\"please take category\")\n      return true;\n    }\n    \n  };\n\n  const handleOption = (questionIndex, index, event) => {\n    if((event.target.value === \"\" && event.target.value ===null)||(event.target.value.length <=2 ))\n    {\n      alert(\"please fill option\");\n      return true;\n    }\n    else{\n      const values = [...question];\n     values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n     setQuestion(values);\n    }\n  }\n\n  const handleImage = async(questionIndex, index, event) => {\n    const values = [...question];\n     var imgpath=event.target.files[0]\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext= data.split('.')\n    var file_path= questionIndex+'' + index+'' +ext[0]+time+'.'+ext[1];\n    var myimg=data.replace(data,file_path)\n    var img=new FormData()\n    img.append(\"optionImg\",imgpath);\n    img.append(\"newName\",myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg=file_path;\n    setQuestion(values);\n  }\n\n  const handleQuestion = (index, event) => {\n    if(categoryOption.length<=0){\n      alert(\"Please Select your Category first!\" );\n      return;\n    }\n    \n    if((event.target.value === \"\" && event.target.value ===null)||(event.target.value.length <=3))\n    {\n      alert(\"please fill question\")\n      return true;\n    }\n    else{\n      const values = [...question];\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n    }\n   \n\n  }\n  var LoggedIn=false\n  const addTask = async () => { \n    let data=true;\n      question.map((item)=>{\n             if(item.questionTitle === \"\")\n             {\n              console.log(item.questionTitle)\n              alert(\"Question Cannot be blank!\")\n              data= false;\n              return;\n             }\n             else{\n              data= true;\n             }\n             item.optionsArray.map((item1)=>{\n               if(item1.optionLabel==\"\"){\n               alert(\"Please enter all answer options\")\n               data= false;\n               return;\n               }\n               else{\n                data= true;\n                return;\n               }\n             })\n            \n             \n    })\n    if(data==true){\n      const fileUpload={\n      category:categoryOption,\n      userId:userId,\n      questionsArray:question\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.addQuestion(fileUpload, options)\n   return<Redirect to=\"/category\" push={true}/>\n  }\n  \n  }\n \n  return (\n    <div>\n      <Container>\n        <h1 className={classes.create}>Create Question</h1>\n              <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                    <div className=\"createnumber\">\n                        <h3>Category</h3>\n                    </div>\n                      <Card className=\"create-list\">\n                       <Grid container justify=\"center\">\n                             <FormControl className={classes.formControl} fullWidth>\n                              <Select\n                                label=\"Category\"\n                                id=\"category\"\n                                value={categoryOption}\n                                onChange={handleChange}\n                                 >\n                               {\n                                category.map((option, index) => {\n                                  return (\n                                <MenuItem key={index} value={option.categoryId}>{option.title}</MenuItem>\n                                )})}\n                              </Select>\n                              </FormControl>\n                              </Grid>\n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n              {\n                question.map((que, index) => (\n                  <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                    <div className=\"createnumber\">\n                        <h3>Question</h3>\n                    </div>\n                    <div className=\"createnumber1\">\n                    {question.length > 1 &&<button className=\"delete\" onClick={() => removeQuestion(index)}>X</button>}\n                   </div>\n                      <Card className=\"create-list\">\n                                  <Grid\n                                  container\n                                  justify=\"center\"\n                                 >\n                               <input  type=\"text\" id=\"question\" className=\"que-text\"\n                            name=\"question\"\n                            placeholder=\"Enter Question\"\n                           // onFocus={()=>checkCategory()}\n                            onBlur={event => handleQuestion(index, event)}\n                            required/>\n                               </Grid>\n                               {que.optionsArray.map((option, optIndex) => (\n                               <>\n                              <div className=\"answerContainer\">\n                               {/* <input type=\"radio\"  name={`option_${index}`}onClick={event => radioclick(index, optIndex, event)}/> */}\n                               <input className=\"create-answer\" placeholder=\"Answer\"  onBlur={event => handleOption(index, optIndex, event)}/>\n                               <div className=\"quizwrapper\">\n                                <div className=\"quizfile-upload2\">\n                                  <input type=\"file\" className=\"quizoption2\"\n                                    defaultValue={option.optionImg}\n                                    onChange={event =>handleImage(index, optIndex, event)}\n                                    required/>\n                                  <img src=\"/assets/image/option.png\" height=\"40px\" />\n                                </div>\n                                </div>\n                               {optIndex > 1 &&<button className=\"delete\"  onClick={() => removeOption(index, optIndex)}>X</button>}\n                              </div>\n                              </>\n                               ))}\n                              <div className=\"create-label\">\n                              {\n                              <button className=\"addoption\"   onClick={() => addOption(index)}>Add Option</button>}\n                              </div>\n                      </Card>\n                      <div className=\"create-label\">\n                      {index === question.length - 1 &&  <button className=\"addoption\"   onClick={(event) => addQuestion(event,index)}>Add Question</button>}\n                     </div>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                  \n                ))}\n              <div className=\"addWrapper\">\n                <Button\n                  className=\"addTAsk\"\n                  variant=\"contained\"\n                  onClick={addTask}\n                >\n                  Create\n                 </Button>\n\n              </div>\n      </Container>\n    </div>\n  )\n}\n\nexport default QuestionForm","import React from 'react'\nimport AdminLink from '../management/AdminLinks'\nimport QuestionForm from './QuestionForm'\n\nfunction Question() {\n    return (\n        <div>\n            <AdminLink/>\n            <QuestionForm/>\n        </div>\n    )\n}\n\nexport default Question\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport  '../style/footer.css'\nfunction Footer() {\n    return (\n        <div className=\"pos\">\n            <footer className=\"footer\">\n                <p className=\"footer-text\"><Link to=\"/contact\">Contact</Link> | <Link to=\"/privacy\">Privacy Policy</Link> | <Link to=\"/disclaimer\">Disclaimer</Link></p>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer\n","import React,{useState,useEffect} from 'react';\nimport '../style/category.css';\nimport { makeStyles, Grid, Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport { useCookies } from 'react-cookie';\n\n    const useStyles = makeStyles({\n        gridContainer: {\n            background:\"#7555D9\",\n            minHeight:\"100vh\",\n            padding:\"0px 20px\"\n            \n        },\n        \n    });\n\nfunction UserCategory() {\n\nconst classes = useStyles();\nconst[category,setCategory] = useState([]);\nconst[page,setPage] = useState(false);\nconst [id,setId]= useState(0)\nconst [cookies, setCookie] = useCookies(['categoryid']);\n\nuseEffect(() => {\n//localStorage.removeItem('createId');\ngetUserCategory();\n}, [])\n\n// this function use for Api data\n\nconst  getUserCategory = async () => {   \n    const options = {\n    method: 'Get',\n    }\n    const result = await services.getUserCategory(options)\n    setCategory(result.data.data)\n};\n\n// this function use for save category Id in local storage and cookie\nconst handleClick =(id)=>{\n    localStorage.setItem('categoryId', JSON.stringify(id)); \n    setId(id)\n    setPage(true);\n    setCookie('categoryId', id, { path: '/' });\n}\n\nif(page) { return <Redirect to={{pathname:\"/form\",state:{id:{id}}}} push={true}/>\n\n}\nreturn (\n<>\n    {\n        category.length? \n            <Grid container className={classes.gridContainer} justify=\"center\">\n                <Grid item xs={12} sm={6} md={3}>\n                    <h3 className=\"choose1\">Choose your</h3>\n                    <h3 className=\"choose2\">Category</h3>\n                </Grid>\n                    {\n                        category.map((list,index)=>{\n                            return(  \n                            <Grid container justify=\"center\" className={classes.grid} key= {index}>\n                                {\n                                 list.status=== \"active\"?\n                                    <Grid item xs={12} sm={7} md={6}lg={3} >\n                                        <Card className=\"card\" key={index} onClick={()=>{handleClick(list.categoryId,list.title)}} >\n                                            <div>  \n                                                <Grid container>\n                                                    <Grid item xs={4} sm={4} md={3}lg={3} className=\"img-card\" >\n                                                      <img className=\"cardImg\" src={list.image}/>\n                                                    </Grid>\n                                                    <Grid item xs={8} sm={8} md={9}lg={9} className=\"content-bg\" >\n                                                        <CardContent className=\"card-category\">\n                                                        <h3 className=\"content\">{list.title}</h3>\n                                                        </CardContent>\n                                                    </Grid>\n                                                </Grid>\n                                            </div>\n                                        </Card>\n                                    </Grid>\n                                  :null\n                                }\n                            </Grid>\n                        )\n                    })\n                    }  \n            <Footer/>\n            </Grid>\n        :null\n    }\n\n\n</>\n);\n}\n\nexport default UserCategory;\n","import React, { useState, useEffect } from 'react';\nimport '../style/form.css';\nimport { Grid, Card } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Redirect } from 'react-router-dom';\nimport services from '../../services/services';\nimport Footer from '../footer/Footer';\nimport {Cookies, useCookies } from 'react-cookie';\n\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  list: {\n    margin: \"25px auto\",\n    textAlign: \"center\"\n  },\n  add: {\n    width: \"100%\"\n  }\n\n}));\n\nfunction Form() {\n  const classes = useStyles();\n  const [data, setData] = useState(false);\n  const [question, setQuestion] = useState([])\n  const [title, setTitle] = useState({});\n  const [cookies, setCookie] = useCookies(['userInfo']);\n  const cookie = new Cookies()\n  var categoryId\n\n  if (localStorage.getItem(\"categoryId\")) {\n    categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n\n  }\n  else {\n    categoryId = JSON.parse(cookie.get('categoryId'));\n\n  }\n  const handleSubmit = () => {\n    var selectLanguage = document.getElementById(\"selectLanguage\").value;\n    var name = document.getElementById(\"name\").value;\n\n    if ((name == \"\") || (name == null) || (name.length <= 2)) {\n      alert(\"please enter required name\");\n    } else if (selectLanguage == \"\") {\n      alert(\"please select Language\");\n    }\n\n    else {\n      var data = {\n        selectLanguage: selectLanguage,\n        name: name\n      }\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setCookie(\"userInfo\", JSON.stringify(data));\n      setData(true);\n    }\n\n  }\n\n  useEffect(() => {\n    getCategory();\n    getQuestionlist();\n\n  }, [])\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n      }\n    }\n    const result = await services.getCategory(categoryData, options)\n    setTitle(result.data.data);\n\n    document.title = result.data.data.title;\n  };\n\n  const getQuestionlist = async () => {\n    const data = {\n      categoryId: categoryId,\n      status:\"active\"\n    }  \n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n      }\n    }\n    const result = await services.getQuestionlist(data, options)\n    setQuestion(result.data.data)\n  };\n  if (data) return (<Redirect to=\"/questionlist\" push={true} />)\n  return (\n    <>\n      <div className={classes.gridContainer}>\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} className=\"form-grid\" >\n            <div justify=\"center\" className={classes.head}>\n              <h3 className=\"text1\" key={title}>{title.title}</h3>\n            </div>\n            <Card className=\"form-card\">\n              <h3 className=\"language\">Select Language:</h3>\n              <select id=\"selectLanguage\">\n                <option value=\"\" defaultValue>Select Language</option>\n                <option value=\"English\">English</option>\n              </select>\n              <h3 className=\"language\">Name</h3>\n              <input type=\"text\" id=\"name\" className=\"formname\" placeholder=\"Enter Your Name\" required /><br />\n              <div className=\"start-wrapper\">\n                <button className=\"started\" onClick={handleSubmit}> Start</button>\n              </div>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        <br />\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item className={classes.list} xs={11} sm={6} md={6} lg={4}>\n            <a href=\"#\">\n              <img src=\"/assets/image/Image5.png\" className={classes.add} />\n            </a>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        <Footer />\n      </div>\n\n    </>\n  );\n}\n\nexport default Form\n","\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Slide from '@material-ui/core/Slide';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst useStyle = makeStyles(theme =>({\n   modelhead:{\n        fontSize:\"15px\",\n        color:\"#000\",\n    \n      },\n  close: {\n    color: \"#012156\",\n    fontWeight:\"600\"\n  },\n   \n}))\nexport default function InstaModel(props) {\n    const {open,setOpen} = props\n    const classes=useStyle()\n  \n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n\n      <Dialog\n        open={open}\n        TransitionComponent={Transition}\n        keepMounted\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n      >\n        <DialogTitle className={classes.modelhead} id=\"alert-dialog-slide-title\">\n            <Typography  className={classes.modelhead}>How to add this link to your Instagram BIO</Typography>\n        </DialogTitle>\n        <DialogContent>\n                <ul>\n                   <li>Copy your link</li>\n                   <li>Go on your profile in the app</li>\n                   <li>Click on Edit Profile</li>\n                   <li>Paste the link under Website section</li>\n               </ul>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={()=>{setOpen(false)}} className={classes.close}>\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}","import React, { useState, useRef, useEffect } from 'react'\nimport '../style/sharelink.css'\nimport { Grid, Card, Popover, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport services from '../../services/services';\nimport InstaModel from './InstaModel';\nimport Footer from '../footer/Footer';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport { Helmet } from 'react-helmet';\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  grid: {\n    position: \"relative\"\n  },\n  typography: {\n    padding: \"10px\",\n    color: \"green\",\n    fontSize: \"15px\",\n    border: \"none\"\n  },\n\n}));\n\nfunction ShareLink(props) {\n\n  const id = props.location.state.quizId\n  const classes = useStyles();\n  const [allResult, setAllResult] = useState([])\n  const [open, setOpen] = useState(false);\n  const createId = JSON.parse(localStorage.getItem('createId'));\n  var dataId = createId.pop();\n  const [title, setTitle] = useState({})\n  var categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n\n  useEffect(() => {\n    getCategory();\n    getCreaterResult();\n    console.log(document.title);\n  }, [])\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n      }\n    }\n    const result = await services.getCategory(categoryData, options)\n    setTitle(result.data.data)\n  };\n\n  const textAreaRef = useRef(null);\n  function copyToClipboard(e) {\n    textAreaRef.current.select();\n    document.execCommand('copy');\n    e.target.focus();\n    ToastsStore.success(\"Copied SuccessFully\")\n  };\n\n  const getCreaterResult = async () => {\n    const dataid = {\n      quizId: dataId,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.Read\",\n      }\n    }\n    const result = await services.getCreaterResult(dataid, options)\n    setAllResult(result.data.data)\n  }\n  const refresh = () => {\n    window.location.reload();\n  }\n\n  return (\n    <>\n      <Helmet\n        title={title.title}\n        meta={[\n          { name: 'twitter:site', content: \"WeBestFriends\" },\n          { name: 'twitter:creator', content: \"WeBestFriends\" },\n          { name: 'twitter:title', content: title.title },\n          { name: 'twitter:image', content: title.image },\n          { property: 'og:title', content: document.title },\n          { property: 'og:description', content: title.title },\n          { property: 'og:image', content: title.image },\n        ]}\n      />\n      <div className={classes.gridContainer}>\n        <Grid container className={classes.grid}>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div justify=\"center\" className={classes.head}>\n              <h3 className=\"title\">{title.title}</h3>\n            </div>\n            <Card className=\"form-card\">\n              <div className=\"sharelink\">\n                <h3 className=\"challenge\">Your Challenge is ready</h3>\n                <img src=\"/assets/image/friend.svg\" />\n                <h3 className=\"this-link\">Share this link with your friends</h3>\n                <input ref={textAreaRef} className=\"quizInput\" defaultValue={`https://webestfriends.com/friendlink/${id}`} />\n                <br />\n              </div>\n              <div className=\"btn-wrapper\">\n                <button onClick={copyToClipboard} className=\"copy\"> Copy Link</button>\n                <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} />\n              </div>\n              <div className=\"btn-list\">\n                <button className=\"whatsapp\">\n                  <a href={`whatsapp://send?text=https://webestfriends.com/friendlink/${id}`} className=\"status\">\n                    <img src=\"/assets/image/whatsapp.png\" className=\"whatsapp-img\" /><span className=\"status\">WhatsApp Status</span>\n                  </a>\n                </button>\n                <button className=\"instagram\" onClick={() => setOpen(true)}>\n                  <img src=\"/assets/image/instagram.png\" className=\"instagram-img\" /><span className=\"instagram-status\">Add to Instagram Bio</span>\n                </button>\n                {/* <button className=\"sharing\">\n                                <a href=\"#\">\n                                  <img src=\"/assets/image/sharing.svg\"className=\"sharing-img\" /><span className=\"status\">Share</span>\n                                </a>\n                          </button>        */}\n              </div>\n              <div className=\"result-wrapper\">\n                <button className=\"result\" onClick={refresh}> View Results</button>\n              </div>\n              {allResult?.length ?\n                <>\n                  <div className=\"sharelink\">\n                    <h3 className=\"challenge\">Who knows you the best:</h3>\n                  </div>\n                  <Grid container justify=\"center\">\n                    <table className=\"table-data sharetable\">\n                      <thead>\n                        <tr>\n                          <th className=\"shareth\">Name</th>\n                          <th className=\"shareth\">Score</th>\n                        </tr>\n                      </thead>\n                      {\n                        allResult?.map((tabledata) => {\n                          return (\n                            <tbody>\n                              <tr>\n                                <td className=\"sharetd\">{tabledata.feedbackBy}</td>\n                                <td className=\"sharetd\">{tabledata.score}</td>\n                              </tr>\n                            </tbody>\n                          )\n                        })\n                      }\n                    </table>\n                  </Grid>\n                </> : null\n              }\n              <Grid item xs> </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs>\n\n          </Grid>\n        </Grid>\n        <InstaModel open={open}\n          setOpen={setOpen}\n        />\n        <Footer />\n      </div>\n\n    </>\n  );\n}\n\nexport default ShareLink\n","import React, { useState, useEffect } from 'react'\nimport '../style/friendlink.css'\nimport { Grid, Card } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams, Redirect, useHistory } from 'react-router-dom';\nimport services from '../../services/services';\nimport Footer from '../footer/Footer';\nimport { Helmet } from 'react-helmet';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n    gridContainer: {\n        paddingLeft: \"20px\",\n        paddingRight: \"20px\",\n        background: \"#7555D9\",\n        minHeight: \"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n    },\n    head: {\n        textAlign: \"center\"\n    },\n    list: {\n        margin: \"25px auto\",\n        textAlign: \"center\"\n    },\n    add: {\n        width: \"100%\"\n    },\n    page:{\n   marginTop:\"45px\"\n    }\n\n\n}));\n\nfunction FriendLink() {\n    const classes = useStyles();\n    const history = useHistory()\n    const [quiz, setQuiz] = useState([])\n    const [list, setList] = useState({})\n    const [right, setRight] = useState(false)\n    const [loader, setLoader] = useState(false)\n    var { id } = useParams();\n    useEffect(() => {\n        if (localStorage.getItem('createId') != null) {\n            var jsondata = JSON.parse(localStorage.getItem('createId'))\n            jsondata.map(item => {\n\n                console.log(item, typeof item)\n                if (item === id) {\n                    history.push({ pathname: \"/sharelink\", state: { quizId: id } });\n                }\n\n            });\n        }\n        getAdminQuiz();\n    }, [])\n\n    const getAdminQuiz = async () => {\n        const data = {\n            quizId: id\n        }\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",\n\n            }\n        }\n        const result = await services.getAdminQuiz(data, options)\n        console.log(result.data.data)\n        setQuiz(result.data.data)\n        setList(result.data.data.quizQuestions)\n\n    };\n    const playby = () => {\n        var name = document.getElementById(\"feedbackBy\").value;\n        if ((name == \"\") || (name == null) || (name.length <= 2)) {\n            alert(\"please enter required name\");\n            return true;\n        }\n        else {\n            localStorage.setItem(\"feedbackby\", name);\n            setRight(true)\n        }\n\n    }\n    if (right) {\n        return (<Redirect to={{\n            pathname: '/quizlink',\n            state: { quizQuestions: quiz }\n        }} push={true} />)\n    }\n    return (\n        <>\n            \n            <div className={classes.gridContainer}>\n                <Grid container>\n                    <Grid item xs></Grid>\n                    {quiz?.category &&\n                    <>\n                      <Helmet>\n                      <title>{quiz.categoryData.title}</title>\n                                  <meta property='og:title' content={document.title} />\n                              </Helmet>\n                        <Grid item xs={11} sm={6} md={6} lg={4} className={classes.page}>\n                            <div justify=\"center\" className={classes.head}>\n                                <h3 className=\"dare\">{quiz.categoryData.title}</h3>\n                            </div>\n                            <Card className=\"form-card\">\n                                <h3 className=\"how\">How well do you know {quiz.createdBy}?</h3>\n                                <h4 className=\"First\">Name</h4>\n                                <input type=\"text\" id=\"feedbackBy\" className=\"name\" placeholder=\"Enter Your Name\" />\n                                <br />\n                                <div className=\"friendStart\">\n                                    <button className=\"started\" onClick={playby}> Start</button>\n                                </div>\n                            </Card>\n                        </Grid>\n                        </>\n                    }\n                    <Grid item xs></Grid>\n                </Grid>\n                <br />\n                <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item className={classes.list} xs={11} sm={6} md={6} lg={4}>\n                        <a href=\"#\">\n                            <img src=\"/assets/image/Image5.png\" className={classes.add} />\n                        </a>\n                    </Grid>\n                    <Grid item xs></Grid>\n                </Grid>\n                <Footer />\n            </div>\n\n\n        </>\n    );\n}\n\nexport default FriendLink\n","import React, { useState, useEffect } from 'react';\nimport '../style/score.css';\nimport {  Grid, Card} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactSpeedometer from \"react-d3-speedometer\";\nimport { Link } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport services from '../../services/services';\n\n\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    \n  }));\n  \nfunction Score(props) {\n  \n  const category=props.location.state.category.category;\n    var datalist=JSON.parse(localStorage.getItem('alldata'));\n    var list=datalist['list'];\n    var score=datalist.score.score;\n    var createdBy=datalist['createdBy'];\n    const [title,setTitle]=useState({})\n  const feedbackBy=(localStorage.getItem('feedbackby'))\n  useEffect(() => {\n    getCategory();\n}, [])\n\nconst  getCategory = async () => {\n const categoryData={\n     categoryId:category\n }\n\n const options = {\n     method: 'POST',\n     headers: {\n         \"Apiuserid\": \"49507884\",\n         \"Scope\": \"In.QuizApp.READ\",   \n     }\n }\n const result = await services.getCategory(categoryData,options)\n setTitle(result.data.data)\n};\n     var value=((score/list)*100);\n  if(value >= 81 && value <=100)\n  {\n    var text=\"Best Friend\"  \n  }\n  else if(value >= 61 && value <=80)\n  {\n     text=\"Good Friend\"\n  }\n  else if(value >= 41 && value <=60)\n  {\n     text =\"Average Friend\"\n  }\n  else if(value >= 21 && value <=40)\n  {\n     text=\"Bad Friend\"\n  }\n  else{\n     text =\"Very Bad Friend\"\n  }\n\n  const classes = useStyles();\n    return (\n    <>\n    <div className={classes.gridContainer}>\n    <Grid container>\n       <Grid item xs></Grid>\n      <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\" className={classes.head}>\n              <h3 className=\"title\" key={title.title} >{title.title}</h3>\n          </div>\n          <Card className=\"score-card\">\n               <h3 className=\"how\">Your Score:{score}/{list}</h3>\n            <Grid container justify=\"center\">  \n                <ReactSpeedometer\n                    maxValue={list}\n                    value={score}\n                    minValue={0}\n                    className=\"speedometer\"\n                    segments={5}\n                    ringWidth={60}\n                    needleHeightRatio={.5}\n                    needleTransition={\"easeBackInOut\"}\n                    segmentColors={[\"#fff\",\" #fff\",\" #fff\",\" #fff\"]}\n                    needleColor={\"#707070\"}\n                    customSegmentLabels={[\n                      {\n                        text: \"😡\",\n                        position: \"INSIDE\",\n                        color:\"#fff\",\n                        fontSize:\"35px\",\n                        \n                      \n                        \n                      },\n                      {\n                        text: \"😞\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                      \n                      },\n                      {\n                        text: \"😐\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                        \n                      },\n                      \n                      {\n                        text: \"😊\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                      \n                      },\n                      {\n                        text: \"😍\",\n                        position: \"INSIDE\",\n                        color:\"#fff\",\n                        fontSize:\"35px\",\n                      \n                        \n                      },\n                    ]}\n                /> \n             </Grid>\n             <Grid container justify=\"center\">\n             <h4 className=\"score-value\">{text}</h4>\n             </Grid>\n            <Link to=\"/\"><button className=\"copy\">Create Your Quiz</button></Link> \n            <Link to=\"/quizcategory\"><button className=\"copy\">Play More Quiz</button></Link>  \n              <div className=\"sharelink\">\n                <h3 className=\"knows\">Who knows {createdBy} best:</h3>\n              </div>\n                              <Grid container justify=\"center\">                   \n                                    <table className=\"table-data sharetable\">\n                                        <thead>\n                                        <tr>\n                                            <th className=\"shareth\">Name</th>\n                                            <th className=\"shareth\" >Score</th>\n                                        </tr>\n                                        </thead>\n                                       <tbody>\n                                       <tr>\n                  <td className=\"sharetd\">{feedbackBy}</td>\n                  <td className=\"sharetd\">{score}</td>\n                                        </tr>\n                                       </tbody>\n                                    </table>                   \n                              </Grid>              \n        </Card>\n\n    </Grid>\n    <Grid item xs>\n\n    </Grid>\n\n    </Grid>\n    <br/>\n    <Grid container>\n    <Grid item xs>\n\n    </Grid>\n    <Grid item xs={11} sm={6} md={6} lg={4}>\n\n    </Grid>\n    <Grid item xs>\n\n    </Grid>\n    </Grid>\n    <Footer/>\n    </div>\n    \n    </>\n);\n}\n\nexport default Score\n","import React from 'react'\nimport '../style/form.css'\nimport {  Grid, Card} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      link:{\n       fontSize:\"25px\"\n      },\n     gmail:{\n         background:\"#fff\",\n         borderRadius: \"35px\",\n         border: \"none\",\n         fontSize:\"22px\",\n         color:\"#012156\",\n        padding:\"0px 20px\",\n          margin:\" -15px\",\n          textAlign:\"center\",\n          fontFamily:\"Baloo Bhai 2\",\n          fontWeight:\"600px\"\n     },\n     link:{\n         fontSize:\"25px\",\n         color:\"#FFFFFF\",\n         padding:\"0px 20px\",\n         textAlign:\"center\",\n         fontFamily:\"chicle\",\n         fontWeight:\"200px\"\n     }\n  }));\n  \nfunction Gmail() {\nconst classes = useStyles();\nreturn (\n<>\n<div className={classes.gridContainer}>\n<Grid container>\n<Grid item xs>\n  \n</Grid>\n<Grid item xs={11} sm={6} md={6} lg={4} >\n  \n<div justify=\"center\" className={classes.head}>\n<h3 className=\"text1\">Contact</h3>\n<h4 className={classes.link}>Send any questions, ideas or suggestions</h4>\n</div>\n  <Card className={classes.gmail}>\n    <h4>datingvalue@gmail.com</h4>\n    </Card>\n  \n</Grid>\n<Grid item xs>\n  \n</Grid>\n\n</Grid>\n<br/>\n<Grid container>\n<Grid item xs>\n  \n</Grid>\n<Grid item xs={11} sm={6} md={6} lg={4}>\n  \n</Grid>\n<Grid item xs>\n  \n</Grid>\n</Grid>\n\n\n</div>\n\n</>\n);\n}\n\nexport default Gmail\n","import React,{useState,useEffect} from 'react'\nimport {Grid,Card, CardContent} from '@material-ui/core';\nimport { makeStyles,withStyles } from '@material-ui/core/styles';\nimport '../style/playquiz.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport { Helmet } from 'react-helmet';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n    root: {\n      height: 10,\n      borderRadius: 5,\n      width:\"100%\",\n    },\n    colorPrimary: {\n      backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n    },\n    bar: {\n      borderRadius: 5,\n      backgroundColor: '#FFDD52',\n    },\n  }))(LinearProgress);\n  \nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      pro:{\n          textAlign:\"center\"\n      }\n    \n  }));\nfunction PlayQuiz({quizlist,quizId,createdBy,category}) {\n\n const[score,setScore]=useState(0)\n const [activeStep, setActiveStep] = React.useState(0);\n const [meter,setMeter]=useState(false);\n const [correctAns,setCorrectAns]= useState(0);\n const [clickedAns,setClickedAns]= useState(0);\n const [progress,setProgress]=useState(false);\n const [count,setCount]=useState(1);\n const json =localStorage.getItem(\"feedbackby\")\n const [title,setTitle]=useState({})\n \n\n  useEffect(() => {\n    getCategory();\n}, [])\n\nconst  getCategory = async () => {\n const categoryData={\n     categoryId:category\n }\n\n const options = {\n     method: 'POST',\n     headers: {\n         \"Apiuserid\": \"49507884\",\n         \"Scope\": \"In.QuizApp.READ\",   \n     }\n }\n const result = await services. getCategory(categoryData,options)\n setTitle(result.data.data)\n};\n  let quiz = [\n    {\n        label: quizlist?.question,\n        options: quizlist?.options,\n    },\n];\n\n    const classes = useStyles();\n    if (quizlist?.length) {\n      quiz = quizlist;\n    }\n    \n    function showProgress(index) {\n\n      var increment = Math.ceil((count) / (maxSteps) * 100);\n      setProgress(increment)\n      \n    }\n    const maxSteps = quiz.length;\n    const handleSelect = (optId,label)=>{\n       setClickedAns(optId)\n       if(optId===quiz[activeStep].answerId){\n            increaseScore();\n           setCorrectAns(quiz[activeStep].answerId)\n       }\n       else{\n         setCorrectAns(quiz[activeStep].answerId)\n       }\n     \n    }\n\n\nconst handleNext = (optId,label)=>{\n\n  if(maxSteps-1 !==activeStep){\n    setTimeout(()=>{setActiveStep(prevActiveStep => prevActiveStep + 1)\n      setCount(count+1)},500)\n    \n   \n  }\n  else{\n   \n     handleSubmit()\n  }\n  handleSelect(optId,label);\n\n  showProgress(quiz[activeStep].qusId);\n}\nconst increaseScore = ()=>{\n  setScore(score+1)\n}\nconst handleSubmit = async() =>{\n    const data={\n      quizId:quizId,\n      feedbackBy:json,\n      score:score\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n      }\n    }\n    const result = await services.getResult(data, options)\n     setMeter(result.data.data)\n}\nif(meter===true)\n{\n  var datalist={list:quizlist.length,quizId:quizId,createdBy:createdBy,score:{score}}\n  localStorage.setItem('alldata',JSON.stringify(datalist))\n  return(<Redirect to={{\n    pathname: '/score',\n    state:{category:{category}}}} push={true} />)\n\n}\n    return (\n        <div className={classes.gridContainer}>\n          <Helmet>\n  <title>{title.title}</title>\n      </Helmet>\n        <Grid container>\n           <Grid item xs></Grid>\n            <Grid item xs={11} sm={6} md={6} lg={4} >\n                 <div justify=\"center\">\n                     <h3 className=\"title\">{title.title}</h3>\n                   \n                 </div>\n                 <div justify=\"center\">     \n                     <h4 className=\"question\">Question <span>{count}/{maxSteps}</span></h4>\n                 </div>\n                 <div justify=\"center\">\n                    <BorderLinearProgress variant=\"determinate\" value={progress} />\n                 </div>\n                 <Card className=\"playoptioncard\">\n                <h3 className=\"questionname\">{quiz[activeStep].title}</h3>\n                   <div className=\"playcard\">\n                    {\n                    quiz[activeStep]?.options?.map((options,index)=>{\n\n                    return(\n                        <Grid\n                      container\n                      className= {\n                        correctAns === options.optionId ?\n                        'correctplay' : \n                      clickedAns === options.optionId?\n                      'incorrectplay' : 'options'}\n                      correct={quiz[activeStep].answer}\n                      key={index}\n                      onClick={()=>{handleNext(options.optionId,options.optionLabel)}}\n                      >\n                      <Grid item xs={4} sm={4} md={4}lg={4} className=\"img-div\">\n                      {options.optionImg.length\n                                ?<img className=\"playImg\" \n                                  src={options.optionImg}/>\n                                :<span></span>\n                              }\n                      </Grid> \n                      <Grid item xs={8} sm={8} md={8}lg={8} className=\"card-div\">\n                        <CardContent className=\"playcontent\">\n                          <h3 className=\"play-head\"id=\"cardText\">\n                        {options.optionLabel}\n                          </h3>\n                        </CardContent>\n                      </Grid>\n                      </Grid>\n                    )\n\n                    })\n                    } \n                </div>\n         </Card>\n            </Grid>\n            <Grid item xs></Grid>\n       </Grid>\n       <Footer/>\n  </div>\n    )\n}\n\nexport default PlayQuiz\n","import React from 'react';\nimport PlayQuiz from './PlayQuiz';\n\nfunction PlayQuizApi(props) {\n   const playQuizlist=props.location.state.quizQuestions.quizQuestion;\n   const createdBy=props.location.state.quizQuestions.createdBy;\n   const quizId=props.location.state.quizQuestions.quizId;\n   const category=props.location.state.quizQuestions.category;\n\n    return (\n        <div>\n            {\n                 playQuizlist?.length &&\n               <PlayQuiz quizlist={playQuizlist} quizId={quizId} createdBy={createdBy} category={category} />\n            }\n               \n        </div>\n    )\n}\n\nexport default PlayQuizApi\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react'\nimport {  Grid, Card} from '@material-ui/core';\nimport '../style/disclaimer.css'\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#fff\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    \n  }));\nfunction Privacy() {\n    const classes=useStyles()\n    return (\n        <div className={classes.gridContainer}>\n        <Grid container>\n          <Grid item xs>\n            \n          </Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} className=\"form-grid\" >\n                <div justify=\"center\" className={classes.head}>\n                   <h3 className=\"dis\">Privacy Policy</h3>\n                </div>\n                <div className=\"para-text\">\n                    <p className=\"para\">If Effective date: November 15, 2020 <br/>\n                    <br/>\n                    https://testyourbond.site (\"us\", \"we\", or \"our\") operates the https://webestfriends.com/ website (the \"Service\").\n                    <br/>\n                    <br/>\n                     This page informs you of our policies regarding the collection, use, and disclosure of personal data when you use our Service and the choices you have associated with that data. \n                     <br/>\n                     <br/>\n                     We use your data to provide and improve the Service. By using the Service, you agree to the collection and use of information in accordance with this policy. Unless otherwise defined in this Privacy Policy, terms used in this Privacy Policy have the same meanings as in our Terms and Conditions, accessible from https://webestfriends.com/</p>\n                </div>\n                <div justify=\"center\" className={classes.head}>\n                   <h3 className=\"dis\">Information Collection And Use</h3>\n                </div>\n                <div className=\"para-text\">\n                    <p className=\"para\">\n                    We collect several different types of information for various purposes to provide and improve our Service to you.\n                    </p>\n                </div>\n                <div justify=\"center\" className={classes.head}>\n                   <h3 className=\"dis\">Update</h3>\n                </div>\n                 <div className=\"para-text\">\n                    <p className=\"para\">\n                    This site disclaimer was last updated on: Thursday, November 15th, 2018 · Should we update, amend or make any changes to this document, those changes will be prominently posted here\n                    </p>\n                </div>\n                <div className=\"go-wrapper\">\n                <Link to=\"/\"><button className=\"go\">Go Back</button></Link>\n                </div>\n          </Grid>\n          <Grid item xs></Grid>\n       </Grid>    \n    </div>\n    )\n}\n\nexport default Privacy\n","import { makeStyles } from '@material-ui/core';\nimport React from 'react'\nimport {  Grid, Card} from '@material-ui/core';\nimport '../style/disclaimer.css'\nimport { Link } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#fff\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    \n  }));\nfunction Discliamer() {\n    const classes=useStyles()\n    return (\n        <div className={classes.gridContainer}>\n        <Grid container>\n          <Grid item xs>\n            \n          </Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} className=\"form-grid\" >\n                <div justify=\"center\" className={classes.head}>\n                   <h3 className=\"dis\">Disclaimer</h3>\n                </div>\n                <div className=\"para-text\">\n                    <p className=\"para\">If you require any more information or have any questions about our site's disclaimer, please feel free to contact us from https://webestfriends.com/contact.</p>\n                </div>\n                <div className=\"para-text\">\n                    <p className=\"para\">\n                All the information on this website is published in good faith and for general information purpose only. https://webestfriends.com/ does not make any warranties about the completeness, reliability and accuracy of this information. Any action you take upon the information you find on this website (https://webestfriends.com/), is strictly at your own risk. https://webestfriends.com/ will not be liable for any losses and/or damages in connection with the use of our website.\n                </p>\n                </div>\n                <div className=\"para-text\">\n                    <p className=\"para\">\n                    From our website, you can visit other websites by following hyperlinks to such external sites. While we strive to provide only quality links to useful and ethical websites, we have no control over the content and nature of these sites. These links to other websites do not imply a recommendation for all the content found on these sites. Site owners and content may change without notice and may occur before we have the opportunity to remove a link which may have gone 'bad'.\n                    </p>\n                </div>\n                <div className=\"para-text\">\n                    <p className=\"para\">\n                    If you require any more information or have any questions about our site's disclaimer, please feel free to contact us from https://webestfriends.com/contact.\n                    </p>\n                </div>\n                <div justify=\"center\" className={classes.head}>\n                   <h3 className=\"dis\">Consent</h3>\n                </div>\n                <div className=\"para-text\">\n                    <p className=\"para\">\n                    By using our website, you hereby consent to our disclaimer and agree to its terms.\n                    </p>\n                </div>\n                <div justify=\"center\" className={classes.head}>\n                   <h3 className=\"dis\">Update</h3>\n                </div>\n                 <div className=\"para-text\">\n                    <p className=\"para\">\n                    This site disclaimer was last updated on: Thursday, November 15th, 2018 · Should we update, amend or make any changes to this document, those changes will be prominently posted here\n                    </p>\n                </div>\n                <div className=\"go-wrapper\">\n                <Link to=\"/\"><button className=\"go\">Go Back</button></Link>\n                </div>\n          </Grid>\n          <Grid item xs></Grid>\n       </Grid>    \n    </div>\n    )\n}\n\nexport default Discliamer\n","import React, { useState, useEffect} from 'react'\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/questionlist.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport { withCookies, Cookies, useCookies } from 'react-cookie';\nimport { Helmet } from 'react-helmet';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\",\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52',\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n\n}));\nfunction QuestionList({ questionlist,limit }) {\n  const classes = useStyles();\n  const [title, setTitle] = useState({})\n  const [stateCount, setStateCount] = React.useState([])\n  let [activeStep, setActiveStep] = React.useState(0);\n let [answerList, setAnswerList] = React.useState([]);\n  const [createQuiz, setCreateQuiz] = useState();\n  const [result, setResult] = useState(false);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  const [clickedAns, setClickedAns] = useState(0);\n  const [cookies, setCookie] = useCookies(['createId']);\n  var dummyArr = []\n\n  const data = JSON.parse(localStorage.getItem('userInfo'));\n  const createdBy = data['name'];\n  const cookie = new Cookies();\n \n  var categoryId\n  if(localStorage.getItem(\"categoryId\"))\n  {\n   categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n \n  }\n  else{\n      categoryId=JSON.parse(cookie.get('categoryId'));\n     \n  }\n\n  \n\n  useEffect(() => {\n    const index = questionlist.map((value, index) => index);\n    setStateCount(index)\n    getCategory();\n  }, [])\n\n  const getCategory = async () => {\n    const categoryData = {\n      categoryId: categoryId\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n      }\n    }\n    const result = await services.getCategory(categoryData, options)\n    setTitle(result.data.data)\n    \n  };\n  let tutorialSteps = [\n    {\n      label: questionlist?.question,\n      options: questionlist?.optionsArray,\n      status:questionlist?.questionStatus\n    },\n  ];\n  if (questionlist?.length) {\n    tutorialSteps = questionlist;\n  }\n  function showProgress(index) {\n    var increment = Math.ceil((count) / (limit) * 100);\n    setProgress(increment)\n  }\n\n  const handleNext = (id, label) => {\n\n    const qusId = questionlist[activeStep]?.qusId;\n    const answer = label;\n    const answerId = id;\n    setClickedAns(id)\n    setAnswerList(\n      [...answerList, { qusId: qusId, answer: answer, answerId: answerId }]\n    )\n    if (limit > answerList.length + 1) {\n      setTimeout(()=>{\n        stateCount.shift();\n      activeStep = stateCount[0];\n      setActiveStep(stateCount[0]);\n      setCount(count + 1)\n      },500)\n   \n    }\n    else {\n      setTimeout(() => {\n        handleSubmit([...answerList, { qusId: qusId, answer: answer, answerId: answerId }])\n      }, 500)\n    }\n    showProgress(tutorialSteps[activeStep].qusId);\n  }\n\n  const handleSkip = (steps) => {\n    stateCount.push(steps);\n    stateCount.shift();\n    activeStep = stateCount[0];\n    setActiveStep(stateCount[0]);\n\n  };\n\n  const handleSubmit = async ([...answerList]) => {\n    const list = {\n      categoryId: categoryId,\n      createdBy: createdBy,\n      quizQuestions: answerList\n    }\n\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n      }\n    }\n    const result = await services.createQuestionQuiz(list, options)\n    setCreateQuiz(result.data.data.quizId)\n    setResult(true)\n    if (result.data.code === 200) {\n      setResult(true)\n    }\n  };\n\n  if (localStorage.getItem(\"createId\") == null||localStorage.getItem(\"createId\") == []) {\n    localStorage.setItem(\"createId\", JSON.stringify(dummyArr))\n    setCookie(\"createId\", dummyArr)\n  }\n  else {\n    dummyArr = JSON.parse(localStorage.getItem(\"createId\"));\n    dummyArr.push(createQuiz)\n  \n  }\n  if (result) {\n    localStorage.setItem(\"createId\", JSON.stringify(dummyArr))\n\n    return (<Redirect to={{ pathname: \"/sharelink\", state: { quizId: createQuiz } }} push={true} />)\n  }\n\n  return (\n    <div className={classes.gridContainer}>\n      <Helmet>\n        <title>{title.title}</title>\n      </Helmet>\n      <Grid container>\n        <Grid item xs></Grid>\n        <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\">\n            <h3 className=\"title\">{title.title}</h3>\n          </div>\n          <div justify=\"center\">\n            <h4 className=\"question\">Question <span>{count}/{limit}</span></h4>\n          </div>\n          <div justify=\"center\">\n            <BorderLinearProgress variant=\"determinate\" value={progress} />\n          </div>\n{\n      \n   <Card className=\"questioncard\">\n\n  <h3 className=\"questionname\">{tutorialSteps[activeStep]?.question}</h3>\n  <div className=\"optioncard\">\n    {\n      tutorialSteps[activeStep]?.optionsArray?.map((options, index) => {\n       \n        return (\n          <>\n           {options.optionImg.length ?\n            <Grid container className={ clickedAns === options.optionId ? 'clickoption' :  'nonclickoption'} onClick={() => { handleNext(options.optionId, options.optionLabel) }} key={index}id=\"cardbox\">\n              <Grid item xs={4} sm={4} md={4} lg={4} className=\"image-div\" >\n              <img className=\"optionImg\" src={options.optionImg} /> \n              </Grid>\n              <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                <CardContent className=\"cardcontent\">\n                  <h3 className=\"optioncontent\" id=\"cardText\">\n                    {options.optionLabel}\n                  </h3>\n                </CardContent>\n              </Grid>\n           </Grid>\n         : \n         <Grid justify=\"center\" container className=\"new\">\n            <Grid item xs={8} sm={8} md={8} lg={8} className={\n            clickedAns === options.optionId ?'newclickoption' : 'newnonclickoption'} onClick={() => { handleNext(options.optionId, options.optionLabel) }} key={index} id=\"cardbox\">\n                <CardContent className=\"newcontent\">\n                  <h3 className=\"optioncontent\" id=\"cardText\">\n                    {options.optionLabel}\n                  </h3>\n                </CardContent>\n            </Grid>\n         </Grid>\n         }\n      </>\n        )\n      })\n    }\n  </div>\n  <div className=\"start-wrapper\">\n    <button className=\"skip\" onClick={() => { limit > answerList.length + 1 ? handleSkip(activeStep) : handleSubmit() }}>Skip the Question</button>\n  </div>\n</Card>\n}\n        </Grid>\n        <Grid item xs></Grid>\n      </Grid>\n      <Footer />\n    </div>\n  )\n}\n\nexport default QuestionList;\n","import React, { useState,useEffect } from 'react'\nimport services from '../../services/services';\nimport QuestionList from './QuestionList';\nimport { withCookies, Cookies } from 'react-cookie';\n\nfunction QuestionApi() {\n   const [question,setQuestion]=useState([])\n   const [limit,setLimit]=useState([])\n   const cookies = new Cookies();\n   var categoryId\n    if(localStorage.getItem(\"categoryId\"))\n    {\n     categoryId = JSON.parse(localStorage.getItem(\"categoryId\"));\n    }\n    else{\n        categoryId=JSON.parse(cookies.get('categoryId'));\n    }\n    useEffect(() => {\n        getQuestionlist();\n    }, [])\n\n    const getQuestionlist = async () => {\n        const data={\n            categoryId:categoryId\n        }\n   \n        const options = {\n            method: 'POST',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",   \n\n            }\n        }\n        const result = await services.getQuestionlist(data,options)\n        console.log(result)\n        setLimit(result.data.limit)\n        setQuestion(result.data.data)\n    };\n\n    return (\n        <div>\n            {\n             question?.length &&\n                <QuestionList questionlist={question} limit={limit} /> \n            }\n                    \n        </div>\n    )\n}\n\nexport default QuestionApi;\n","import React,{useEffect,useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useParams } from 'react-router-dom';\nimport { Grid, Divider, Card, CardContent, Button } from '@material-ui/core';\nimport services from '../../services/services';\nimport AdminLink from '../management/AdminLinks';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      width: '100%',\n    },\n    gridContainer: {\n      paddingTop:\"20px\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n    headPart:{\n        backgroundColor:\"#133b5c\",\n      color:\"#ffff\"\n    },\n    icon:{\n        color:\"#fff\"\n    },\n    categorytitle:{\n        marginTop:\"50px\",\n        color:\"#133b5c\",\n        fontSize:\"35px\",\n        fontWeight:\"600\",\n        textAlign:\"center\"\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(20),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n    optionimg:{\n      float:\"left\",\n      padding:\"10px\",\n      width:\"70%\"\n    },\n    buttonwrap:{\n      textAlign:\"center\"\n    },\n    active:{\n      margin: \"3px\",\n      fontSize:\"10px\",\n      background:\"#133b5c\",\n      color:\"#fff\",\n    },\n    dlt:{\n      margin: \"3px\",\n      fontSize:\"10px\",\n      background:\"#E70808\",\n      color:\"#fff\",\n    },\n  }));\n  \n  export default function AllQuestionList() {\n    const classes = useStyles();\n    const [title,setTitle]=useState({})\n    const {id} = useParams();\n    const [questionList, setQuestionList] = useState([]);\n    const[status,setStatus]=useState()\n    const data = JSON.parse(localStorage.getItem('friend'));\n    const jwt = data['jwt'];\n    useEffect(() => {\n      getCategory();\n        getQuestionlist();\n    }, [])\n\n  \n  const  getCategory = async () => {\n   const categoryData={\n       categoryId:id\n   }\n  \n   const options = {\n       method: 'POST',\n       headers: {\n           \"Apiuserid\": \"49507884\",\n           \"Scope\": \"In.QuizApp.READ\",   \n       }\n   }\n   const result = await services. getCategory(categoryData,options)\n   setTitle(result.data.data)\n  };\n    const getQuestionlist = async () => {\n        const data={\n             categoryId:id\n        }\n        const options = {\n            method: 'GET',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",\n            }\n        }\n        const result = await services.getQuestionlist(data,options)\n        console.log(result)\n        setQuestionList(result.data.data)\n    };\n\n    const checkedStatus = (id) => async () => {\n    \n      var data = {\n       qusId: id,\n      }\n      const options = {\n        method: 'POST',\n        headers: {\n          \"Apiuserid\": \"49507884\",\n          \"Scope\": \"In.QuizApp.READ\",\n          \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n        }\n      }\n      const result = await services.questionStatus(data, options)\n      if(result.data.status===200){\n        setStatus(true)\n      }\n  \n    }\n  if(status){\n    window.location.reload();\n  }\n    return (\n      <div className={classes.root}>\n        <AdminLink/>\n        <h3 className={classes.categorytitle}>{title.title}</h3>\n          <Grid\n                container\n                className={classes.gridContainer}\n                justify=\"center\"\n             >\n               {\n                 questionList.map((list,index)=>{\n                   return(\n                    <Grid container key={index}>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                      <Card className=\"questioncard\">\n                   <h3 className=\"questionname\">{list.question}</h3>\n                         <div className=\"optioncard\">\n                         {\n                           list.optionsArray.map((option,index)=>{\n                                return(\n                                   <>\n                                {option.optionImg.length ?\n                                  <Grid container className='nonclickoption'>\n                                    <Grid item xs={4} sm={4} md={4} lg={4} className=\"image-div\" >\n                                    <img className=\"optionImg\" src={option.optionImg} /> \n                                    </Grid>\n                                    <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                                      <CardContent className=\"cardcontent\">\n                                        <h3 className=\"optioncontent\" id=\"cardText\">\n                                          {option.optionLabel}\n                                        </h3>\n                                      </CardContent>\n                                    </Grid>\n                                 </Grid>\n                               : \n                               <Grid justify=\"center\" container className=\"new\">\n                                  <Grid item xs={8} sm={8} md={8} lg={8} className='newnonclickoption'>\n                                      <CardContent className=\"newcontent\">\n                                        <h3 className=\"optioncontent\" id=\"cardText\">\n                                          {option.optionLabel}\n                                        </h3>\n                                      </CardContent>\n                                  </Grid>\n                               </Grid>\n                               }\n                               </>\n                                )\n                           })\n                         }\n                               \n                    \n                        </div>\n                        \n                        <div className={classes.buttonwrap}>\n                        {\n                     list.questionStatus=== \"active\" ?\n                     <Button\n                     className={classes.dlt}\n                     onClick={checkedStatus(list.qusId)}\n                     size=\"small\"\n                     variant=\"contained\"\n                     >\n                    Deactive\n                    </Button> \n                    :\n                         <Button\n                         className={classes.active}\n                         size=\"small\"\n                         variant=\"contained\"\n                         onClick={checkedStatus(list.qusId)}\n                         >\n                        Active\n                        </Button>\n                    }\n                        </div>\n                        \n                      </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n                   )\n                 })\n               }\n                \n         </Grid>\n        </div>\n  );\n}","import { Card, FormControl, Grid, InputLabel, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport React, { useState } from 'react';\nimport \"./createQuiz.css\"\nimport AdminLink from '../management/AdminLinks';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n  formControl: {\n    alignItems: \"center\"\n\n  },\n}));\n\nfunction CreateQuiz() {\n  const classes = useStyles();\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const [image, setImage] = useState('')\n  const [loggedIn, setLoggedIn] = useState(false)\n  const [language, setLanguage] = useState([])\n  const [question, setQuestion] = useState(\n    [\n      {\n        questionTitle: '',\n        priority: 1,\n        answer: \"\",\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      },\n    ]\n  )\n  const [resultdata, setResultData] = useState(\n    [\n      {\n        maxScore: '',\n        minScore: \"\",\n        title: \"\",\n        phrase: \"\",\n        needle: \"\",\n        resultImage: \"\"\n      }\n    ]\n  )\n\n  const addQuestion = () => {\n    setQuestion([\n      ...question,\n      {\n        questionTitle: '',\n        priority: 1,\n        answer: \"\",\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      }\n    ])\n  }\n\n  const removeQuestion = (index) => {\n    const list = [...question]\n    list.splice(index, 1);\n    setQuestion(list);\n  }\n  \n  const addresult = () => {\n    setResultData([\n      ...resultdata,\n      {\n        maxScore: '',\n        minScore: \"\",\n        title: \"\",\n        phrase: \"\",\n        needle: \"\",\n        resultImage: \"\"\n      }\n    ])\n  }\n\n  const removeresult = (index) => {\n    const listdata = [...resultdata]\n    listdata.splice(index, 1);\n    setResultData(listdata);\n  }\n  const addOption = (questionIndex) => {\n    const options = question[questionIndex];\n    options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n  const handleChange = (event) => {\n    setLanguage(event.target.value);\n  };\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options, optionsArray: [...newArray] }];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n\n  const handleImage = async (event) => {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n    output.onload = function () {\n      URL.revokeObjectURL(output.src) // free memory\n    }\n    var imgpath = event.target.files[0]\n    const data = imgpath.name;\n    console.log(data)\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    console.log(ext[0], ext[1])\n    var file_path = ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path)\n    var img = new FormData()\n    img.append(\"bannerImg\", imgpath)\n    img.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.bannerImage(img, options);\n    console.log(result.message)\n    setImage(result.data.message)\n  }\n\n  const optionImage = async (questionIndex, index, event) => {\n    const values = [...question];\n    var imgpath = event.target.files[0]\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path)\n    var img = new FormData()\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  }\n  const handleResultImage = async (event, resindex) => {\n    const resultValue = [...resultdata];\n    var resultimg = event.target.files[0];\n    const data = resultimg.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    var result_path = 'a'+resindex + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, result_path)\n    var resultimage = new FormData()\n    resultimage.append(\"resultImg\", resultimg);\n    resultimage.append(\"newName\", myimg);\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(resultimage, options);\n    console.log(result)\n    resultValue[resindex].resultImage = result_path;\n    setResultData(resultValue);\n  }\n  const handleOption = (questionIndex, index, event) => {\n\n    if ((event.target.value === \"\" && event.target.value === null) || (event.target.value.length <= 2)) {\n      alert(\"please fill option\");\n      return true;\n    }\n    else {\n      const values = [...question];\n      values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n      setQuestion(values);\n    }\n  }\n  const radioclick = (questionIndex, index) => {\n    const values = [...question];\n    var clicked = values[questionIndex].optionsArray[index].optionLabel\n    if (clicked === \" \") {\n      alert(\"please choose one answer\")\n    }\n    else {\n      values[questionIndex].answer = clicked\n      setQuestion(values);\n    }\n\n  }\n\n  const handleQuestion = (index, event) => {\n    if (language.length <= 0) {\n      alert(\"Please choose language\");\n      return;\n    }\n    if ((event.target.value === \"\" && event.target.value === null) || (event.target.value.length <= 3)) {\n      alert(\"please fill question\")\n      return true;\n    }\n    else {\n      const values = [...question];\n      values[index].questionTitle = event.target.value;\n      setQuestion(values);\n    }\n\n  }\n\n  const handleMax = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Maxscore\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].maxScore = event.target.value;\n      setResultData(resultValue);\n\n    }\n  }\n  const handleMin = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Min score\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].minScore = event.target.value;\n      setResultData(resultValue);\n\n    }\n\n\n  }\n  const handleTitle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter title\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].title = event.target.value;\n      setResultData(resultValue);\n\n    }\n\n  }\n  const handlephrases = (index, event) => {\n    const resultValue = [...resultdata];\n    resultValue[index].phrase = event.target.value;\n    setResultData(resultValue);\n\n  }\n  const handleneedle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please Choose needle value\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].needle = event.target.value;\n      setResultData(resultValue);\n    }\n\n  }\n\n\n  const handleSubmit = async () => {\n    var title = document.getElementById(\"title\").value\n    var slug = document.getElementById(\"slug\").value\n    if ((title == \"\") || (title == null) || (title.length <= 2)) {\n      alert(\"please enter required title\");\n      return true;\n    } else if (slug == \"\") {\n      alert(\"please enter slug\");\n      return true;\n    }\n\n    let data = true;\n    question.map((item) => {\n      if (item.questionTitle === \"\") {\n        alert(\"Question Cannot be blank!\")\n        data = false;\n        return\n      }\n      else {\n        data = true;\n      }\n      if (item.answer === \"\") {\n        alert(\"Please Choose right option\")\n        data = false;\n        return\n      }\n      else {\n        data = true;\n      }\n      item.optionsArray.map((item1) => {\n        if (item1.optionLabel == \"\") {\n          alert(\"Please enter all answer options\")\n          data = false;\n          return\n        }\n        else {\n          data = true;\n          return\n        }\n      })\n\n\n    })\n    resultdata.map((res) => {\n      if (res.maxScore === \"\" && res.minScore === \"\" && res.title === \"\" && res.needle === \"\") {\n        alert(\"Result Value Cannot be blank!\")\n        data = false;\n        return\n      }\n      else {\n        data = true;\n      }\n\n    })\n    if (data == true) {\n\n      var fileUpload = {\n        quizTitle: title,\n        quizSlug: slug,\n        language: language,\n        bannerImage: image,\n        questionsArray: question,\n        resultdata: resultdata\n\n      }\n      const options = {\n        method: 'POST',\n        headers: {\n          \"Apiuserid\": \"49507884\",\n          \"Scope\": \"In.QuizApp.INSERT\",\n          'Content-Type': 'multipart/form-data',\n          \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n        }\n      }\n      const result = await services.createQuiz(fileUpload, options)\n      setLoggedIn(true)\n    }\n  }\n  if (loggedIn) {\n    return <Redirect to=\"/quizlist\" push={true} />\n  }\n  return (\n    <div className={classes.root}>\n      <AdminLink />\n      <Grid container className=\"detailView\">\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div className=\"createnumber\">\n              <h3>Title</h3>\n            </div>\n            <Card className=\"create-list\">\n              <Grid\n                container\n                justify=\"center\"\n              >\n                <input type=\"text\" id=\"title\" className=\"title-text\"\n                  name=\"title\"\n                  placeholder=\"Title\"\n                />\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div className=\"createnumber\">\n              <h3>Slug</h3>\n            </div>\n            <Card className=\"create-list\">\n              <Grid\n                container\n                justify=\"center\"\n              >\n                <input type=\"text\" id=\"slug\" className=\"title-text\"\n                  name=\"slug\"\n                  placeholder=\"Slug\"\n                />\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div className=\"createnumber\">\n              <h3>language</h3>\n            </div>\n            <Card className=\"create-list\">\n              <Grid\n                container\n                justify=\"center\"\n              >\n                <FormControl className={classes.formControl} fullWidth>\n                  <Select label=\"Category\" id=\"category\" className=\"title-text\" value={language} onChange={handleChange} >\n                    <MenuItem value=\"en\">Select Language</MenuItem>\n                    <MenuItem value=\"en\">en</MenuItem>\n                  </Select>\n                </FormControl>\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} >\n            <div className=\"createnumber\">\n              <h3>upload</h3>\n            </div>\n            <Card className=\"create-list\">\n              <Grid\n                container\n                justify=\"center\"\n              >\n                <div className=\"img-holder\">\n                  <img id=\"output\" className=\"img\" />\n                </div>\n                <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\"\n                  onChange={event => handleImage(event)}\n                />\n                <div className=\"create-label\">\n                  <label className=\"create-img\" htmlFor=\"input\">\n                    <span>  Choose your Photo</span>\n                  </label>\n                </div>\n              </Grid>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        {\n          question.map((que, index) => (\n            <Grid container key={index}>\n              <Grid item xs></Grid>\n              <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                <div className=\"createnumber\">\n                  <h3>Question</h3>\n                </div>\n                <div className=\"createnumber1\">\n                  {question.length > 1 && <button className=\"delete\" onClick={() => removeQuestion(index)}>X</button>}\n                </div>\n                <Card className=\"create-list\">\n                  <Grid\n                    container\n                    justify=\"center\"\n                  >\n                    <input type=\"text\" id=\"question\" className=\"que-text\"\n                      name=\"question\"\n                      placeholder=\"Enter Question\"\n                      onBlur={event => handleQuestion(index, event)}\n                    />\n                  </Grid>\n                  {que.optionsArray.map((option, optIndex) => (\n                    <React.Fragment key={optIndex}>\n                      <div className=\"answerContainer\">\n                        <input type=\"radio\" name={`option_${index}`} defaultChecked={que.answer} onClick={event => radioclick(index, optIndex, event)} />\n                        <textarea className=\"create-option\" placeholder=\"Answer\" onBlur={event => handleOption(index, optIndex, event)} />\n                        <div className=\"quizwrapper\">\n                          <div className=\"quizfile-upload2\">\n                            <input type=\"file\" className=\"quizoption2\"\n                              defaultValue={option.optionImg}\n                              onChange={event => optionImage(index, optIndex, event)}\n                            />\n                            <img src=\"/assets/image/option.png\" height=\"40px\" />\n                          </div>\n                        </div>\n                        {optIndex > 1 && <button className=\"delete\" onClick={() => removeOption(index, optIndex)}>X</button>}\n                      </div>\n                    </React.Fragment >\n                  ))}\n                  <div className=\"create-label\">\n                    {\n                      <button className=\"addoption\" onClick={() => addOption(index)}>Add Option</button>}\n                  </div>\n                </Card>\n                <div className=\"create-label\">\n                  {index === question.length - 1 && <button className=\"addoption\" onClick={() => addQuestion()}>Add Question</button>}\n                </div>\n              </Grid>\n              <Grid item xs></Grid>\n            </Grid>\n\n          ))}\n\n        {\n          resultdata.map((res, resindex) => (\n            <Grid container>\n              <Grid item xs></Grid>\n              <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                <div>\n                  <div className=\"createnumber\">\n                    <h3>Result</h3>\n                  </div>\n                  <div className=\"createnumber1\">\n                    {resultdata.length > 1 && <button className=\"delete\" onClick={() => removeresult(resindex)}>X</button>}\n                  </div>\n                </div>\n                <Card className=\"create-list\">\n                  <Grid\n                    container\n                    justify=\"center\"\n                  >\n                    <input type=\"text\" id=\"max\" className=\"result-text\"\n                      name=\"max\"\n                      placeholder=\"Max Score\"\n                      onBlur={event => handleMax(resindex, event)}\n                    />\n                    <input type=\"text\" id=\"min\" className=\"result-text\"\n                      name=\"min\"\n                      placeholder=\"Min Score\"\n                      onBlur={event => handleMin(resindex, event)}\n                    />\n                    <input type=\"text\" id=\"resultTitle\" className=\"result-text\"\n                      name=\"resultTitle\"\n                      placeholder=\"Title\"\n                      onBlur={event => handleTitle(resindex, event)}\n                    />\n                    <input type=\"text\" id=\"phrase\" className=\"result-text\"\n                      name=\"phrase\"\n                      placeholder=\"Phrase\"\n                      onBlur={event => handlephrases(resindex, event)}\n                    />\n\n                    <input type=\"file\" accept=\"image/*\" id={`resultImage${resindex}`} className=\"img-input\" name={`resultImage${resindex}`} onChange={event => handleResultImage(event, resindex)} />\n                    <FormControl className={classes.formControl} fullWidth>\n                      <Select id=\"needle\" className=\"result-text\"\n                        inputProps={{ 'aria-label': 'Without label' }} onChange={event => handleneedle(resindex, event)} >\n                        <MenuItem value=\"\" >Select Needle Position </MenuItem>\n                        <MenuItem value=\"2\">😞</MenuItem>\n                        <MenuItem value=\"8\">😐</MenuItem>\n                        <MenuItem value=\"12\">😊</MenuItem>\n                        <MenuItem value=\"18\">😍</MenuItem>\n                      </Select>\n                    </FormControl>\n                    <div className=\"create-label\">\n                      <label className=\"create-img\" htmlFor={`resultImage${resindex}`}>\n                        <span>  Choose your Photo</span>\n                      </label>\n                    </div>\n\n                  </Grid>\n                </Card>\n\n              </Grid>\n              <Grid item xs></Grid>\n            </Grid>\n          ))}\n        <div className=\"create-label\">\n          {<button className=\"addoption\" onClick={() => addresult()}>Add Result</button>}\n        </div>\n        <div className=\"create-label\">\n          <button className=\"addoption\" onClick={handleSubmit}>Save</button>\n        </div>\n      </Grid>\n\n    </div>\n  )\n}\n\nexport default CreateQuiz\n","import React, { useEffect, useRef, useState } from 'react';\nimport { Grid, IconButton, makeStyles } from '@material-ui/core';\nimport AdminLinks from '../management/AdminLinks';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Switch from '@material-ui/core/Switch';\nimport {EditOutlined, FileCopyOutlined, VisibilityOutlined } from '@material-ui/icons';\nimport { Link } from 'react-router-dom';\nimport { ToastsContainer, ToastsStore, ToastsContainerPosition } from 'react-toasts';\nimport \"../management/User.css\"\nimport services from '../../services/services';\nimport MetaTags from 'react-meta-tags';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n    marginTop: \"90px\"\n  },\n  container: {\n    maxHeight: 400,\n  },\n  table: {\n    background: \"#133b5c\",\n    color: \"#fff\"\n  },\n  dltIcon: {\n    color: \"#F31118\"\n  },\n  heading: {\n    float: \"left\",\n    fontSize: \"20px\",\n    marginTop: \"15px\",\n    marginLeft: \"10px\",\n    fontWeight: \"700\",\n    color: \"#133b5c\"\n  },\n  list: {\n    marginTop: \"80px\"\n  },\n  cell: {\n    padding: \"6px\"\n  },\n  icon: {\n    padding: \"0px\"\n  },\n  copytext: {\n    height: \"0rem\",\n    overflow: \"hidden\",\n    color: \"transparent\",\n    background: \"transparent\",\n    border: \"none\"\n  }\n}));\nconst columns = [\n  { id: 'adminQuizId', label: 'Id', minWidth: 100, align: 'center' },\n  { id: 'title', label: 'Title', minWidth: 100, align: 'center' },\n  {\n    id: 'slug',\n    label: 'Slug',\n    minWidth: 100,\n    align: 'center'\n\n  },\n  { id: 'language', label: 'Language', minWidth: 100, align: 'center' }\n\n];\n\nexport default function Quizlist() {\n  const classes = useStyles()\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n  const [quizlist, setQuizList] = useState([]);\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  useEffect(() => {\n    getAllAdminQuiz();\n  }, [])\n  const getAllAdminQuiz = async () => {\n    const options = {\n      method: 'Get',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getAllAdminQuiz(options)\n    setQuizList(result.data.data)\n  };\n\n  const checkedStatus = (id) => async () => {\n    var quizId = id;\n\n    var data = {\n      quizId: quizId,\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.UPDATE\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.updateQuizStatus(data, options)\n    getAllAdminQuiz();\n  }\n  function copyToClipboard(text) {\n    var dummy = document.createElement(\"textarea\");\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand(\"copy\");\n    document.body.removeChild(dummy);\n    ToastsStore.success(\"Copied SuccessFully\")\n  };\n  return (\n    <>\n      <AdminLinks />\n      <Grid container justify=\"center\" className={classes.list}>\n        <Grid item xs={11} sm={6} md={6} lg={10}>\n\n          <TableContainer className={classes.container}>\n            <Table stickyHeader>\n              <TableHead>\n                <TableRow>\n                  {columns.map((column) => (\n                    <TableCell className={classes.table}\n                      key={column.id}\n                      align={column.align}\n                      style={{ minWidth: column.minWidth }}\n                    >\n                      {column.label}\n                    </TableCell>\n                  ))}\n                  <TableCell align=\"center\" className={classes.table}>Active</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>View</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>Result</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>Edit</TableCell>\n                  <TableCell align=\"center\" className={classes.table}>Url</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n\n                {quizlist.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row) => {\n                  return (\n                    <>\n                      <TableRow\n                        hover\n                        role=\"checkbox\"\n                        tabIndex={-1}\n                        key={quizlist.adminQuizId}>\n                        {columns.map((column) => {\n                          const value = row[column.id];\n                          return (\n                            <>\n                              <TableCell\n                                key={value}\n                                align={column.align}\n                              >\n                                {column.format && typeof value === 'number' ? column.format(value) : value}\n                              </TableCell>\n                            </>\n                          );\n\n                        })}\n                        <TableCell align=\"center\" className={classes.cell}>\n                          {\n                            row.status === \"active\" ?\n                              <Switch\n                                checked={true}\n                                onChange={checkedStatus(row.adminQuizId)}\n                                name=\"checkedA\"\n                                color=\"primary\"\n                                id={row.adminQuizId}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                              /> :\n                              <Switch\n                                checked={false}\n                                onChange={checkedStatus(row.adminQuizId)}\n                                name=\"checkedA\"\n                                color=\"primary\"\n                                id={row.adminQuizId}\n                                inputProps={{ 'aria-label': 'primary checkbox' }}\n                              />\n                          }\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <Link to={`/view/${row.slug}`}>\n                            <IconButton className={classes.icon} >\n                              <VisibilityOutlined />\n                            </IconButton>\n                          </Link>\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <Link to={`/result/${row.adminQuizId}`}>\n                            <img src=\"/assets/image/trofy.jpg\" width=\"30\" />\n                          </Link>\n                        </TableCell>\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <IconButton className={classes.icon} >\n                            <Link to={`/editQuiz/${row.slug}`}>\n                              <EditOutlined />\n                            </Link>\n                          </IconButton>\n                        </TableCell>\n\n                        <TableCell align=\"center\" className={classes.cell}>\n                          <IconButton className={classes.icon} >\n                            <FileCopyOutlined onClick={() => copyToClipboard(`https://webestfriends.com/quizform/${row.slug}`)} />\n                            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} />\n                          </IconButton>\n                        </TableCell>\n\n                      </TableRow>\n\n                    </>\n\n                  );\n                })}\n\n              </TableBody>\n            </Table>\n          </TableContainer>\n          <TablePagination\n            rowsPerPageOptions={[10, 25, 100]}\n            component=\"div\"\n            count={quizlist.length}\n            rowsPerPage={rowsPerPage}\n            page={page}\n            onChangePage={handleChangePage}\n            onChangeRowsPerPage={handleChangeRowsPerPage}\n          />\n        </Grid>\n      </Grid>\n    </>\n\n  )\n}\n","import React, { useEffect, useState } from 'react'\nimport AdminLink from '../management/AdminLinks';\nimport { Card, CardContent, Grid, makeStyles} from '@material-ui/core';\nimport \"./View.css\"\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  gridContainer: {\n    paddingTop:\"20px\",\n    minHeight:\"100vh\"\n  },\n  imgsize:{\n    width:\"100%\"\n  }\n  \n}));\nfunction View() {\n  const classes = useStyles()\n  const {id}=useParams();\n  const [quiz,setQuiz]=useState([])\n  const [que,setQue]=useState([])\n  const [resultdata,setResultdata]=useState([])\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n      getQuizBySlug();\n  }, [])\n\n  const getQuizBySlug = async () => {\n       const data={\n         quizSlug:id\n       }\n      const options = {\n          method: 'Post',\n          headers: {\n              \"Apiuserid\": \"49507884\",\n              \"Scope\": \"In.QuizApp.READ\",\n              \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n          }\n      }\n      const result = await services.getQuizBySlug(data,options)\n      console.log(result.data.data)\n      setQuiz(result.data.data)\n      setQue(JSON.parse(result.data.data[0].questionData))\n      setResultdata(JSON.parse(result.data.data[0].resultData))\n  };\n\n  console.log(que)\n    return (\n        <>\n            <AdminLink/>\n           {\n             quiz?.map((list,index)=>{\n               return(\n                <Grid container className=\"detailView\">\n                <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} >\n                        <div className=\"createnumber\">\n                            <h3>Title</h3>\n                        </div>\n                        <Card className=\"create-list\">\n                        <Grid container justify=\"center\">\n                            <span className=\"title-text\">{list.title}</span>\n                        </Grid>\n                        </Card>\n                    </Grid>\n                    <Grid item xs></Grid>\n               </Grid>\n                      <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} >\n                        <div className=\"createnumber\">\n                            <h3>Slug</h3>\n                        </div>\n                          <Card className=\"create-list\">\n                                      <Grid\n                                      container\n                                      justify=\"center\"\n                                     >\n                                     <span className=\"title-text\">{list.slug}</span>    \n                                   </Grid>\n                          </Card>\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                       <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} >\n                        <div className=\"createnumber\">\n                            <h3>language</h3>\n                        </div>\n                          <Card className=\"create-list\">\n                                      <Grid\n                                      container\n                                      justify=\"center\"\n                                     >\n                                          <span className=\"title-text\">{list.language}</span>\n                                   </Grid>\n                          </Card>\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                      <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} >\n                        <div className=\"createnumber\">\n                            <h3>upload</h3>\n                        </div>\n                        {\n                          list.bannerImage?\n                          <Card className=\"create-list\">\n                              <Grid container justify=\"center\" >\n                              <img className={classes.imgsize} src={`${list.image_base_path}/${list.bannerImage}`}/>\n                              </Grid>\n                          </Card>:\n                           <Card className=\"create-list\">\n                              <Grid container justify=\"center\" >\n                                 <span  id=\"upload\" className=\"title-text\" name=\"upload\">Image Not Uploaded</span>\n                              </Grid>\n                           </Card>\n                        }\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                      {\n                        que?.map((que,index)=>{\n                          return(\n                            <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                        <div className=\"createnumber\">\n                            <h3>Question</h3>\n                        </div>\n                          <Card className=\"create-list\">\n                                      <Grid\n                                      container\n                                      justify=\"center\"\n                                     >\n                                          <span className=\"que-text\">{que.questionTitle}</span>\n                                   </Grid>\n                                   {que.optionsArray?.map((options, optIndex) => {\n                                     \n                                    return(  <div className=\"answerContainer\">\n                                      {\n                                        que.answer===options.optionLabel? <input type=\"radio\" disabled  name={`option_${index}`} defaultChecked={que.answer} />: <input type=\"radio\" disabled/>\n                                      }\n                                      {/* <input type=\"radio\" disabled  name={`option_${index}`} defaultChecked={que.answer} /> */}\n                                      {options.optionImg?.length ?\n                     <Grid\n                     container\n                     className=\"viewOption\"\n                     key={optIndex}\n                     id=\"cardbox\">\n                     <Grid item xs={4} sm={4} md={4} lg={4} className=\"div-image\" >\n                      <img className=\"view-img\"  src={`${list.image_base_path}/${options.optionImg}`} /> \n                    </Grid>\n                    <Grid item xs={8} sm={8} md={8} lg={8} className=\"viewbg\" >\n                    <CardContent className=\"view-card\">\n                    <h3 className=\"view-option\" id=\"cardText\">\n                         {options.optionLabel}\n                       </h3>\n                    </CardContent>\n                  </Grid>\n                  </Grid>\n                  : \n                \n                  <Grid\n                  container\n                  className=\"viewOption\"\n                  key={index}\n                  id=\"cardbox\">\n                 <Grid item xs={12} sm={12} md={12} lg={12} className=\"viewbg\" >\n                    <CardContent className=\"view-card\">\n                    <h3 className=\"view-option\" id=\"cardText\">\n                         {options.optionLabel}\n                       </h3>\n                    </CardContent>\n                  </Grid>\n               </Grid>\n                  }\n                 \n                                     </div>\n  \n                                   )})\n              }\n                                 \n                          </Card>\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                          )\n\n                        })\n                      }\n\n                      {\n                        resultdata?.map((res,index)=>{\n                          return(\n                      <Grid container>\n                        <Grid item xs></Grid>\n                        <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                        <div>\n                        <div className=\"createnumber\">\n                            <h3>Result</h3>\n                        </div>\n                       <div className=\"createnumber1\">\n                       </div>\n                        </div>\n                          <Card className=\"create-list\">\n                            <Grid container justify=\"center\">\n                          <span className=\"result-text\"><span className=\"span-text\">Max Score:</span>{res.maxScore}</span>\n                          <span className=\"result-text\"><span className=\"span-text\">Min Score:</span>{res.minScore}</span>\n                          <span className=\"result-text\"><span className=\"span-text\">Title:</span>{res.title}</span>\n                          <span className=\"result-text\"><span className=\"span-text\">Phrase:</span>{res.phrase}</span> \n                          <span className=\"result-text\"><span className=\"span-text\">Needle:</span> {res.needle}</span> \n                          {\n                            res.resultImage ===\"\"?<span  id=\"upload\" className=\"result-text\" name=\"upload\">Image Not Uploaded</span>:\n                            <img className={classes.imgsize} src={`${list.image_base_path}/${res.resultImage}`}/>\n                          }\n                          </Grid>\n                          </Card>\n                        </Grid>\n                        <Grid item xs></Grid>\n                      </Grid>\n                       )\n                      })\n                    }\n                      </Grid>\n               )\n             })\n           }\n        </>\n    )\n}\n\nexport default View\n","import { IconButton } from '@material-ui/core'\nimport { VisibilitySharp } from '@material-ui/icons'\nimport React, { useEffect, useState } from 'react'\nimport  Table  from 'react-bootstrap/Table';\nimport { Link, useParams } from 'react-router-dom';\nimport services from '../../services/services';\nimport AdminLink from '../management/AdminLinks';\nimport \"./result.css\"\n\nfunction Result() {\n    const {id}=useParams();\n    const[tableData,setTableData]=useState([])\n    const data = JSON.parse(localStorage.getItem('friend'));\n    const jwt = data['jwt'];\n    useEffect(() => {\n        getAllResults();\n    }, [])\n  \n    const getAllResults = async () => {\n         const data={\n           quizId:id\n         }\n        const options = {\n            method: 'Post',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",\n                \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n            }\n        }\n        const result = await services.getAllResults(data,options)\n        setTableData(result.data.data)\n    };\n    return (\n        <>\n            <AdminLink/>\n                    <div className=\"detailView1\">\n                    <div style={{width:\"100%\"}}>\n                       <div className=\"cardTable\">\n                          <table className=\"viewtable\">\n                                 <thead>\n                                  <tr>\n                                      <th>ID</th>\n                                      <th>Player Name</th>\n                                      <th>Played At</th>\n                                      <th>Score</th>\n                                      <th>View</th>\n                                  </tr>\n                                  </thead>\n                                  <tbody>\n                                  {\n               tableData.map((tdata,index)=>{\n                   return(\n                                  <tr>\n                   <td>{tdata.resultId}</td>\n                   <td>{tdata.playerName}</td>\n                                      <td>{tdata.createDate}</td>\n                   <td>{tdata.score}</td>\n                                      <td>\n                                          <Link to={`/playeranswer/${tdata.resultId}`}>\n                                          <IconButton>\n                                              <VisibilitySharp/>\n                                          </IconButton>\n                                          </Link>\n                                      </td>\n                                  </tr>\n                                   )\n                                })\n                            }\n                              </tbody>\n                          </table>\n                       </div>\n                    </div>\n                  </div>\n            \n        </>\n    )\n}\n\nexport default Result\n","import React, { useEffect, useState } from 'react'\nimport { Card, CardContent, Grid, makeStyles, TextField } from '@material-ui/core';\nimport \"./createQuiz.css\"\nimport AdminLink from '../management/AdminLinks'\nimport { useParams } from 'react-router-dom';\nimport services from '../../services/services';\n\nfunction ViewAns() {\n  const {id}=useParams();\n    const[playerResult,setPlayerResult]=useState([])\n    const[resultAns,setResultAns]=useState([])\n    const data = JSON.parse(localStorage.getItem('friend'));\n    const jwt = data['jwt'];\n    useEffect(() => {\n        getPlayerResult();\n    }, [])\n  \n    const getPlayerResult = async () => {\n         const data={\n           resultId:id\n         }\n        const options = {\n            method: 'Post',\n            headers: {\n                \"Apiuserid\": \"49507884\",\n                \"Scope\": \"In.QuizApp.READ\",\n                \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n            }\n        }\n        const result = await services.getPlayerResult(data,options)\n        setPlayerResult(result.data.data)\n        setResultAns(JSON.parse(result.data.data[0].answers))\n\n    };\n    return (\n        <>\n             <AdminLink/>\n             <Grid container>\n                    <Grid item xs></Grid>\n{\n  playerResult.map((player,index)=>{\n    return(\n      <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n      <div>\n      <div className=\"createnumber\">\n    <h3>{player.playerName}</h3>\n      </div>\n     <div className=\"createnumber1\">\n     </div>\n      </div>\n        <Card className=\"create-list\">\n          <Grid container justify=\"center\">\n              <span className=\"all-text\"><span className=\"span-text\">Score:</span> {player.score}</span>\n              <span className=\"all-text\"><span className=\"span-text\">Played At:</span> {player.createDate}</span>\n              {\n                resultAns.map((answerd,index)=>{\n               return(\n                 <>\n                   {\n                   answerd.correct===\"yes\"?\n                   <span className=\"right-text\">{answerd.answer}</span>\n                   :\n                   <span className=\"wrong-text\">{answerd.answer}</span>\n                 }\n                 </>\n                 \n               )\n                })\n              }\n        </Grid>\n        </Card>\n      </Grid>\n    )\n  })\n}\n                    <Grid item xs></Grid>\n                  </Grid>\n        </>\n    ) \n}\n\nexport default ViewAns\n","import { Card, CardContent, FormControl, Grid, makeStyles, MenuItem, Select } from '@material-ui/core';\nimport React, { useEffect, useState } from 'react';\nimport \"./createQuiz.css\"\nimport AdminLink from '../management/AdminLinks';\nimport { Redirect, useParams } from 'react-router-dom';\nimport services from '../../services/services';\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  gridContainer: {\n    paddingTop: \"20px\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  headPart: {\n    backgroundColor: \"#133b5c\",\n    color: \"#ffff\"\n  },\n  icon: {\n    color: \"#fff\"\n  },\n  categorytitle: {\n    color: \"#133b5c\",\n    fontSize: \"35px\",\n    fontWeight: \"600\",\n    textAlign: \"center\"\n  },\n  heading: {\n    fontSize: theme.typography.pxToRem(20),\n    fontWeight: theme.typography.fontWeightRegular,\n  },\n}));\n\nfunction EditQuiz() {\n  const classes = useStyles();\n  const { id } = useParams();\n  const [question, setQuestion] = useState(\n    [\n      {\n        questionTitle: '',\n        priority: 1,\n        answer: \"\",\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      },\n    ]\n  )\n  const [resultdata, setResultData] = useState(\n    [\n      {\n        maxScore: '',\n        minScore: \"\",\n        title: \"\",\n        phrase: \"\",\n        needle: \"\",\n        resultImage: \"\"\n      }\n    ]\n  )\n\n  const [quiz, setQuiz] = useState([])\n  const [load, setLoad] = useState(false)\n  const [image, setImage] = useState('')\n  const data = JSON.parse(localStorage.getItem('friend'));\n  const jwt = data['jwt'];\n  useEffect(() => {\n    getQuizBySlug();\n  }, [])\n\n  const getQuizBySlug = async () => {\n    const data = {\n      quizSlug: id\n    }\n    const options = {\n      method: 'Post',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getQuizBySlug(data, options)\n    console.log(result.data.data)\n    setQuiz(result.data.data)\n    setQuestion(JSON.parse(result.data.data[0].questionData))\n    setResultData(JSON.parse(result.data.data[0].resultData))\n  };\n  const addQuestion = () => {\n    setQuestion([\n      ...question,\n      {\n        questionTitle: '',\n        priority: 1,\n        answer: \"\",\n        optionsArray: [\n          { optionLabel: \"\", optionImg: \"\" },\n          { optionLabel: \"\", optionImg: \"\" }\n        ]\n      },\n    ])\n  }\n\n  const removeQuestion = (index) => {\n    const list = [...question]\n    list.splice(index, 1);\n    setQuestion(list);\n  }\n  const addresult = () => {\n    setResultData([\n      ...resultdata,\n      {\n        maxScore: '',\n        minScore: \"\",\n        title: \"\",\n        phrase: \"\",\n        needle: \"\",\n        resultImage: \"\"\n      }\n    ])\n  }\n\n  const removeresult = (index) => {\n    const listdata = [...resultdata]\n    listdata.splice(index, 1);\n    setResultData(listdata);\n  }\n  const addOption = (questionIndex) => {\n    const options = question[questionIndex];\n    options.optionsArray.push({ optionLabel: \"\", optionImg: \"\" });\n    const previous = question.slice(0, questionIndex);\n    const current = [options];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n  const removeOption = (questionIndex, answerIndex) => {\n    const options = question[questionIndex];\n    const newArray = options.optionsArray.filter((value, index) => index !== answerIndex);\n    const previous = question.slice(0, questionIndex);\n    const current = [{ ...options, optionsArray: [...newArray] }];\n    const next = question.slice(questionIndex + 1, question?.length);\n    setQuestion([\n      ...previous,\n      ...current,\n      ...next\n    ]);\n  }\n  const handleOption = (questionIndex, index, event) => {\n    const values = [...question];\n\n    values[questionIndex].optionsArray[index].optionLabel = event.target.value;\n    setQuestion(values);\n  }\n  const handleQuestion = (index, event) => {\n\n    const values = [...question];\n\n    values[index].questionTitle = event.target.value;\n    setQuestion(values);\n\n  }\n  const radioclick = (questionIndex, index, event) => {\n    const values = [...question];\n    var clicked = values[questionIndex].optionsArray[index].optionLabel\n    values[questionIndex].answer = clicked\n    setQuestion(values);\n  }\n  const handleImage = async (event) => {\n    var output = document.getElementById('output');\n    output.src = URL.createObjectURL(event.target.files[0]);\n    output.onload = function () {\n      URL.revokeObjectURL(output.src) // free memory\n    }\n    var imgpath = event.target.files[0]\n    const data = imgpath.name;\n    console.log(data)\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    console.log(ext[0], ext[1])\n    var file_path = ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path)\n    var img = new FormData()\n    img.append(\"bannerImg\", imgpath)\n    img.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.bannerImage(img, options);\n    setImage(result.data.message)\n  }\n\n  const optionImage = async (questionIndex, index, event) => {\n    // var imageOpt = document.getElementById('imageOpt');\n    // imageOpt.src = URL.createObjectURL(event.target.files[0]);\n    // imageOpt.onload = function () {\n    // URL.revokeObjectURL(imageOpt.src) // free memory\n    //  }\n    const values = [...question];\n    var imgpath = event.target.files[0]\n    const data = imgpath.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    var file_path = questionIndex + '_' + index + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, file_path)\n    var img = new FormData()\n    img.append(\"optionImg\", imgpath);\n    img.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(img, options);\n    values[questionIndex].optionsArray[index].optionImg = file_path;\n    setQuestion(values);\n  }\n  const handleMax = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Maxscore\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].maxScore = event.target.value;\n      setResultData(resultValue);\n\n    }\n  }\n  const handleMin = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter Min score\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].minScore = event.target.value;\n      setResultData(resultValue);\n\n    }\n\n\n  }\n  const handleTitle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please enter title\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].title = event.target.value;\n      setResultData(resultValue);\n\n    }\n\n  }\n  const handlephrases = (index, event) => {\n    const resultValue = [...resultdata];\n    resultValue[index].phrase = event.target.value;\n    setResultData(resultValue);\n\n  }\n  const handleneedle = (index, event) => {\n    if (event.target.value === \"\") {\n      alert(\"Please Choose needle value\");\n      return true;\n    }\n    else {\n      const resultValue = [...resultdata];\n      resultValue[index].needle = event.target.value;\n      setResultData(resultValue);\n    }\n\n  }\n  const handleResultImage = async (event, resindex) => {\n    const resultValue = [...resultdata];\n    var resultimg = event.target.files[0]\n    const data = resultimg.name;\n    const currentTime = new Date();\n    const time = currentTime.getTime();\n    const ext = data.split('.')\n    var result_path = resindex + '_' + ext[0] + time + '.' + ext[1];\n    var myimg = data.replace(data, result_path)\n    var resultimage = new FormData()\n    resultimage.append(\"resultImage\", resultimg);\n    resultimage.append(\"newName\", myimg)\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.getImage(resultimage, options);\n    console.log(result)\n    resultValue[resindex].resultImage = result_path;\n    setResultData(resultValue);\n  }\n  const updateList = async () => {\n    var quizId = document.getElementById(\"quizId\").value\n    var title = document.getElementById(\"title\").value\n    var slug = document.getElementById(\"slug\").value\n    var language = document.getElementById(\"language\").value\n\n    var fileUpload = {\n      quizId: quizId,\n      quizTitle: title,\n      quizSlug: slug,\n      language: language,\n      bannerImage: image,\n      questionsArray: question,\n      resultdata: resultdata\n\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n        'Content-Type': 'multipart/form-data',\n        \"Authorization\": `quizApp-oauthtoken ${jwt}`,\n      }\n    }\n    const result = await services.updateQuiz(fileUpload, options)\n    if (result.data.code === 200) {\n      setLoad(true)\n    }\n  }\n  if (load) {\n    return (<Redirect to=\"/quizlist\" push={true} />)\n  }\n  return (\n    <div className={classes.root}>\n      <AdminLink />\n      {\n        quiz?.map((list, index) => {\n          return (\n            <Grid container className=\"detailView\">\n              <Grid container>\n                <input type=\"hidden\" id=\"quizId\" defaultValue={list.adminQuizId} />\n                <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                  <div className=\"createnumber\">\n                    <h3>Title</h3>\n                  </div>\n                  <Card className=\"create-list\">\n                    <Grid\n                      container\n                      justify=\"center\"\n                    >\n                      <input type=\"text\" id=\"title\" className=\"title-text\"\n                        name=\"title\"\n                        defaultValue={list.title}\n                        placeholder=\"Title\"\n                      />\n                    </Grid>\n                  </Card>\n                </Grid>\n                <Grid item xs></Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                  <div className=\"createnumber\">\n                    <h3>Slug</h3>\n                  </div>\n                  <Card className=\"create-list\">\n                    <Grid\n                      container\n                      justify=\"center\"\n                    >\n                      <input type=\"text\" id=\"slug\" className=\"title-text\"\n                        name=\"slug\"\n                        defaultValue={list.slug}\n                        placeholder=\"Slug\"\n                      />\n                    </Grid>\n                  </Card>\n                </Grid>\n                <Grid item xs></Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                  <div className=\"createnumber\">\n                    <h3>language</h3>\n                  </div>\n                  <Card className=\"create-list\">\n                    <Grid\n                      container\n                      justify=\"center\"\n                    >\n                      <FormControl className={classes.formControl} fullWidth  >\n                        <select label=\"Category\" id=\"language\" value={list.language} className=\"title-text\" >\n                          {/* <MenuItem value=\"\">select Language</MenuItem>      */}\n                          <option value={list.language}>{list.language}</option>\n                        </select>\n                      </FormControl>\n                    </Grid>\n                  </Card>\n                </Grid>\n                <Grid item xs></Grid>\n              </Grid>\n              <Grid container>\n                <Grid item xs></Grid>\n                <Grid item xs={11} sm={6} md={6} lg={4} >\n                  <div className=\"createnumber\">\n                    <h3>upload</h3>\n                  </div>\n                  <Card className=\"create-list\">\n                    <Grid\n                      container\n                      justify=\"center\"\n                    >\n                      {\n                        list.bannerImage != \"\" ?\n                          <div className=\"img-holder\">\n                            <img id=\"output\" className=\"img\" src={`${list.image_base_path}/${list.bannerImage}`} />\n                          </div>\n                          :\n                          <div className=\"img-holder\">\n                            <img id=\"output\" className=\"img\" />\n                          </div>\n                      }\n                      <input type=\"file\" accept=\"image/*\" id=\"input\" name=\"input\" onChange={event => handleImage(event)} />\n                      <div className=\"create-label\">\n                        <label className=\"create-img\" htmlFor=\"input\">\n                          <span>  Choose your Photo</span>\n                        </label>\n                      </div>\n                    </Grid>\n                  </Card>\n                </Grid>\n                <Grid item xs></Grid>\n              </Grid>\n              {\n                question.map((que, index) => (\n                  <Grid container>\n                    <Grid item xs></Grid>\n                    <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\">\n                      <div className=\"createnumber\">\n                        <h3>Question</h3>\n                      </div>\n                      <div className=\"createnumber1\">\n                        {question.length > 1 && <button className=\"delete\" onClick={() => removeQuestion(index)}>X</button>}\n                      </div>\n                      <Card className=\"create-list\">\n                        <Grid\n                          container\n                          justify=\"center\"\n                        >\n                          <input type=\"text\" id=\"question\" defaultValue={que.questionTitle} className=\"que-text\"\n                            name=\"question\"\n                            placeholder=\"Enter Question\"\n                            onChange={event => handleQuestion(index, event)}\n                          />\n                        </Grid>\n                        {que.optionsArray.map((option, optIndex) => (\n                          <>\n                            <div className=\"answerContainer\">\n                            {que.answer?.length &&\n                            \n                              que.answer === option.optionLabel ? <input type=\"radio\" name={`option_${index}`} defaultChecked={que.answer} /> : <input type=\"radio\" name={`option_${index}`} onClick={event => radioclick(index, optIndex, event)} />\n                            \n                            \n                            }\n                              \n                              {option.optionImg?.length ?\n                                <Grid\n                                  container\n                                  className=\"viewOption\"\n                                  key={optIndex}\n                                  id=\"cardbox\">\n                                  <Grid item xs={4} sm={4} md={4} lg={4} className=\"div-image\" >\n                                    <img className=\"view-img\" src={`${list.image_base_path}/${option.optionImg}`} />\n                                  </Grid>\n                                  <Grid item xs={8} sm={8} md={8} lg={8} className=\"viewbg\" >\n                                    <CardContent className=\"view-card\">\n                                      <input className=\"create-option\" placeholder=\"Answer\" defaultValue={option.optionLabel} onChange={event => handleOption(index, optIndex, event)} />\n                                    </CardContent>\n                                  </Grid>\n                                </Grid>\n                                :\n\n                                <Grid\n                                  container\n                                  className=\"viewOption\"\n                                  key={index}\n                                  id=\"cardbox\">\n                                  <Grid item xs={12} sm={12} md={12} lg={12} className=\"viewbg\" >\n                                    <CardContent className=\"view-card\">\n                                      <input className=\"create-option\" placeholder=\"Answer\" defaultValue={option.optionLabel} onChange={event => handleOption(index, optIndex, event)} />\n                                    </CardContent>\n                                  </Grid>\n                                </Grid>\n                              }\n                              <div className=\"quizwrapper\">\n                                <div className=\"quizfile-upload2\">\n                                  <input type=\"file\" className=\"quizoption2\"\n                                    onChange={event => optionImage(index, optIndex, event)}\n                                  />\n                                  <img src=\"/assets/image/option.png\" height=\"40px\" />\n                                </div>\n                              </div>\n                              {optIndex > 1 && <button className=\"delete\" onClick={() => removeOption(index, optIndex)}>X</button>}\n                            </div>\n                          </>\n                        ))}\n                        <div className=\"create-label\">\n                          {\n                            <button className=\"addoption\" onClick={() => addOption(index)}>Add Option</button>}\n                        </div>\n                      </Card>\n                      <div className=\"create-label\">\n                        {index === question.length - 1 && <button className=\"addoption\" onClick={() => addQuestion()}>Add Question</button>}\n                      </div>\n                    </Grid>\n                    <Grid item xs></Grid>\n                  </Grid>\n\n                ))}\n              {\n                resultdata?.map((res, resindex) => {\n                  return (\n                    <Grid container>\n                      <Grid item xs></Grid>\n                      <Grid item xs={11} sm={6} md={6} lg={4} className=\"card\" >\n                        <div>\n                          <div className=\"createnumber\">\n                            <h3>Result</h3>\n                          </div>\n                          <div className=\"createnumber1\">\n                            {resultdata.length > 1 && <button className=\"delete\" onClick={() => removeresult(resindex)}>X</button>}\n                          </div>\n                        </div>\n                        <Card className=\"create-list\">\n                          <Grid\n                            container\n                            justify=\"center\"\n                          >\n                            <input type=\"text\" id=\"max\" className=\"result-text\"\n                              name=\"max\"\n                              defaultValue={res.maxScore}\n                              onBlur={event => handleMax(resindex, event)}\n                            />\n                            <input type=\"text\" id=\"min\" className=\"result-text\"\n                              name=\"min\"\n                              defaultValue={res.minScore}\n                              onBlur={event => handleMin(resindex, event)}\n                            />\n                            <input type=\"text\" id=\"resultTitle\" className=\"result-text\"\n                              name=\"resultTitle\"\n                              defaultValue={res.title}\n                              onBlur={event => handleTitle(resindex, event)}\n                            />\n                            <input type=\"text\" id=\"phrase\" className=\"result-text\"\n                              name=\"phrase\"\n                              defaultValue={res.phrase}\n                              onBlur={event => handlephrases(resindex, event)}\n                            />\n\n                            <input type=\"file\" accept=\"image/*\" id={`resultImage${resindex}`} className=\"img-input\" name={`resultImage${resindex}`} onChange={event => handleResultImage(event, resindex)} />\n                            <FormControl className={classes.formControl} fullWidth  >\n                              <Select value={res?.needle} id=\"needle\" className=\"result-text\"\n                                inputProps={{ 'aria-label': 'Without label' }} onChange={event => handleneedle(resindex, event)} >\n                                <MenuItem value=\"\" >Select Needle Position </MenuItem>\n                                <MenuItem value=\"2\">😞</MenuItem>\n                                <MenuItem value=\"8\">😐</MenuItem>\n                                <MenuItem value=\"12\">😊</MenuItem>\n                                <MenuItem value=\"18\">😍</MenuItem>\n                              </Select>\n                            </FormControl>\n                            <div className=\"create-label\">\n                              <label className=\"create-img\" htmlFor={`resultImage${resindex}`}>\n                                <span>  Choose your Photo</span>\n                              </label>\n                            </div>\n\n                          </Grid>\n                        </Card>\n\n                      </Grid>\n                      <Grid item xs></Grid>\n                    </Grid>\n                  )\n                })\n              }\n              <div className=\"create-label\">\n                <button className=\"addoption\" onClick={updateList}>Update</button>\n              </div>\n            </Grid>\n          )\n        })\n      }\n    </div>\n  )\n}\n\nexport default EditQuiz\n","import React,{useState,useEffect} from 'react';\nimport '../style/category.css';\nimport { makeStyles, Grid, Card, CardMedia, CardContent, Typography } from '@material-ui/core';\nimport services from '../../services/services';\nimport { Redirect,useHistory} from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport { useCookies } from 'react-cookie';\nimport { Helmet } from 'react-helmet';\n\n    const useStyles = makeStyles({\n        gridContainer: {\n            background:\"#7555D9\",\n            minHeight:\"100vh\",\n            padding:\"0px 20px\"\n            \n        },\n        grid:{\n            marginBottom:\"20px\"\n        },\n        \n       \n    });\n\nfunction QuizCategory() {\n    const classes = useStyles();\n    const history = useHistory()\n    const[category,setCategory] = useState([]);\n    const [id,setId]= useState(0)\n    const [cookies, setCookie] = useCookies(['playQuizId']);\n    useEffect(() => {\n        getAllQuiz();\n        document.title=\"We Best Friends\"\n      \n    }, [])\n\n    const  getAllQuiz = async () => {\n        const options = {\n        method: 'Get',\n        }\n    const result = await services.getAllQuiz(options)\n      setCategory(result.data.data)\n    };\n\n   const handleClick =(id,image,title,slug)=>{\n    localStorage.setItem('playQuizId', JSON.stringify(id)); \n    setId(id)\n    setCookie('playQuizId', id, { path: '/quizCategory' });\n    history.push({pathname:`/quizform/${slug}`});\n    }\n    \n        return (\n            <>\n            {\n                category.length? \n                <Grid container className={classes.gridContainer} justify=\"center\">\n                <Grid item xs={12} sm={6} md={3}>\n                <h3 className=\"choose1\">Choose your</h3>\n                <h3 className=\"choose2\">Quiz</h3>\n                </Grid>\n                {\n                  category.map((list,index)=>{\n                 return(  \n                       <>\n                       {\n                           list.bannerImage!=\"\"?\n                           <Grid container justify=\"center\" className={classes.grid}>\n                           <Grid item xs={12} sm={7} md={6}lg={3} >\n                               <Card className=\"card\" key={`${index}_${list.adminQuizId}`}  onClick={()=>{handleClick(list.adminQuizId,list.bannerImage,list.title,list.slug)}} >\n                                   <div>  \n                                       <Grid container>\n                                           <Grid item xs={4} sm={4} md={3}lg={3} className=\"img-card\" >\n                                               <img className=\"cardImg\" src={list.bannerImage}/>\n                                           </Grid>\n                                           <Grid item xs={8} sm={8} md={9}lg={9} className=\"content-bg\" >\n                                               <CardContent className=\"card-category\">\n                                                   <h3 className=\"content\">{list.title}</h3>\n                                               </CardContent>\n                                           </Grid>\n                                       </Grid>\n                                   </div>\n                               </Card>\n                           </Grid>\n                       </Grid>:\n                      <Grid container justify=\"center\" key={`${index}_${list.adminQuizId}`} className={classes.grid}>\n                      <Grid item xs={12} sm={7} md={6}lg={3} >\n                              <Card className=\"card\"  onClick={()=>{handleClick(list.adminQuizId,list.bannerImage,list.title,list.slug)}} >\n                                  <div>  \n                                      <Grid container>\n                                          <Grid item xs={12} sm={12} md={12}lg={12} className=\"content-bg\" >\n                                              <CardContent className=\"card-category\">\n                                                  <h3 className=\"content\">{list.title}</h3>\n                                              </CardContent>\n                                          </Grid>\n                                      </Grid>\n                                  </div>\n                              </Card>\n                          </Grid>\n                  </Grid>\n                       }\n                       </>\n                        )\n                })\n                }  \n                 <Footer/>\n         </Grid>\n         :null\n            }\n            \n        \n         </>\n        );\n}\n\nexport default QuizCategory;\n","import React, { useState, useEffect } from 'react';\nimport '../style/personform.css';\nimport { Grid, Card } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Footer from '../footer/Footer';\nimport { withCookies, Cookies, useCookies } from 'react-cookie';\nimport { useHistory, useParams } from 'react-router-dom';\nimport services from '../../services/services';\nimport { Helmet } from 'react-helmet';\nimport MetaTags from 'react-meta-tags';\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  list: {\n    margin: \"25px auto\",\n    textAlign: \"center\"\n  },\n  add: {\n    width: \"100%\"\n  },\n  card: {\n    marginTop: \"60px\"\n  },\n  banner: {\n    maxHeight: \"238px\",\n    width: \"100%\",\n    margin: \"0 auto\",\n  }\n\n}));\n\nfunction PersonForm(props) {\n  const classes = useStyles();\n  const { id } = useParams()\n  const history = useHistory()\n  const [data, setData] = useState(false);\n  const [cookies, setCookie] = useCookies(['userInfo']);\n  const [quiz, setQuiz] = useState([])\n\n\n  useEffect(() => {\n    getQuiz();\n  }, [])\n\n  const getQuiz = async () => {\n    const data = {\n      quizSlug: id\n    }\n    const options = {\n      method: 'Post',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.READ\",\n      }\n    }\n    const result = await services.getQuiz(data, options);\n    document.title = result.data.data[0].title;  \n    document.getElementsByTagName(\"META\")[1].content = result.data.data[0].title;\n    document.getElementsByTagName(\"META\")[2].content = result.data.data[0].image_base_path + result.data.data[0].bannerImage;\n    setQuiz(result.data.data[0])\n  };\n  const handleSubmit = () => {\n    var name = document.getElementById(\"name\").value;\n\n    if ((name == \"\") || (name == null) || (name.length <= 2)) {\n      alert(\"please enter required name\");\n    }\n\n    else {\n      var data = {\n        name: name\n      }\n      localStorage.setItem(\"userInfo\", JSON.stringify(data));\n      setCookie(\"userInfo\", JSON.stringify(data));\n      history.push({ pathname: \"/quiz\", state: { slug: { id } } });\n    }\n\n  }\n  return (\n    <>\n      <div className={classes.gridContainer}>\n        <Grid container>\n          <Grid item xs>\n            <Helmet>\n              <title>{quiz.title}</title>\n              {/* <meta property=\"og:image\" content={quiz.bannerImage} /> */}\n\n            </Helmet>\n\n            {/* <MetaTags>\n            <title>{quiz.title}</title>\n            <meta name=\"description\" content=\"Some description.\" />\n            <meta property=\"og:title\" content={quiz.title} />\n            <meta property=\"og:type\" content=\"article\" />\n            <meta property=\"og:image\" content={quiz.bannerImage}/>\n          </MetaTags> */}\n          </Grid>\n          <Grid item xs={11} sm={6} md={6} lg={4} className={classes.card} >\n            <Card className=\"quiz-card\">\n              <div className={classes.head}>\n                <h3 className=\"quiztext\">{quiz.title}</h3>\n                {\n                  quiz.bannerImage ? <img className={classes.banner} src={`${quiz.image_base_path}/${quiz.bannerImage}`} /> : null\n                }\n              </div>\n              <h3 className=\"personname\">What is Your Name</h3>\n              <input type=\"text\" id=\"name\" className=\"formname\" placeholder=\"Enter Your Name\" required /><br />\n              <div className=\"start-wrapper\">\n                <button className=\"started\" onClick={handleSubmit}> Start</button>\n              </div>\n            </Card>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n        <br />\n        <Grid container>\n          <Grid item xs></Grid>\n          <Grid item className={classes.list} xs={11} sm={6} md={6} lg={4}>\n            <a href=\"#\">\n              <img src=\"/assets/image/Image5.png\" className={classes.add} />\n            </a>\n          </Grid>\n          <Grid item xs></Grid>\n        </Grid>\n\n        <Footer />\n      </div>\n\n    </>\n  );\n}\n\nexport default PersonForm\n","import React, { useState, useEffect } from 'react'\nimport { Grid, Card, CardContent } from '@material-ui/core';\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport '../style/playquiz.css'\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport services from '../../services/services';\nimport { Redirect } from 'react-router-dom';\nimport Footer from '../footer/Footer';\nimport { Helmet } from 'react-helmet';\n\nconst BorderLinearProgress = withStyles((theme) => ({\n  root: {\n    height: 10,\n    borderRadius: 5,\n    width: \"100%\",\n  },\n  colorPrimary: {\n    backgroundColor: theme.palette.grey[theme.palette.type === 'light' ? 200 : 700],\n  },\n  bar: {\n    borderRadius: 5,\n    backgroundColor: '#FFDD52',\n  },\n}))(LinearProgress);\n\nconst useStyles = makeStyles((theme) => ({\n  gridContainer: {\n    paddingLeft: \"20px\",\n    paddingRight: \"20px\",\n    background: \"#7555D9\",\n    minHeight: \"100vh\"\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  pro: {\n    textAlign: \"center\"\n  }\n\n}));\nfunction PlayQuizPart({ quizdata, que }) {\n  let [score, setScore] = useState({ value: 0 })\n  const [activeStep, setActiveStep] = React.useState(0);\n  const [meter, setMeter] = useState(false);\n  const [allResult, setAllResult] = useState([]);\n  const [correctAns, setCorrectAns] = useState(0);\n  const [clickedAns, setClickedAns] = useState(0);\n  const [progress, setProgress] = useState(0);\n  const [count, setCount] = useState(1);\n  let [answerList, setAnswerList] = React.useState([]);\n  const data = JSON.parse(localStorage.getItem('userInfo'));\n  const name = data['name'];\n\n\n  let quiz = [\n    {\n      label: que?.question,\n      options: que?.options,\n      answer: que?.answer\n    },\n  ];\n\n  const classes = useStyles();\n  if (que?.length) {\n    quiz = que;\n  }\n\n  function showProgress(index) {\n\n    var increment = Math.ceil((count) / (maxSteps) * 100);\n    setProgress(increment)\n\n  }\n  const maxSteps = quiz.length;\n  const handleSelect = (label) => {\n    setClickedAns(label)\n    if (label === quiz[activeStep].answer) {\n      score = { value: ++score.value };\n      setCorrectAns(quiz[activeStep].answer)\n      setAnswerList([\n        ...\n        answerList,\n        {\n          qusId: count,\n          answer: label,\n          correct: \"yes\"\n        }\n      ])\n    }\n    else {\n      setCorrectAns(quiz[activeStep].answer)\n      setAnswerList([\n        ...\n        answerList,\n        {\n          qusId: count,\n          answer: label,\n          correct: \"no\"\n        }\n      ])\n    }\n\n  }\n  const handleNext = (label) => {\n    if (maxSteps - 1 != activeStep) {\n      handleSelect(label);\n      setTimeout(() => {\n        setActiveStep(prevActiveStep => prevActiveStep + 1)\n        setCount(count + 1)\n      }, 300)\n      handleSelect(label);\n    }\n    else {\n      handleSelect(label);\n      setTimeout(() => {\n        handleSubmit([...answerList, {\n          qusId: count,\n          answer: label,\n          correct: \"yes\"\n        }])\n      }, 500)\n\n    }\n    showProgress(quiz[activeStep].qusId);\n  }\n\n  const handleSubmit = async ([...answerList]) => {\n    const data = {\n      quizId: quizdata[0].adminQuizId,\n      score: score.value,\n      playerName: name,\n      answers: answerList\n    }\n    const options = {\n      method: 'POST',\n      headers: {\n        \"Apiuserid\": \"49507884\",\n        \"Scope\": \"In.QuizApp.INSERT\",\n      }\n    }\n    const result = await services.saveAnswer(data, options)\n    setAllResult(result.data.data)\n    setMeter(result.data.code)\n\n  }\n  if (meter === 200) {\n    return (<Redirect to={{\n      pathname: '/quizscore', state: { quizLength: { maxSteps }, score: { score }, name: { name }, resultData: { allResult } }\n    }} push={true}\n    />\n    )\n\n  }\n  return (\n    <div className={classes.gridContainer}>\n      <Grid container>\n  <Helmet><title>{quizdata[0].title}</title></Helmet>\n        <Grid item xs></Grid>\n        <Grid item xs={11} sm={6} md={6} lg={4} >\n          <div justify=\"center\">\n            <h3 className=\"title\">{quizdata[0].title}</h3>\n           </div>\n          <div justify=\"center\">\n            <h4 className=\"question\">Question <span>{count}/{maxSteps}</span></h4>\n          </div>\n          <div justify=\"center\">\n            <BorderLinearProgress variant=\"determinate\" value={progress} />\n          </div>\n          <Card className=\"playoptioncard\">\n            <h3 className=\"questionname\">{quiz[activeStep].questionTitle}</h3>\n            <div className=\"playcard\">\n              {\n                quiz[activeStep]?.optionsArray?.map((options, index) => {\n\n                  return (\n                    <div key={index}>\n                      {options.optionImg.length ?\n                        <Grid\n                          container\n                          className={\n                            correctAns === options.optionLabel ?\n                              'correctplay' :\n                              clickedAns === options.optionLabel ?\n                                'incorrectplay' : 'options'}\n                          correct={quiz[activeStep].answer}\n                          onClick={() => { handleNext(options.optionLabel) }}\n                          key={index}\n                          id=\"cardbox\">\n\n\n                          <Grid item xs={4} sm={4} md={4} lg={4} className=\"image-div\" >\n                            <img className=\"optionImg\" src={`${quizdata[0].image_base_path}/${options.optionImg}`} />\n                          </Grid>\n                          <Grid item xs={8} sm={8} md={8} lg={8} className=\"optionbg\" >\n                            <CardContent className=\"cardcontent\">\n                              <h3 className=\"optioncontent\" id=\"cardText\">\n                                {options.optionLabel}\n                              </h3>\n                            </CardContent>\n                       </Grid>\n                        </Grid>\n                        :\n\n                        <Grid justify=\"center\" container className=\"new\">\n                          <Grid item xs={10} sm={10} md={10} lg={10}\n                            className={\n                              correctAns === options.optionLabel ?\n                                'correctplay' :\n                                clickedAns === options.optionLabel ?\n                                  'incorrectplay' : 'options'}\n                            correct={quiz[activeStep].answer}\n                            onClick={() => { handleNext(options.optionLabel) }}\n                            key={index}\n                            id=\"cardbox\">\n                             <CardContent className=\"newcontent\">\n                              <h3 className=\"optioncontent\" id=\"cardText\">\n                                {options.optionLabel}\n                              </h3>\n                            </CardContent>\n\n                          </Grid>\n                        </Grid>\n                      }</div>\n\n                  )\n\n                })\n              }\n            </div>\n          </Card>\n        </Grid>\n        <Grid item xs></Grid>\n      </Grid>\n      <Footer />\n    </div>\n  )\n}\n\nexport default PlayQuizPart\n","import React, { useEffect, useState } from 'react';\nimport services from '../../services/services';\nimport PlayQuizPart from './PlayQuizPart';\n\n\nfunction PlayQuizPartApi(props) {\n   const slug=props.location.state.slug.id;\n   const [quiz,setQuiz]=useState([])\n   const [que,setQue]=useState([])\n  \n   useEffect(() => {\n       getQuiz();\n   }, [])\n \n   const getQuiz = async () => {\n        const data={\n          quizSlug:slug\n        }\n       const options = {\n           method: 'Post',\n           headers: {\n               \"Apiuserid\": \"49507884\",\n               \"Scope\": \"In.QuizApp.READ\",\n           }\n       }\n       const result = await services.getQuiz(data,options)\n       setQuiz(result.data.data)\n       setQue(JSON.parse(result.data.data[0].questionData))\n   };\n \n   \n\n    return (\n        <div>\n            {\n                 que?.length &&\n               <PlayQuizPart quizdata={quiz} que={que}/>\n            }\n               \n        </div>\n    )\n}\n\nexport default PlayQuizPartApi\n","import React, { useState, useEffect } from 'react';\nimport '../style/score.css';\nimport '../style/quizscore.css';\nimport {  Grid, Card} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport ReactSpeedometer from \"react-d3-speedometer\";\nimport { Link } from 'react-router-dom';\nimport Footer from '../footer/Footer';\n\n\n\n\nconst useStyles = makeStyles((theme)=>({\n    gridContainer: {\n      paddingLeft: \"20px\",\n      paddingRight: \"20px\",\n      background:\"#7555D9\",\n      minHeight:\"100vh\"\n    },\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: 'center',\n        color: theme.palette.text.secondary,\n      },\n      tagimage:{\n        maxHeight:\"238px\",\n        width:\"100%\",\n        margin:\"0 auto\",\n        padding:\"15px\"\n    },\n    buttongrid:{\n        marginTop:\"20px\"\n    }\n    \n    \n  }));\n  \nfunction QuizScore(props) {\n    var mylevel=props.location.state.score.score.value;\n    var question=props.location.state.quizLength.maxSteps;\n    const name=props.location.state.name.name;\n    const allresult=props.location.state.resultData.allResult;\n    console.log(allresult)\n    const classes = useStyles();\n    return (\n    <>\n    <div className={classes.gridContainer}>\n    <Grid container>\n            <Grid item xs></Grid>\n            <Grid item xs={11} sm={6} md={4} lg={3} >\n                <Card className=\"player-list\">\n                    <Grid container justify=\"center\">\n    <span className=\"pname\"  >{name}</span>\n                </Grid>\n                </Card>\n            </Grid>\n           <Grid item xs></Grid>\n       </Grid>\n    <Grid container>\n       <Grid item xs></Grid>\n      <Grid item xs={11} sm={6} md={4} lg={3} >\n          <Card className=\"score-card\">\n    <span className=\"tagline\">{allresult[0].title}</span>\n            <Grid container justify=\"center\">  \n                <ReactSpeedometer\n                    maxValue={20}\n                    value={allresult[0].needle}\n                    minValue={0}\n                    className=\"speedometer\"\n                    segments={4}\n                    ringWidth={60}\n                    needleHeightRatio={.5}\n                    needleTransition={\"easeBackInOut\"}\n                    segmentColors={[\"#fff\",\" #fff\",\" #fff\",\" #fff\"]}\n                    needleColor={\"#707070\"}\n                    customSegmentLabels={[\n                      {\n                        text: \"😡\",\n                        position: \"INSIDE\",\n                        color:\"#fff\",\n                        fontSize:\"35px\",\n                        \n                      \n                        \n                      },\n                      {\n                        text: \"😐\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                        \n                      },\n                      \n                      {\n                        text: \"😊\",\n                        position: \"INSIDE\",\n                        color: \"#fff\",\n                        fontSize:\"35px\",\n                      \n                      },\n                      {\n                        text: \"😍\",\n                        position: \"INSIDE\",\n                        color:\"#fff\",\n                        fontSize:\"35px\",\n                      \n                        \n                      },\n                    ]}\n                /> \n             </Grid>\n        </Card>\n\n    </Grid>\n    <Grid item xs></Grid>\n</Grid>\n    <br/>\n\n    <Grid container>\n        <Grid item xs></Grid>\n        <Grid item xs={11} sm={6} md={6} lg={3} className={classes.imageBg}>\n        <Card className=\"tagimg-card\">\n        <Grid container justify=\"center\">\n        <h4 className=\"score-value\">Your Score:{mylevel}/{question}</h4>\n             </Grid>\n        <Grid container justify=\"center\">\n             <img className={classes.tagimage} src={`https://app-admin.webestfriends.com/uploads/${allresult[0].resultImage}`}/>\n             </Grid>\n             <Grid container justify=\"center\">\n             <h4 className=\"score-value\">{allresult[0].phrase}</h4>\n             </Grid>\n             </Card>\n         </Grid>\n        <Grid item xs></Grid>\n    </Grid>\n    <Grid container className={classes.buttongrid}>\n        <Grid item xs></Grid>\n        <Grid item xs={11} sm={6} md={6} lg={3}>\n        <Grid container  justify=\"center\">\n        <Link to=\"/quizcategory\"><button className=\"copy\">Play More Quiz</button></Link>  \n            <Link to=\"/\"><button className=\"copy\">Create Your Quiz</button></Link>\n            </Grid>  \n             </Grid>\n        <Grid item xs></Grid>\n    </Grid>\n    <Footer/>\n    </div>\n    \n    </>\n);\n}\n\nexport default QuizScore\n","import React,{browserHistory } from 'react';\nimport './App.css';\nimport Login from './admin/login/Login';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport User from './admin/management/User';\nimport Category from './admin/category/Category';\nimport Protected from './services/Protected'\nimport Question from './admin/question/Question';\nimport UserCategory from './user/category/UserCategory'\nimport  Form from './user/form/Form';\nimport ShareLink from './user/form/ShareLink';\nimport FriendLink from './user/form/FriendLink';\nimport Score from './user/form/Score';\nimport Gmail from './user/form/Gmail';\nimport PlayQuizApi from './user/form/PlayQuizApi';\nimport Privacy from './user/form/Privacy';\nimport Discliamer from './user/form/Discliamer';\nimport QuestionApi from './user/question/QuestionApi';\nimport AllQuestionList from './admin/question/AllQuestionList';\nimport CreateQuiz from './admin/create/CreateQuiz';\nimport Quizlist from './admin/create/Quizlist';\nimport View from './admin/create/View';\nimport Result from './admin/create/Result';\nimport ViewAns from './admin/create/ViewAns';\nimport EditQuiz from './admin/create/EditQuiz';\nimport QuizCategory from './user/category/QuizCategory';\nimport PersonForm from './user/QuilPlayPart/PersonForm';\nimport PlayQuizPartApi from './user/QuilPlayPart/PlayQuizPartApi';\nimport QuizScore from './user/QuilPlayPart/QuizScore';\nfunction App() {\n  return (\n    <>\n    \n      <Router history={browserHistory}>\n        <Switch>\n          {/* admin part  */}\n           <Route path=\"/login\"exact component={Login}/>\n           <Protected path=\"/usermanagement\" exact component={User}/>\n           <Protected path=\"/category\" exact component={Category}/>\n           <Protected path=\"/question\" exact component={Question}/>\n           <Protected path=\"/createQuiz\" exact component={CreateQuiz}/>\n           <Protected path=\"/quizlist\" exact component={Quizlist}/>\n           <Protected path=\"/editQuiz/:id\" exact component={EditQuiz}/>\n           <Protected path=\"/view/:id\" exact component={View}/>\n           <Protected path=\"/result/:id\" exact component={Result}/>\n           <Protected path=\"/playeranswer/:id\" exact component={ViewAns}/>\n           <Protected path=\"/allquestionlist/:id\" exact component={AllQuestionList} />\n             {/* this part is category with question */}\n           <Route path=\"/\" exact component={UserCategory}/>\n           <Route path=\"/form\" exact component={Form}/> \n           <Route path=\"/questionlist\" exact component={QuestionApi}/>\n           <Route path=\"/sharelink\" exact component={ShareLink}/>\n           <Route path=\"/quizlink\" exact component={PlayQuizApi}/>\n           <Route path=\"/friendlink/:id\" exact component={FriendLink}/>\n           <Route path=\"/score\" exact component={Score}/>\n           {/* this part is direct quiz part to play */}\n           <Route path=\"/quizcategory\" exact component={QuizCategory}/>\n           <Route path=\"/quizform/:id\" exact component={PersonForm}/> \n           <Route path=\"/quiz\" exact component={PlayQuizPartApi}/>\n           <Route path=\"/quizscore\" exact component={QuizScore}/>\n            {/* footer part */}\n           <Route path=\"/contact\" exact component={Gmail}/>\n           <Route path=\"/privacy\" exact component={Privacy}/>\n           <Route path=\"/disclaimer\" exact component={Discliamer}/>\n           </Switch>\n      </Router>\n      \n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { CookiesProvider } from 'react-cookie';\n\nReactDOM.render(\n  <CookiesProvider>\n    <App />\n  </CookiesProvider>\n   \n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}